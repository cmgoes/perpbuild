{"version":3,"sources":["constants/blockchain.ts","helpers/switch-network.ts","hooks/web3Context.tsx","hooks/helpers/index.tsx","hooks/useResponsive.ts","Header/index.tsx","helpers/set-all.ts","store/slices/markets-slice.ts","container/trade/index.tsx","container/amm/index.tsx","Pages/Trade/components/Marketselector.tsx","Pages/Trade/components/MobilePriceHeader.tsx","Pages/Trade/components/PriceHeader.tsx","Pages/Trade/components/BuyingPower.tsx","Pages/Trade/components/Sideswitcher.tsx","constants/number.ts","util/format.ts","hooks/useDebounce.ts","Pages/Trade/components/Collateral.tsx","Pages/Trade/components/Slippage.tsx","store/slices/position-slice.ts","store/slices/messages-slice.ts","constants/messages.ts","helpers/sleep.ts","helpers/metamask-error-wrap.ts","Pages/Trade/components/SendTransaction.tsx","Pages/Positions/components/PositionList.tsx","Pages/Positions/index.tsx","Pages/Trade/index.tsx","store/slices/user-slice.ts","Pages/Home/components/CollateralBalance.tsx","Pages/Home/components/CollateralBoard.tsx","Pages/Home/index.tsx","components/Messages/index.tsx","App.tsx","reportWebVitals.ts","store/store.ts","components/Messages/snackbar.tsx","index.tsx"],"names":["Networks","DEFAULD_NETWORK","OPTIMISM","switchRequest","window","ethereum","request","method","params","chainId","swithNetwork","code","chainName","rpcUrls","blockExplorerUrls","nativeCurrency","name","symbol","decimals","console","log","Web3Context","React","createContext","useWeb3Context","web3Context","useContext","Error","onChainProvider","useMemo","Web3ContextProvider","children","useState","connected","setConnected","chainID","providerChainID","setProviderChainID","address","setAddress","uri","StaticJsonRpcProvider","provider","setProvider","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","web3Modal","hasCachedProvider","cachedProvider","_initListeners","useCallback","rawProvider","on","setTimeout","location","reload","chain","changeNetwork","_newNetwork","oldNetwork","otherChainID","network","Number","connect","connectedProvider","Web3Provider","getNetwork","then","getSigner","getAddress","connectedAddress","checkWrongNetwork","disconnect","clearCachedProvider","Provider","value","useResponsive","query","start","end","theme","useTheme","mediaUp","useMediaQuery","breakpoints","up","mediaDown","down","mediaBetween","between","mediaOnly","only","useStyles","makeStyles","desktopWrapper","borderBottom","mobileWrapper","bottom","borderTop","menuLists","link","text","ConnectMenu","web3","isConnected","top","left","right","state","setState","isDesktop","classes","navigate","useNavigate","buttonText","clickFunc","anchor","toggleDrawer","open","event","type","key","useEffect","AppBar","position","className","sx","backgroundColor","backgroundImage","py","px","Box","display","flexGrow","justifyContent","alignItems","pl","Typography","variant","fontWeight","textAlign","Link","href","textDecoration","fontFamily","color","IconButton","size","edge","onClick","mr","p","fontSize","Drawer","onClose","height","flexDirection","width","role","onKeyDown","map","menuList","index","component","NavLink","to","cursor","mb","list","Button","pr","setAll","properties","Object","keys","forEach","calcMarketDetails","createAsyncThunk","perpetualObject","tickerSymbol","init","Marketmap","markets","marketMap","contractReader","getIndexPrice","baseAddress","_marketIndexPrice","toFixed","marketIndexPrice","marketsSlice","createSlice","initialState","isMarketInfoCalculated","isMarketInfoInitialized","reducers","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","error","actions","createSelector","Trade","createContainer","PositionSide","LONG","side","setPositionSide","Big","slippage","setSlippage","collateral","setCollateral","_collateral","_setCollateral","PerpetualProtocol","SupportedChainIds","providerConfigs","rpcUrl","AMM","marketticker","setMarketTicker","MarketSelector","useContainer","setOpen","FormControl","InputLabel","id","userSelect","Select","labelId","label","defaultValue","onOpen","onChange","target","inputProps","IconComponent","border","borderRadius","mt","MenuProps","PaperProps","bgcolor","boxSizing","market","MenuItem","MobilePriceHeader","anchorEl","setAnchorEl","Boolean","undefined","currentTarget","background","lineHeight","Popover","anchorOrigin","vertical","horizontal","maxWidth","Stack","data","handleChange","PriceHeader","dispatch","useDispatch","useSelector","CalcMarketDetails","timer","setInterval","clearInterval","xs","sm","ml","md","xl","Grid","container","spacing","item","BuyingPower","buyingPower","positions","SideSwitcher","handleLongOnClick","handleShortOnClick","SHORT","ButtonGroup","borderTopRightRadius","borderBottomRightRadius","borderRightColor","borderTopLeftRadius","borderBottomLeftRadius","borderLeftColor","RegExp","formatInput","input","digits","firstDotIndex","indexOf","formattedString","split","filter","alphabet","join","includes","length","substr","useDebounce","delay","onBeforeDebounce","onAfterDebounce","debouncedValue","setDebouncedValue","handler","clearTimeout","Collateral","debouncedCollateral","handleOnInput","e","formattedValue","b_debouncedCollateral","eq","TextField","placeholder","InputProps","endAdornment","InputAdornment","borderColor","borderWidth","Slippage","_slippage","_setSlippage","debouncedSlippage","b_debouncedSlippage","minWidth","calcPositionDetails","networkID","amountInput","isAmountInputBase","Promise","resevle","oppositeAmount","newPositionDraft","entryPrice","tradingFee","priceImpact","clearingHouse","createPositionDraft","getEntryPrice","entryPriceBound","getTransactionFee","tradingFeeBound","getPriceImpact","priceImpactBound","getOppositeAmountBound","oppositeAmountBound","signer","getBuyingPower","buyingPowerBound","openedPositionDetails","hasConnected","getTakerPositionByTickerSymbol","close","isLoss","posSize","pendingValue","isProfit","pnlValue","openPrice","indexPrice","liquidationPrice","marginRatio","leverage","_posSize","sizeAbs","_side","getVaultBalanceOfSettlementToken","VaultBalanceSettlement","getNativeBalance","NativeValue","getAllowanceByToken","AllowanceValue","wallet","settlementToken","balanceOf","positionActions","getTotalPendingFundingPayments","_pendingValue","_isLoss","s","pnlValueCalc","getUnrealizedPnl","_pnlValue","_isProfit","_openPrice","_indexPrice","_liquidationPrice","getAccountMarginRatio","_marginRatio","getAccountLeverage","_leverage","positionsSlice","isPositionOpened","isCalculated","isOpenedPositionCalculated","createMessage","severity","message","messagesSlice","info","warning","success","messages","sleep","seconds","resolve","metamaskErrorWrap","err","SendTransaction","outputSymbol","substring","_perpetualObject","isDisabled","handleOpen","openPosition","openTx","transaction","wait","CalcPosition","loadProvider","CalcOpenedPosition","readOnly","pb","disabled","paddingY","mx","PositionList","handleClose","closePosition","closeTx","lg","TabPanel","props","other","hidden","a11yProps","Positions","setValue","Tabs","newValue","textColor","TabIndicatorProps","style","minHeight","textTransform","Tab","calcUserCollateralDetails","getFreeCollateral","_freeCollateral","getAccountValue","_accountValue","vault","getBalanceList","_collateralBalanceList","getFreeCollateralList","_collateralFreeCollateralList","freeCollateral","accountValue","collateralBalanceList","collateralFreeCollateralList","calcUserAccountDetails","getAllowanceList","_allowanceList","_balanceList","getBalanceEth","_balanceEth","getCollateralTokenPriceList","_collateraltokenpricelist","_collateralTokenList","collateralTokenList","allowanceList","balanceList","balanceEth","collateralTokenPriceList","changeApproval","tokenIndex","approve","approveTx","changeDepositCollateral","amount","deposit","depositTx","depositETH","withdrawCollateral","withdraw","withdrawTx","withdrawETH","userSlice","isUserCollateralCalculated","isUserCollateralInitialized","isUserAccountCalculated","user","CollateralBoard","CalcUserCollateralDetails","modalStyle","transform","outline","outlineOffset","boxShadow","TokenList","openDepositModal","setDepositModalOpen","openWithdrawModal","setWithdrawModalOpen","modalIndex","setModalIndex","onTransaction","setOnTransaction","tokenValue","setTokenValue","handleDepositModalOpen","handleWithdrawModalOpen","handleModalClose","handleTokenValueChange","floatRegExp","dotRegExp","test","filteredValue","Math","floor","handleMaxValue","onSeekApproval","onSeekDeposit","onSeekWithdraw","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","scope","padding","CircularProgress","Modal","OutlinedInput","toNumber","Home","pt","CollateralBalance","Messages","enqueueSnackbar","useSnackbar","JSON","stringify","App","path","element","replace","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","messagesReducer","positionsReducer","middleware","getDefaultMiddleware","serializableCheck","root","card","typography","actionRoot","icons","marginLeft","expand","transition","expandOpen","collapse","checkIcon","paddingRight","checkIconCopy","button","errorWrap","marginTop","errorText","whiteSpace","maxHeight","overflow","SnackMessage","forwardRef","ref","closeSnackbar","expanded","setExpanded","isCopy","setIsCopy","handleExpandClick","oldExpanded","handleDismiss","Card","classnames","CardActions","getIcon","Collapse","in","timeout","unmountOnExit","onCopy","Providers","providers","reduceRight","ReactDOM","render","StrictMode","maxSnack","content","parse","autoHideDuration","document","getElementById"],"mappings":"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","file":"static/js/main.bb0515a0.chunk.js","sourcesContent":["export const TOKEN_DECIMALS = 9;\r\n\r\nexport enum Networks {\r\n    // AVAX = 43114,\r\n    OPTIMISM = 10, // for mainnet\r\n    OPTIMISM_GOERLI = 420, // for optimism goerli\r\n}\r\n\r\nexport const DEFAULD_NETWORK = Networks.OPTIMISM;\r\n// export const DEFAULD_NETWORK = Networks.OPTIMISM_GOERLI;\r\n","import { Networks } from \"../constants/blockchain\";\r\n\r\nconst switchRequest = () => {\r\n    return window.ethereum.request({\r\n        method: \"wallet_switchEthereumChain\",\r\n        params: [{ chainId: \"0xa\" }],\r\n    });\r\n};\r\n\r\nconst addChainRequest = () => {\r\n    return window.ethereum.request({\r\n        method: \"wallet_addEthereumChain\",\r\n        params: [\r\n            {\r\n                chainId: \"0xa\",\r\n                chainName: \"Optimistic Ethereum\",\r\n                rpcUrls: [\"https://mainnet.optimism.io/\"],\r\n                blockExplorerUrls: [\"https://optimistic.etherscan.io\"],\r\n                nativeCurrency: {\r\n                    name: \"OETH\",\r\n                    symbol: \"OETH\",\r\n                    decimals: 18,\r\n                },\r\n            },\r\n        ],\r\n    });\r\n};\r\n\r\nexport const swithNetwork = async () => {\r\n    if (window.ethereum) {\r\n        try {\r\n            await switchRequest();\r\n        } catch (error: any) {\r\n            if (error.code === 4902) {\r\n                try {\r\n                    await addChainRequest();\r\n                    await switchRequest();\r\n                } catch (addError) {\r\n                    console.log(error);\r\n                }\r\n            }\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n","import React, { useState, ReactElement, useContext, useMemo, useCallback } from \"react\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { StaticJsonRpcProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { getMainnetURI } from \"./helpers\";\r\nimport { Networks, DEFAULD_NETWORK } from \"../constants/blockchain\";\r\n// import { messages } from \"../../constants/messages\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { swithNetwork } from \"../helpers/switch-network\";\r\n\r\ntype onChainProvider = {\r\n    connect: () => Promise<Web3Provider>;\r\n    disconnect: () => void;\r\n    checkWrongNetwork: () => Promise<boolean>;\r\n    provider: JsonRpcProvider;\r\n    address: string;\r\n    connected: Boolean;\r\n    web3Modal: Web3Modal;\r\n    chainID: number;\r\n    web3?: any;\r\n    providerChainID: number;\r\n    hasCachedProvider: () => boolean;\r\n};\r\n\r\nexport type Web3ContextData = {\r\n    onChainProvider: onChainProvider;\r\n} | null;\r\n\r\nconst Web3Context = React.createContext<Web3ContextData>(null);\r\n\r\nexport const useWeb3Context = () => {\r\n    const web3Context = useContext(Web3Context);\r\n    if (!web3Context) {\r\n        throw new Error(\"useWeb3Context() can only be used inside of <Web3ContextProvider />, \" + \"please declare it at a higher level.\");\r\n    }\r\n    const { onChainProvider } = web3Context;\r\n    return useMemo(() => {\r\n        return { ...onChainProvider };\r\n    }, [web3Context]);\r\n};\r\n\r\nexport const useAddress = () => {\r\n    const { address } = useWeb3Context();\r\n    return address;\r\n};\r\n\r\nexport const Web3ContextProvider: React.FC<{ children: ReactElement }> = ({ children }) => {\r\n    // const dispatch = useDispatch();\r\n\r\n    const [connected, setConnected] = useState(false);\r\n    const [chainID, setChainID] = useState(DEFAULD_NETWORK);\r\n    const [providerChainID, setProviderChainID] = useState(DEFAULD_NETWORK);\r\n    const [address, setAddress] = useState(\"\");\r\n\r\n    const [uri, setUri] = useState(getMainnetURI());\r\n    const [provider, setProvider] = useState<JsonRpcProvider>(new StaticJsonRpcProvider(uri));\r\n\r\n    const [web3Modal] = useState<Web3Modal>(\r\n        new Web3Modal({\r\n            cacheProvider: true,\r\n            providerOptions: {\r\n                walletconnect: {\r\n                    package: WalletConnectProvider,\r\n                    options: {\r\n                        rpc: {\r\n                            [Networks.OPTIMISM]: getMainnetURI(),\r\n                            // [Networks.OPTIMISM_GOERLI]: getMainnetURI(),\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        }),\r\n    );\r\n\r\n    const hasCachedProvider = (): boolean => {\r\n        if (!web3Modal) return false;\r\n        if (!web3Modal.cachedProvider) return false;\r\n        return true;\r\n    };\r\n\r\n    const _initListeners = useCallback(\r\n        (rawProvider: JsonRpcProvider) => {\r\n            if (!rawProvider.on) {\r\n                return;\r\n            }\r\n\r\n            rawProvider.on(\"accountsChanged\", () => setTimeout(() => window.location.reload(), 1));\r\n\r\n            rawProvider.on(\"chainChanged\", async (chain: number) => {\r\n                changeNetwork(chain);\r\n            });\r\n\r\n            rawProvider.on(\"network\", (_newNetwork, oldNetwork) => {\r\n                if (!oldNetwork) return;\r\n                window.location.reload();\r\n            });\r\n        },\r\n        [provider],\r\n    );\r\n\r\n    const changeNetwork = async (otherChainID: number) => {\r\n        const network = Number(otherChainID);\r\n\r\n        setProviderChainID(network);\r\n    };\r\n\r\n    const connect = useCallback(async () => {\r\n        const rawProvider = await web3Modal.connect();\r\n\r\n        _initListeners(rawProvider);\r\n\r\n        const connectedProvider = new Web3Provider(rawProvider, \"any\");\r\n\r\n        const chainId = await connectedProvider.getNetwork().then(network => Number(network.chainId));\r\n        const connectedAddress = await connectedProvider.getSigner().getAddress();\r\n\r\n        setAddress(connectedAddress);\r\n\r\n        setProviderChainID(chainId);\r\n\r\n        if (chainId === Networks.OPTIMISM) {\r\n            setProvider(connectedProvider);\r\n        }\r\n        // if (chainId === Networks.OPTIMISM_GOERLI) {\r\n        //     setProvider(connectedProvider);\r\n        // }\r\n\r\n        setConnected(true);\r\n\r\n        return connectedProvider;\r\n    }, [provider, web3Modal, connected]);\r\n\r\n    const checkWrongNetwork = async (): Promise<boolean> => {\r\n        if (providerChainID !== DEFAULD_NETWORK) {\r\n            // const shouldSwitch = window.confirm(messages.switch_to_avalanche);            \r\n            await swithNetwork();\r\n            window.location.reload();            \r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const disconnect = useCallback(async () => {\r\n        web3Modal.clearCachedProvider();\r\n        setConnected(false);\r\n\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 1);\r\n    }, [provider, web3Modal, connected]);\r\n\r\n    const onChainProvider = useMemo(\r\n        () => ({\r\n            connect,\r\n            disconnect,\r\n            hasCachedProvider,\r\n            provider,\r\n            connected,\r\n            address,\r\n            chainID,\r\n            web3Modal,\r\n            providerChainID,     \r\n            checkWrongNetwork,       \r\n        }),\r\n        [connect, disconnect, hasCachedProvider, provider, connected, address, chainID, web3Modal, providerChainID],\r\n    );\r\n    //@ts-ignore\r\n    return <Web3Context.Provider value={{ onChainProvider }}>{children}</Web3Context.Provider>;\r\n};\r\n","export const getMainnetURI = (): string => {\r\n  return \"https://mainnet.optimism.io\";  \r\n};\r\n","// @mui\r\nimport { useTheme, Breakpoint } from '@mui/material/styles';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype ReturnType = boolean;\r\n\r\ntype Query = 'up' | 'down' | 'between' | 'only';\r\n\r\ntype Value = Breakpoint | number;\r\n\r\nexport default function useResponsive(query: Query, start?: Value, end?: Value): ReturnType {\r\n  const theme = useTheme();\r\n\r\n  const mediaUp = useMediaQuery(theme.breakpoints.up(start as Value));\r\n\r\n  const mediaDown = useMediaQuery(theme.breakpoints.down(start as Value));\r\n\r\n  const mediaBetween = useMediaQuery(theme.breakpoints.between(start as Value, end as Value));\r\n\r\n  const mediaOnly = useMediaQuery(theme.breakpoints.only(start as Breakpoint));\r\n\r\n  if (query === 'up') {\r\n    return mediaUp;\r\n  }\r\n\r\n  if (query === 'down') {\r\n    return mediaDown;\r\n  }\r\n\r\n  if (query === 'between') {\r\n    return mediaBetween;\r\n  }\r\n\r\n  return mediaOnly;\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype BreakpointOrNull = Breakpoint | null;\r\n\r\nexport function useWidth() {\r\n  const theme = useTheme();\r\n\r\n  const keys = [...theme.breakpoints.keys].reverse();\r\n\r\n  return (\r\n    keys.reduce((output: BreakpointOrNull, key: Breakpoint) => {\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      const matches = useMediaQuery(theme.breakpoints.up(key));\r\n\r\n      return !output && matches ? key : output;\r\n    }, null) || 'xs'\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  Drawer,  \r\n  IconButton,  \r\n  Link,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport classnames from \"classnames\";\r\nimport WalletIcon from \"@mui/icons-material/Wallet\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport EastIcon from \"@mui/icons-material/East\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { useWeb3Context } from \"../hooks/web3Context\";\r\nimport useResponsive from \"../hooks/useResponsive\";\r\nimport { DEFAULD_NETWORK } from \"../constants/blockchain\";\r\n\r\ntype Anchor = \"top\" | \"left\" | \"bottom\" | \"right\";\r\n\r\nconst useStyles = makeStyles({\r\n  desktopWrapper: {\r\n    borderBottom: \"1px solid rgba(255, 255, 255, 0.16)\",\r\n  },\r\n\r\n  mobileWrapper: {\r\n    bottom: 0,\r\n    borderTop: \"1px solid rgba(255, 255, 255, 0.16)\",\r\n  },\r\n});\r\n\r\nconst menuLists = [\r\n  {\r\n    link: \"/account\",\r\n    text: \"Account\",\r\n  },\r\n  {\r\n    link: \"/trade\",\r\n    text: \"Trade\",\r\n  },\r\n  {\r\n    link: \"/pools\",\r\n    text: \"Pools\",\r\n  },\r\n];\r\n\r\nfunction ConnectMenu() {\r\n  const {\r\n    connect,\r\n    disconnect,\r\n    connected,\r\n    web3,\r\n    address,\r\n    provider,\r\n    providerChainID,\r\n    checkWrongNetwork,\r\n  } = useWeb3Context();\r\n  const [isConnected, setConnected] = useState(connected);\r\n\r\n  const [state, setState] = useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const isDesktop = useResponsive(\"up\", \"md\");\r\n  const classes = useStyles();\r\n  let navigate = useNavigate();\r\n\r\n  let buttonText = \"Connect\";\r\n  let clickFunc: any = connect;\r\n\r\n  if (isConnected) {\r\n    buttonText = \"Disconnect\";\r\n    clickFunc = disconnect;\r\n  }\r\n\r\n  if (isConnected && providerChainID !== DEFAULD_NETWORK) {\r\n    buttonText = \"Wrong network\";\r\n    // buttonStyle = { backgroundColor: \"rgb(255, 67, 67)\" };\r\n    clickFunc = () => {\r\n      checkWrongNetwork();\r\n    };\r\n  }\r\n\r\n  const handleClickMenu = (link: string) => {\r\n    navigate(link);\r\n  };\r\n\r\n  const toggleDrawer =\r\n    (anchor: Anchor, open: boolean) =>\r\n    (event: React.KeyboardEvent | React.MouseEvent) => {\r\n      if (\r\n        event.type === \"keydown\" &&\r\n        ((event as React.KeyboardEvent).key === \"Tab\" ||\r\n          (event as React.KeyboardEvent).key === \"Shift\")\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      setState({ ...state, [anchor]: open });\r\n    };\r\n\r\n  useEffect(() => {\r\n    setConnected(connected);\r\n  }, [web3, connected]);\r\n\r\n  const list = (anchor: Anchor) => (\r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"space-between\"\r\n      flexGrow=\"1\"\r\n      sx={{ width: anchor === \"top\" || anchor === \"bottom\" ? \"auto\" : 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <Typography variant=\"h5\" fontWeight=\"700\">\r\n        <Link href=\"/\" sx={{ textDecoration: \"none\", fontFamily: \"Montserrat Medium\", color: \"rgb(236, 232, 227)\" }}>\r\n          DERIVERSE\r\n        </Link>\r\n      </Typography>\r\n      <Box>\r\n        {menuLists.map((menuList, index) => (\r\n          <Box key={menuList.text}>\r\n            <Link\r\n              component={NavLink}\r\n              to={menuList.link}\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                textDecoration: \"none\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <Typography color=\"rgb(169, 168, 166)\" fontSize=\"18px\" fontFamily=\"Montserrat Medium\" mb=\"20px\">\r\n                {menuList.text}\r\n              </Typography>\r\n              <EastIcon\r\n                sx={{ color: \"rgb(120, 120, 120)\", fontSize: \"20px\" }}\r\n              />\r\n            </Link>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <AppBar\r\n      position={isDesktop ? \"static\" : \"fixed\"}\r\n      className={isDesktop ? classes.desktopWrapper : classes.mobileWrapper}\r\n      sx={{\r\n        backgroundColor: \"#131312\",\r\n        backgroundImage: \"none\",\r\n        top: \"auto\",\r\n        py: 2,\r\n        px: 2,\r\n      }}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexGrow={1}\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        pl=\"8px\"\r\n      >\r\n        {isDesktop && (\r\n          <Typography variant=\"h5\" fontWeight=\"700\" textAlign=\"center\">\r\n            <Link href=\"/\" sx={{ textDecoration: \"none\", fontFamily: \"Montserrat Bold\", color: \"rgb(236, 232, 227)\" }}>\r\n              DERIVERSE\r\n            </Link>\r\n          </Typography>\r\n        )}\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            flexGrow: \"1\",\r\n          }}\r\n        >\r\n          <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={toggleDrawer(\"bottom\", true)}\r\n            sx={{ mr: 2, display: isDesktop ? \"none\" : \"\", p: \"0 6px\" }}\r\n          >\r\n            <MenuIcon sx={{ fontSize: \"32px\", color: \"rgb(120, 120, 120)\" }} />\r\n          </IconButton>\r\n          <Drawer\r\n            anchor=\"bottom\"\r\n            open={state[\"bottom\"]}\r\n            onClose={toggleDrawer(\"bottom\", false)}\r\n            sx={{\r\n              \"& .MuiDrawer-paper\": {\r\n                height: `calc(100vh - 121px)`,\r\n                bottom: \"73px\",\r\n                backgroundColor: \"rgba(9, 9, 10, 1)\",\r\n                p: \"24px 32px\",\r\n              },\r\n            }}\r\n          >\r\n            {list(\"bottom\")}\r\n          </Drawer>\r\n          <Box\r\n            sx={{\r\n              display: isDesktop ? \"flex\" : \"none\",\r\n              justifyContent: \"space-between\",\r\n              \"& .MuiTypography-root:hover\": { color: \"rgb(236, 232, 227)\" },\r\n            }}\r\n          >\r\n            {menuLists.map((list, key) => (\r\n              <Typography\r\n                key={key}\r\n                sx={{\r\n                  pl: 4,\r\n                  cursor: \"pointer\",\r\n                  fontFamily: \"Montserrat\",\r\n                  color: \"rgb(169, 168, 166)\",\r\n                }}\r\n                onClick={() => handleClickMenu(list.link)}\r\n              >\r\n                {list.text}\r\n              </Typography>\r\n            ))}\r\n          </Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              cursor: \"pointer\",\r\n              backgroundColor: \"transparent\",\r\n              color: \"rgba(101, 230, 255, 1)\",\r\n              fontSize: \"16px\",\r\n              \"&:hover\": { backgroundColor: \"rgba(101, 239, 255, 0.12)\" },\r\n            }}\r\n            onClick={clickFunc}\r\n          >\r\n            <WalletIcon sx={{ color: \"rgba(101, 230, 255, 1)\", pr: 1 }} />\r\n            {buttonText}\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default ConnectMenu;\r\n","export const setAll = (state: any, properties: any) => {\r\n    const props = Object.keys(properties);\r\n    props.forEach(key => {\r\n        state[key] = properties[key];\r\n    });\r\n};\r\n","import { createSlice,createAsyncThunk, createSelector } from \"@reduxjs/toolkit\";\r\nimport { JsonRpcProvider, StaticJsonRpcProvider } from \"@ethersproject/providers\";\r\nimport { Networks, DEFAULD_NETWORK } from \"../../constants/blockchain\";\r\nimport { setAll } from \"../../helpers/set-all\";\r\nimport { PerpetualProtocol } from \"@perp/sdk-curie\";\r\nimport Big from \"big.js\";\r\nimport { RootState } from \"../store\";\r\n\r\ninterface ICalcMarketDetails { \r\n\tperpetualObject: PerpetualProtocol;\t\r\n\ttickerSymbol: string;\r\n}\r\n\r\nexport const calcMarketDetails = createAsyncThunk(\"market/calcMarketDetails\", \r\n\tasync({ perpetualObject, tickerSymbol }: ICalcMarketDetails) => {\r\n\t\tawait perpetualObject.init();\r\n\t\tconst Marketmap = perpetualObject.markets.marketMap;\t\r\n\t\tconst _marketIndexPrice = await perpetualObject.contractReader.getIndexPrice(Marketmap[tickerSymbol].baseAddress);\r\n\t\tconsole.log(\"Update index price\", _marketIndexPrice.toFixed(2));\r\n\t\treturn {\r\n\t\t\tmarketIndexPrice: _marketIndexPrice.toFixed(2)\r\n\t\t}\r\n});\r\n\r\nconst initialState = {\r\n\tisMarketInfoCalculated: false,\r\n\tisMarketInfoInitialized: false,\t\r\n}\r\n\r\nexport interface IMarketsSlice {\t\r\n\tisMarketInfoCalculated: boolean,\r\n\tisMarketInfoInitialized: boolean,\t\t\r\n\tmarketIndexPrice: string,\t\r\n}\r\n\r\nconst marketsSlice = createSlice({\r\n\tname: \"markets\",\r\n\tinitialState,\r\n\treducers: {\t\t\t\r\n\t},\r\n\textraReducers: builder => {\r\n\t\tbuilder\t\t\t\r\n\t\t\t.addCase(calcMarketDetails.pending, state => {\t\t\t\r\n\t\t\t\tstate.isMarketInfoCalculated = false;\r\n\t\t\t})\r\n\t\t\t.addCase(calcMarketDetails.fulfilled, (state, action) => {\r\n\t\t\t\tsetAll(state, action.payload);\r\n\t\t\t\tstate.isMarketInfoCalculated = true;\t\r\n\t\t\t\tstate.isMarketInfoInitialized = true;\r\n\t\t\t})\r\n\t\t\t.addCase(calcMarketDetails.rejected, (state, { error }) => {\r\n\t\t\t\tstate.isMarketInfoCalculated = false;\t\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\t\t\t\r\n\t},    \r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.markets;\r\nexport const { } = marketsSlice.actions;\r\n\r\nexport default marketsSlice.reducer;\r\n\r\nexport const getAppState = createSelector(baseInfo, markets => markets);","import { useMemo, useState } from \"react\"\r\nimport { createContainer } from \"unstated-next\"\r\nimport { PerpetualProtocol, PositionSide, SupportedChainIds } from \"@perp/sdk-curie\";\r\nimport Big from \"big.js\"\r\n\r\nexport const Trade = createContainer(useTrade)\r\n\r\nfunction useTrade() {\r\n    /* long = 1, short = 0 */\r\n    const [side, setPositionSide] = useState<PositionSide>(PositionSide.LONG);\r\n\r\n    /* min: 1, max: 10 */\r\n    // const [leverage, setLeverage] = useState<number>(1)\r\n\r\n    /* min: 0% */\r\n    const [slippage, setSlippage] = useState<Big>(new Big(0.02));\r\n\r\n    const [collateral, setCollateral] = useState<Big>(new Big(0));  \r\n    const [_collateral, _setCollateral] = useState<string>('');    \r\n\r\n    const [perpetualObject, setPerpetualObject] = useState<PerpetualProtocol>(new PerpetualProtocol({\r\n\t\t// chainId: SupportedChainIds.OPTIMISM_GOERLI,\r\n\t\tchainId: SupportedChainIds.OPTIMISM,   \r\n\t\t// chainId: 420,                 \r\n\t\tproviderConfigs: [\r\n\t\t\t{\r\n\t\t\t\t// rpcUrl: \"https://mainnet.optimism.io\",\r\n                rpcUrl: \"https://optimism-mainnet.infura.io/v3/dd583584ac144f7984ac22cb0595646e\",\r\n                // rpcUrl: \"https://optimism-mainnet.infura.io\",                \r\n                // rpcUrl: \"https://opt-mainnet.g.alchemy.com/v2/NqisNVbk-thJAQJMZKXdtIy-Vlyfryj-\",                \r\n\t\t\t\t// rpcUrl: \"https://goerli.optimism.io/\",\t\t\t\t\t\t\t\t\r\n\t\t\t},\r\n\t\t],\r\n\t}));\r\n\r\n    return useMemo(\r\n        () => ({\r\n            side,\r\n            setPositionSide,            \r\n            slippage,\r\n            setSlippage,\r\n            collateral,\r\n            setCollateral, \r\n            _collateral,\r\n            _setCollateral,            \r\n            perpetualObject,            \r\n        }),\r\n        [side, slippage, collateral, _collateral],\r\n    )\r\n}\r\n","import { useMemo, useState } from \"react\"\r\nimport { createContainer } from \"unstated-next\"\r\n\r\nexport const AMM = createContainer(useAMM)\r\n\r\nfunction useAMM() {    \r\n    const [marketticker, setMarketTicker] = useState<string>('ETHUSD');   \r\n\r\n    return useMemo(\r\n        () => ({\r\n            marketticker,\r\n            setMarketTicker\r\n        }),\r\n        [marketticker, setMarketTicker],\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  IconButton,\r\n  InputLabel,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { AMM } from \"../../../container/amm\";\r\n\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport ArrowDropUpIcon from \"@mui/icons-material/ArrowDropUp\";\r\n\r\nfunction MarketSelector() {\r\n  const MarketList = [\"BTCUSD\", \"ETHUSD\", \"BNBUSD\", \"AVAXUSD\"];\r\n\r\n  const { marketticker, setMarketTicker } = AMM.useContainer();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleChange = (event: SelectChangeEvent<typeof marketticker>) => {\r\n    setMarketTicker(event.target.value);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <FormControl>\r\n      <InputLabel\r\n        id=\"demo-simple-select-label\"\r\n        sx={{\r\n          color: \"rgb(169, 168, 166)\",\r\n          top: \"18px\",\r\n          left: \"56px\",\r\n          fontFamily: \"Montserrat Light\",\r\n          userSelect: \"none\",\r\n          \"&.Mui-focused\": { color: \"rgb(169, 168, 166)\" },\r\n        }}\r\n      >\r\n        Market\r\n      </InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-label\"\r\n        id=\"demo-simple-select\"\r\n        label=\"Age\"\r\n        defaultValue={\"ETHUSD\"}\r\n        open={open}\r\n        onClose={handleClose}\r\n        onOpen={handleOpen}\r\n        onChange={handleChange}\r\n        inputProps={{ \"aria-label\": \"Without label\" }}\r\n        IconComponent={() =>\r\n          open ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />\r\n        }\r\n        sx={{\r\n          width: \"220px\",\r\n          border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n          borderRadius: \"10px\",\r\n          color: \"rgb(236, 232, 227)\",\r\n          fontFamily: \"Montserrat Medium\",\r\n          height: \"58px\",\r\n          backgroundColor: \"rgb(37, 37, 37)\",\r\n          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": { border: \"none\" },\r\n          \"& .MuiSelect-select\": { p: \"0 16px\", mt: \"18px\" },\r\n        }}\r\n        MenuProps={{\r\n          PaperProps: {\r\n            sx: {\r\n              bgcolor: \"rgb(37, 37, 37)\",\r\n              color: \"rgb(236, 232, 227)\",\r\n              borderRadius: \"10px\",\r\n              boxSizing: \"border-box\",\r\n              width: \"220px\",\r\n              border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n              left: \"24px !important\",\r\n              top: \"152px !important\",\r\n              \"& .MuiList-root\": {\r\n                p: \"0\",\r\n              },\r\n              \"& .MuiMenuItem-root\": {\r\n                p: \"12px 16px\",\r\n              },\r\n              \"& .MuiMenuItem-root:not(:last-child)\": {\r\n                borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {MarketList.map((market) => (\r\n          <MenuItem key={market} value={market} sx={{ color: \"white\" }}>\r\n            {market}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default MarketSelector;\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Popover,\r\n  MenuItem,\r\n  Stack,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { AMM } from \"../../../container/amm\";\r\n\r\nfunction MobilePriceHeader() {\r\n  const MarketList = [\"BTCUSD\", \"ETHUSD\", \"BNBUSD\", \"AVAXUSD\"];\r\n\r\n  const { marketticker, setMarketTicker } = AMM.useContainer();\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\r\n    null\r\n  );\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleChange = (data: string) => {\r\n    setMarketTicker(data);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={handleClick}\r\n        sx={{\r\n          display: \"flex\",\r\n          height: \"55px\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n          p: \"4px 16px\",\r\n          boxSizing: \"border-box\",\r\n          borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n          background: \"rgb(37, 37, 37)\",\r\n          borderRadius: \"0\",\r\n        }}\r\n      >\r\n        <Box>\r\n          <Typography\r\n            color=\"rgb(120, 120, 120)\"\r\n            lineHeight=\"1.2\"\r\n            fontSize=\"12px\"\r\n          >\r\n            Market\r\n          </Typography>\r\n          <Typography color=\"rgb(236, 232, 227)\" lineHeight=\"1.2\">\r\n            {marketticker}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Typography color=\"rgb(120, 120, 120)\">$1638.04</Typography>\r\n        </Box>\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        sx={{\r\n          \"& .MuiPopover-paper\": {\r\n            left: \"0 !important\",\r\n            top: \"60px !important\",\r\n            width: \"100%\",\r\n            maxWidth: '100%',\r\n            borderRadius: \"0\",            \r\n          },\r\n        }}\r\n      >\r\n        <Stack\r\n          sx={{\r\n            background: \"rgb(37, 37, 37)\",\r\n            border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n          }}\r\n        >\r\n          {MarketList.map((data) => (\r\n            <MenuItem\r\n              key={data}\r\n              onClick={() => handleChange(data)}\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                color: \"rgb(236, 232, 227)\",\r\n                borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                py: 1,\r\n                fontFamily: \"Montserrat Medium\",\r\n                \"&:last-child\": { borderBottom: \"none\" },\r\n                boxSizing: \"border-box\",\r\n              }}\r\n            >\r\n              <Typography>{data}</Typography>\r\n              <Typography color=\"rgb(120, 120, 120)\">$1638.04</Typography>\r\n            </MenuItem>\r\n          ))}\r\n        </Stack>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MobilePriceHeader;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IReduxState } from \"../../../store/slices/state.interface\";\r\nimport { calcMarketDetails } from \"../../../store/slices/markets-slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Trade } from \"../../../container/trade\";\r\nimport { AMM } from \"../../../container/amm\";\r\nimport { AppDispatch } from \"../../../store/store\";\r\n\r\nimport { Box, Grid, Typography } from \"@mui/material\";\r\n\r\nimport MarketSelector from \"./Marketselector\";\r\nimport MobilePriceHeader from \"./MobilePriceHeader\";\r\nimport useResponsive from \"../../../hooks/useResponsive\";\r\n\r\nfunction PriceHeader() {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { perpetualObject } = Trade.useContainer();\r\n  const { marketticker } = AMM.useContainer();\r\n  const isDesktop = useResponsive(\"up\", \"md\");\r\n  const isMarketInfoCalculated = useSelector<IReduxState, boolean>((state) => {\r\n    return state.markets.isMarketInfoCalculated;\r\n  });\r\n\r\n  const isMarketInfoInitialized = useSelector<IReduxState, boolean>((state) => {\r\n    return state.markets.isMarketInfoInitialized;\r\n  });\r\n\r\n  const marketIndexPrice = useSelector<IReduxState, string>((state) => {\r\n    return state.markets.marketIndexPrice;\r\n  });\r\n\r\n  const CalcMarketDetails = function () {\r\n    dispatch(\r\n      calcMarketDetails({\r\n        perpetualObject: perpetualObject,\r\n        tickerSymbol: marketticker,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    CalcMarketDetails();\r\n    const timer = setInterval(() => CalcMarketDetails(), 300000);\r\n    return () => clearInterval(timer);\r\n  }, [marketticker]);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"#131312\",\r\n        py: isDesktop ? 2 : 0,\r\n        px: isDesktop ? 3 : 0,\r\n      }}\r\n    >\r\n      {isDesktop && (\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"flex-start\",\r\n            alignItems: \"center\",\r\n            flexDirection: { xs: \"column\", sm: \"row\" },\r\n          }}\r\n        >\r\n          <MarketSelector />\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n              pl: 2,\r\n              ml: 2,\r\n              py: 1,\r\n              border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n              borderRadius: \"10px\",\r\n              flexGrow: \"1\",\r\n            }}\r\n          >\r\n            <Box sx={{ pr: { xs: 2, md: 3, xl: 4 } }}>\r\n              <Typography\r\n                sx={{\r\n                  fontSize: \"0.75rem\",\r\n                  color: \"rgb(169, 168, 166)\",\r\n                  fontFamily: \"Montserrat Light\",\r\n                }}\r\n              >\r\n                Index Price\r\n              </Typography>\r\n              {isMarketInfoCalculated ? (\r\n                <Typography\r\n                  sx={{\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    fontFamily: \"Montserrat\",\r\n                  }}\r\n                >\r\n                  {marketIndexPrice}\r\n                </Typography>\r\n              ) : (\r\n                [\r\n                  isMarketInfoInitialized ? (\r\n                    <Typography\r\n                      sx={{\r\n                        color: \"rgb(236, 232, 227)\",\r\n                        fontFamily: \"Montserrat\",\r\n                      }}\r\n                    >\r\n                      {marketIndexPrice}\r\n                    </Typography>\r\n                  ) : (\r\n                    <Typography\r\n                      sx={{\r\n                        color: \"rgb(236, 232, 227)\",\r\n                        fontFamily: \"Montserrat\",\r\n                      }}\r\n                    >\r\n                      0.0\r\n                    </Typography>\r\n                  ),\r\n                ]\r\n              )}\r\n            </Box>\r\n            <Box sx={{ pr: { xs: 2, md: 3, xl: 4 } }}>\r\n              <Typography\r\n                sx={{\r\n                  fontSize: \"0.75rem\",\r\n                  color: \"rgb(169, 168, 166)\",\r\n                  fontFamily: \"Montserrat Light\",\r\n                }}\r\n              >\r\n                Volume (24h)\r\n              </Typography>\r\n              <Typography\r\n                sx={{\r\n                  color: \"rgb(236, 232, 227)\",\r\n                  fontFamily: \"Montserrat\",\r\n                }}\r\n              >\r\n                5,798,410.3\r\n              </Typography>\r\n            </Box>\r\n            <Box sx={{ pr: { xs: 2, md: 3, xl: 4 } }}>\r\n              <Typography\r\n                sx={{\r\n                  fontSize: \"0.75rem\",\r\n                  color: \"rgb(169, 168, 166)\",\r\n                  fontFamily: \"Montserrat Light\",\r\n                }}\r\n              >\r\n                Funding Rate (8h)\r\n              </Typography>\r\n              <Typography\r\n                sx={{\r\n                  color: \"rgb(236, 232, 227)\",\r\n                  fontFamily: \"Montserrat\",\r\n                }}\r\n              >\r\n                0.0071%\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      {!isDesktop && (\r\n        <>\r\n          <MobilePriceHeader />\r\n          <Box p=\"16px\">\r\n            <Typography\r\n              fontSize=\"14px\"\r\n              textAlign=\"left\"\r\n              fontFamily=\"Montserrat Medium\"\r\n              color=\"rgb(255, 184, 0)\"\r\n            >\r\n              MARKET STATS\r\n            </Typography>\r\n            <Box\r\n              sx={{\r\n                flexGrow: 1,\r\n                mt: 1,\r\n                p: 2,\r\n                border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                borderRadius: \"10px\",\r\n              }}\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid\r\n                  item\r\n                  xs={6}\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"0.75rem\",\r\n                        color: \"rgb(169, 168, 166)\",\r\n                        fontFamily: \"Montserrat Light\",\r\n                      }}\r\n                    >\r\n                      Index Price\r\n                    </Typography>\r\n                    {isMarketInfoCalculated ? (\r\n                      <Typography\r\n                        sx={{\r\n                          color: \"rgb(236, 232, 227)\",\r\n                          fontFamily: \"Montserrat\",\r\n                        }}\r\n                      >\r\n                        {marketIndexPrice}\r\n                      </Typography>\r\n                    ) : (\r\n                      [\r\n                        isMarketInfoInitialized ? (\r\n                          <Typography\r\n                            sx={{\r\n                              color: \"rgb(236, 232, 227)\",\r\n                              fontFamily: \"Montserrat\",\r\n                            }}\r\n                          >\r\n                            {marketIndexPrice}\r\n                          </Typography>\r\n                        ) : (\r\n                          <Typography\r\n                            sx={{\r\n                              color: \"rgb(236, 232, 227)\",\r\n                              fontFamily: \"Montserrat\",\r\n                            }}\r\n                          >\r\n                            0.0\r\n                          </Typography>\r\n                        ),\r\n                      ]\r\n                    )}\r\n                  </Box>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={6}\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"0.75rem\",\r\n                        color: \"rgb(169, 168, 166)\",\r\n                        fontFamily: \"Montserrat Light\",\r\n                      }}\r\n                    >\r\n                      Volume (24h)\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{\r\n                        color: \"rgb(236, 232, 227)\",\r\n                        fontFamily: \"Montserrat\",\r\n                      }}\r\n                    >\r\n                      5,798,410.3\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"0.75rem\",\r\n                        color: \"rgb(169, 168, 166)\",\r\n                        fontFamily: \"Montserrat Light\",\r\n                      }}\r\n                    >\r\n                      Funding Rate (8h)\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{\r\n                        color: \"rgb(236, 232, 227)\",\r\n                        fontFamily: \"Montserrat\",\r\n                      }}\r\n                    >\r\n                      0.0071%\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default PriceHeader;\r\n","import { useSelector } from \"react-redux\";\r\nimport { IReduxState } from \"../../../store/slices/state.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { Box, Button, Typography } from \"@mui/material\";\r\n\r\nfunction BuyingPower() {\r\n  const buyingPower = useSelector<IReduxState, string>((state) => {\r\n    return state.positions.buyingPower;\r\n  });\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      p=\"16px\"\r\n      border=\"1px solid rgba(255, 255, 255, 0.12)\"\r\n      borderRadius=\"10px\"\r\n    >\r\n      <Typography\r\n        fontSize=\"13px\"\r\n        fontFamily=\"Montserrat\"\r\n        color=\"rgb(169, 168, 166)\"        \r\n      >\r\n        Buying Power\r\n      </Typography>\r\n      <Typography\r\n        fontSize=\"13px\"\r\n        fontFamily=\"Montserrat\"\r\n        color=\"rgb(236, 232, 227)\"  \r\n      >\r\n        ${buyingPower}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default BuyingPower;\r\n","import { useCallback } from \"react\";\r\n\r\nimport { ButtonGroup, Button } from \"@mui/material\";\r\n\r\nimport { PositionSide } from \"@perp/sdk-curie\";\r\nimport { Trade } from \"../../../container/trade\";\r\n\r\nfunction SideSwitcher() {\r\n  const { side, setPositionSide } = Trade.useContainer();\r\n  const handleLongOnClick = useCallback(() => {\r\n    if (side !== PositionSide.LONG) {\r\n      setPositionSide(PositionSide.LONG);\r\n    }\r\n  }, [setPositionSide, side]);\r\n\r\n  const handleShortOnClick = useCallback(() => {\r\n    if (side !== PositionSide.SHORT) {\r\n      setPositionSide(PositionSide.SHORT);\r\n    }\r\n  }, [setPositionSide, side]);\r\n\r\n  return (\r\n    <ButtonGroup\r\n      size=\"large\"\r\n      sx={{\r\n        py: \"16px\",\r\n        border: \"none\",\r\n        width: \"100%\",\r\n        \"& .MuiButtonGroup-grouped:not(:last-of-type)\": {\r\n          borderTopRightRadius: \"4px\",\r\n          borderBottomRightRadius: \"4px\",\r\n          borderRightColor:\r\n            side === PositionSide.LONG\r\n              ? \"rgb(0, 192, 117)\"\r\n              : \"rgba(255, 255, 255, 0.12)\",\r\n        },\r\n        \"& .MuiButtonGroup-grouped:not(:first-of-type)\": {\r\n          borderTopLeftRadius: \"4px\",\r\n          borderBottomLeftRadius: \"4px\",\r\n          borderLeftColor:\r\n            side === PositionSide.SHORT\r\n              ? \"rgb(253, 64, 64)\"\r\n              : \"rgba(255, 255, 255, 0.12)\",\r\n        },\r\n      }}\r\n    >\r\n      <Button\r\n        sx={{\r\n          width: \"50%\",\r\n          fontSize: \"12px\",\r\n          fontFamily: \"Montserrat\",\r\n          p: \"10px 20px\",\r\n          backgroundColor:\r\n            side === PositionSide.LONG\r\n              ? \"rgba(0, 192, 117, 0.05)\"\r\n              : \"transparent\",\r\n          color:\r\n            side === PositionSide.LONG\r\n              ? \"rgb(0, 192, 117)\"\r\n              : \"rgb(169, 168, 166)\",\r\n          border:\r\n            side === PositionSide.LONG\r\n              ? \"1px solid rgb(0, 192, 117)\"\r\n              : \"1px solid rgba(255, 255, 255, 0.12)\",\r\n          \"&: hover\": {\r\n            backgroundColor: \"rgba(0, 192, 117, 0.05)\",\r\n            border: \"1px solid rgb(0, 192, 117)\",\r\n          },\r\n        }}\r\n        onClick={handleLongOnClick}\r\n      >\r\n        Long\r\n      </Button>\r\n      <Button\r\n        sx={{\r\n          width: \"50%\",\r\n          fontSize: \"12px\",\r\n          fontFamily: \"Montserrat\",\r\n          p: \"10px 20px\",\r\n          backgroundColor:\r\n            side === PositionSide.SHORT\r\n              ? \"rgba(253, 64, 64, 0.05)\"\r\n              : \"transparent\",\r\n          color:\r\n            side === PositionSide.SHORT\r\n              ? \"rgb(253, 64, 64)\"\r\n              : \"rgb(169, 168, 166)\",\r\n          border:\r\n            side === PositionSide.SHORT\r\n              ? \"1px solid rgb(253, 64, 64)\"\r\n              : \"1px solid rgba(255, 255, 255, 0.12)\",\r\n          \"&: hover\": {\r\n            backgroundColor: \"rgba(253, 64, 64, 0.05)\",\r\n            border: \"1px solid rgb(253, 64, 64)\",\r\n          },\r\n        }}\r\n        onClick={handleShortOnClick}\r\n      >\r\n        Short\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n}\r\n\r\nexport default SideSwitcher;\r\n","import { Big } from \"big.js\"\r\nimport { BigNumber } from \"ethers\"\r\n\r\nexport const ERC20_DECIMAL_DIGITS = 18\r\nexport const USDC_DECIMAL_DIGITS = 6\r\n\r\nexport const USDC_PRECISION = 2\r\nexport const Slippage_PRECISION = 2\r\n\r\nexport const BIG_ZERO = new Big(0)\r\n\r\nexport interface Decimal {\r\n    d: BigNumber\r\n}\r\n","import { ERC20_DECIMAL_DIGITS, USDC_PRECISION } from \"../constants/number\"\r\n\r\nimport Big from \"big.js\"\r\nimport { BigNumber } from \"ethers\"\r\nimport { formatUnits } from \"ethers/lib/utils\"\r\n\r\nexport interface Decimal {\r\n    d: BigNumber\r\n}\r\n\r\n// Big Number to...\r\nexport function bigNum2FixedStr(\r\n    val: BigNumber,\r\n    decimals: number = ERC20_DECIMAL_DIGITS,\r\n    digits: number = USDC_PRECISION,\r\n): string {\r\n    return Number.parseFloat(formatUnits(val, decimals)).toFixed(digits)\r\n}\r\n\r\nexport function bigNum2Big(val: BigNumber, decimals: number = ERC20_DECIMAL_DIGITS): Big {\r\n    return new Big(val.toString()).div(new Big(10).pow(decimals))\r\n}\r\n\r\nexport function bigNum2Decimal(val: BigNumber): Decimal {\r\n    return { d: val }\r\n}\r\n\r\n// Big to...\r\nexport function big2BigNum(val: Big, decimals: number = ERC20_DECIMAL_DIGITS): BigNumber {\r\n    return BigNumber.from(val.mul(new Big(10).pow(decimals)).toFixed(0))\r\n}\r\n\r\nexport function big2Decimal(val: Big): Decimal {\r\n    return {\r\n        d: big2BigNum(val, ERC20_DECIMAL_DIGITS),\r\n    }\r\n}\r\n\r\n// Decimal to...\r\nexport function decimal2Big(decimal: Decimal): Big {\r\n    return bigNum2Big(decimal.d)\r\n}\r\n\r\n// check regex 101 online, https://regex101.com/r/EeneAE/1\r\n// to understand this regex\r\nconst regexUSLocaleNumber = new RegExp(/\\d(?=(\\d{3})+\\.)/g)\r\n\r\n// format number like 1000 => 1,000\r\nexport function numberWithCommas(number: string = \"\") {\r\n    return number.replace(regexUSLocaleNumber, \"$&,\")\r\n}\r\n\r\nexport function numberWithCommasUsdc(number: Big = new Big(0)) {\r\n    return numberWithCommas(number.toFixed(USDC_PRECISION))\r\n}\r\n\r\n// TODO: check is valid number\r\n// TODO: check is positive\r\n// TODO: use in slippage if possible\r\n// ex: if the input is 1.005 and the digits is 2, the function will return 1.00\r\nexport function formatInput(input: string, digits: number): string {\r\n    const firstDotIndex = input.indexOf(\".\")\r\n    const formattedString = input\r\n        .split(\"\")\r\n        .filter((alphabet, index) => {\r\n            return alphabet !== \".\" || index === firstDotIndex\r\n        })\r\n        .join(\"\")\r\n    return formattedString.includes(\".\") && formattedString.length > formattedString.indexOf(\".\") + (digits + 1)\r\n        ? formattedString.substr(0, formattedString.indexOf(\".\") + (digits + 1))\r\n        : formattedString\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nconst DEFAULT_DELAY = 200\r\n\r\ninterface DebounceArgs<T> {\r\n    value: T\r\n    delay?: number\r\n    onBeforeDebounce?: Function\r\n    onAfterDebounce?: Function\r\n}\r\n\r\nexport function useDebounce<T>({ value, delay = DEFAULT_DELAY, onBeforeDebounce, onAfterDebounce }: DebounceArgs<T>) {\r\n    const [debouncedValue, setDebouncedValue] = useState<T>(value)\r\n\r\n    useEffect(() => {\r\n        if (onBeforeDebounce) {\r\n            onBeforeDebounce(value)\r\n        }\r\n\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value)\r\n            if (onAfterDebounce) {\r\n                onAfterDebounce(value)\r\n            }\r\n        }, delay)\r\n\r\n        return () => {\r\n            clearTimeout(handler)\r\n        }\r\n    }, [value, delay, onBeforeDebounce, onAfterDebounce])\r\n\r\n    return debouncedValue\r\n}\r\n","import { useMemo, useCallback, useEffect } from \"react\";\r\n\r\nimport { Box, TextField, InputAdornment, Typography } from \"@mui/material\";\r\n\r\nimport Big from \"big.js\";\r\n\r\nimport { Trade } from \"../../../container/trade\";\r\nimport { USDC_PRECISION } from \"../../../constants/number\";\r\nimport { formatInput } from \"../../../util/format\";\r\n\r\nimport { useDebounce } from \"../../../hooks/useDebounce\";\r\n\r\nfunction Collateral() {\r\n  const { collateral, setCollateral } = Trade.useContainer();\r\n  const { _collateral, _setCollateral } = Trade.useContainer();\r\n\r\n  const debouncedCollateral = useDebounce({ value: _collateral, delay: 800 });\r\n\r\n  const handleOnInput = useCallback(\r\n    (e) => {\r\n      const value = e.target.value;\r\n      if (value >= 0) {\r\n        const formattedValue = formatInput(value, USDC_PRECISION);\r\n        _setCollateral(formattedValue);\r\n      }\r\n    },\r\n    [_setCollateral]\r\n  );\r\n\r\n  useEffect(() => {\r\n    /* reset collateral to null */\r\n    if (debouncedCollateral === \"\") {\r\n      // setCollateral(null);\r\n      return;\r\n    }\r\n    /* detect if the value is different */\r\n    const b_debouncedCollateral = new Big(debouncedCollateral);\r\n    if (!collateral?.eq(b_debouncedCollateral)) {\r\n      setCollateral(b_debouncedCollateral);\r\n    }\r\n  }, [collateral, debouncedCollateral, setCollateral]);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <>\r\n        <Typography\r\n          fontSize=\"13px\"\r\n          color=\"rgb(169, 168, 166)\"\r\n          p=\"4px 0\"\r\n          textAlign=\"left\"\r\n          fontFamily=\"Montserrat Light\"\r\n        >\r\n          Collateral\r\n        </Typography>\r\n        <Box sx={{ mb: 2, backgroundColor: \"rgb(11, 11, 11)\" }}>\r\n          <TextField\r\n            id=\"outlined-name\"\r\n            type=\"number\"\r\n            value={_collateral}\r\n            placeholder=\"0\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment\r\n                  position=\"end\"\r\n                  sx={{\r\n                    \"& .MuiTypography-root\": {\r\n                      fontSize: \"12px\",\r\n                      fontFamily: \"Montserrat Light\",\r\n                      color: \"rgb(169, 168, 166)\",\r\n                    },\r\n                  }}\r\n                >\r\n                  USDC\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={handleOnInput}\r\n            sx={{\r\n              width: \"100%\",\r\n              fontFamily: \"Montserrat\",\r\n              \"& > label, & .MuiFormLabel-root.Mui-focused\": {\r\n                color: \"rgb(169, 168, 166)\",\r\n              },\r\n              \"& .MuiOutlinedInput-notchedOutline, & .MuiInputBase-root:hover .MuiOutlinedInput-notchedOutline, & .MuiInputBase-root.Mui-focused .MuiOutlinedInput-notchedOutline\":\r\n                {\r\n                  borderColor: \"rgba(255, 255, 255, 0.12)\",\r\n                  borderWidth: \"1\",\r\n                },\r\n\r\n              \"& .MuiInputBase-input\": {\r\n                color: \"rgb(236, 232, 227)\",\r\n                p: \"12px 14px\",\r\n                fontSize: \"16px\",\r\n                fontFamily: \"Montserrat\",\r\n              },\r\n            }}\r\n          />\r\n        </Box>\r\n      </>\r\n    ),\r\n    [_collateral, handleOnInput]\r\n  );\r\n}\r\n\r\nexport default Collateral;\r\n","import { useState, useMemo, useCallback, useEffect } from \"react\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  InputAdornment,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nimport Big from \"big.js\";\r\n\r\nimport { Trade } from \"../../../container/trade\";\r\nimport { Slippage_PRECISION } from \"../../../constants/number\";\r\nimport { formatInput } from \"../../../util/format\";\r\n\r\nimport { useDebounce } from \"../../../hooks/useDebounce\";\r\n\r\nfunction Slippage() {\r\n  const { slippage, setSlippage } = Trade.useContainer();\r\n  const [_slippage, _setSlippage] = useState<string>(\"\");\r\n\r\n  const debouncedSlippage = useDebounce({ value: _slippage, delay: 800 });\r\n\r\n  const handleOnInput = useCallback(\r\n    (e) => {\r\n      const value = e.target.value;\r\n      if (value >= 0) {\r\n        const formattedValue = formatInput(value, Slippage_PRECISION);\r\n        _setSlippage(formattedValue);\r\n      }\r\n    },\r\n    [_setSlippage]\r\n  );\r\n\r\n  useEffect(() => {\r\n    /* reset collateral to null */\r\n    if (debouncedSlippage === \"\") {\r\n      // setSlippage(null);\r\n      return;\r\n    }\r\n    /* detect if the value is different */\r\n    const b_debouncedSlippage = new Big(debouncedSlippage);\r\n    if (!slippage?.eq(b_debouncedSlippage)) {\r\n      setSlippage(b_debouncedSlippage);\r\n    }\r\n  }, [slippage, debouncedSlippage, setSlippage]);\r\n\r\n  return useMemo(\r\n    () => (\r\n      <>\r\n        <Typography\r\n          fontSize=\"13px\"\r\n          color=\"rgb(169, 168, 166)\"\r\n          p=\"4px 0\"\r\n          textAlign=\"left\"\r\n          fontFamily=\"Montserrat Light\"\r\n        >\r\n          Slippage Tolerance\r\n        </Typography>\r\n        <Box display=\"flex\">\r\n          <Box sx={{ mb: 1, backgroundColor: \"rgb(11, 11, 11)\" }}>\r\n            <TextField\r\n              id=\"outlined-name\"\r\n              type=\"number\"\r\n              value={_slippage}\r\n              placeholder=\"0.02\"\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment\r\n                    position=\"end\"\r\n                    sx={{\r\n                      \"& .MuiTypography-root\": {\r\n                        fontSize: \"12px\",\r\n                        fontFamily: \"Montserrat Light\",\r\n                        color: \"rgb(169, 168, 166)\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    %\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              onChange={handleOnInput}\r\n              sx={{\r\n                width: \"100%\",\r\n                fontFamily: \"Montserrat\",\r\n                \"& > label, & .MuiFormLabel-root.Mui-focused\": {\r\n                  color: \"rgb(169, 168, 166)\",\r\n                },\r\n                \"& .MuiOutlinedInput-notchedOutline, & .MuiInputBase-root:hover .MuiOutlinedInput-notchedOutline, & .MuiInputBase-root.Mui-focused .MuiOutlinedInput-notchedOutline\":\r\n                  {\r\n                    borderColor: \"rgba(255, 255, 255, 0.12)\",\r\n                    borderWidth: \"1\",\r\n                  },\r\n\r\n                \"& .MuiInputBase-input\": {\r\n                  color: \"rgb(236, 232, 227)\",\r\n                  p: \"12px 14px\",\r\n                  fontSize: \"16px\",\r\n                  fontFamily: \"Montserrat\",\r\n                },\r\n              }}\r\n            />\r\n          </Box>\r\n          <Button\r\n            onClick={() => _setSlippage(\"0.01\")}\r\n            sx={{\r\n              width: \"47px\",\r\n              minWidth: \"47px\",\r\n              ml: \"16px\",\r\n              height: \"47px\",\r\n              p: \"8px 10px\",\r\n              border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n              background: \"rbg(37, 37, 37)\",\r\n              fontSize: \"13px\",\r\n              fontFamily: \"Montserrat\",\r\n              color: \"rgb(236, 232, 227)\",\r\n            }}\r\n          >\r\n            1%\r\n          </Button>\r\n          <Button\r\n            onClick={() => _setSlippage(\"0.015\")}\r\n            sx={{\r\n              width: \"47px\",\r\n              minWidth: \"47px\",\r\n              ml: \"16px\",\r\n              height: \"47px\",\r\n              p: \"8px 10px\",\r\n              border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n              background: \"rbg(37, 37, 37)\",\r\n              fontSize: \"13px\",\r\n              fontFamily: \"Montserrat\",\r\n              color: \"rgb(236, 232, 227)\",\r\n            }}\r\n          >\r\n            1.5%\r\n          </Button>\r\n          <Button\r\n            onClick={() => _setSlippage(\"0.02\")}\r\n            sx={{\r\n              width: \"47px\",\r\n              minWidth: \"47px\",\r\n              ml: \"16px\",\r\n              height: \"47px\",\r\n              p: \"8px 10px\",\r\n              border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n              background: \"rbg(37, 37, 37)\",\r\n              fontSize: \"13px\",\r\n              fontFamily: \"Montserrat\",\r\n              color: \"rgb(236, 232, 227)\",\r\n            }}\r\n          >\r\n            2%\r\n          </Button>\r\n        </Box>\r\n      </>\r\n    ),\r\n    [_slippage, handleOnInput]\r\n  );\r\n}\r\n\r\nexport default Slippage;\r\n","import { createSlice,createAsyncThunk, createSelector } from \"@reduxjs/toolkit\";\r\nimport { JsonRpcProvider, StaticJsonRpcProvider } from \"@ethersproject/providers\";\r\nimport { Networks, DEFAULD_NETWORK } from \"../../constants/blockchain\";\r\nimport { setAll } from \"../../helpers/set-all\";\r\nimport { PerpetualProtocol, PositionSide, PositionDraft } from \"@perp/sdk-curie\";\r\nimport Big from \"big.js\";\r\nimport { RootState } from \"../store\";\r\n\r\ninterface ICalcPositionDetails { \r\n\tconnected: Boolean;   \r\n  networkID: Networks;  \r\n\tprovider: StaticJsonRpcProvider | JsonRpcProvider;\r\n\tperpetualObject: PerpetualProtocol;\r\n\tside: PositionSide;\r\n\tslippage: Big;\r\n\ttickerSymbol: string;\r\n\tamountInput: Big;\t\r\n}\r\n\r\nexport const calcPositionDetails = createAsyncThunk(\"position/calcPositionDetails\", \r\n\tasync({connected, networkID, provider, perpetualObject, side, slippage, tickerSymbol, amountInput}: ICalcPositionDetails) => {\t\r\n\t\tconst isAmountInputBase = false;\t\r\n\t\tlet buyingPowerBound: Big;\r\n\t\t\t\t\t\t\t\r\n\t\tif(amountInput === null) {\r\n\t\t\treturn new Promise<any>(resevle => {\r\n\t\t\t\tresevle({\r\n\t\t\t\t\toppositeAmount: \"\",\t\t\t\t\t\r\n\t\t\t\t\tnewPositionDraft: undefined,\r\n\t\t\t\t\tentryPrice: \"\",\r\n\t\t\t\t\ttradingFee: \"\",\r\n\t\t\t\t\tpriceImpact: \"\",\r\n\t\t\t\t\tbuyingPower: \"\",\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif(amountInput.eq(0)) {\r\n\t\t\treturn new Promise<any>(resevle => {\r\n\t\t\t\tresevle({\r\n\t\t\t\t\toppositeAmount: \"0\",\t\t\t\t\t\r\n\t\t\t\t\tnewPositionDraft: undefined,\r\n\t\t\t\t\tentryPrice: \"\",\r\n\t\t\t\t\ttradingFee: \"\",\r\n\t\t\t\t\tpriceImpact: \"\",\r\n\t\t\t\t\tbuyingPower: \"\",\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\t\r\n\t\t\r\n\t\tawait perpetualObject.init();\t\t\r\n\r\n\t\tconst newPositionDraft = perpetualObject.clearingHouse?.createPositionDraft({\r\n\t\t\ttickerSymbol,\r\n\t\t\tside,\r\n\t\t\tamountInput,\r\n\t\t\tisAmountInputBase\r\n\t\t});\t\r\n\t\tconsole.log(\"NewPosition::\", newPositionDraft);\t\r\n\t\t\r\n\t\tconst entryPriceBound = await newPositionDraft!.getEntryPrice();\r\n\t\tconst tradingFeeBound = await newPositionDraft!.getTransactionFee();\r\n\t\tconst priceImpactBound = await newPositionDraft!.getPriceImpact();\t\t\r\n\t\tconst oppositeAmountBound = await newPositionDraft!.getOppositeAmountBound(slippage);\t\t\t\t\t\r\n\r\n\t\tif( connected === true && networkID === DEFAULD_NETWORK ) {\r\n\t\t\tawait perpetualObject.connect({ signer: provider.getSigner() });\r\n\t\t\tbuyingPowerBound = await newPositionDraft!.getBuyingPower();\t\r\n\t\t\treturn {\r\n\t\t\t\toppositeAmount: oppositeAmountBound!.toFixed(7),\t\t\r\n\t\t\t\tnewPositionDraft,\r\n\t\t\t\tentryPrice: entryPriceBound!.toFixed(2),\r\n\t\t\t\ttradingFee: tradingFeeBound!.toFixed(8),\r\n\t\t\t\tpriceImpact: priceImpactBound!.toFixed(5),\r\n\t\t\t\tbuyingPower: buyingPowerBound!.toFixed(4),\r\n\t\t\t};\r\n\t\t}\t\t\t\r\n\t\t\r\n\t\treturn {\r\n\t\t\toppositeAmount: oppositeAmountBound!.toFixed(7),\t\t\r\n\t\t\tnewPositionDraft,\r\n\t\t\tentryPrice: entryPriceBound!.toFixed(2),\r\n\t\t\ttradingFee: tradingFeeBound!.toFixed(8),\r\n\t\t\tpriceImpact: priceImpactBound!.toFixed(5),\r\n\t\t\tbuyingPower: '',\r\n\t\t};\r\n});\r\n\r\ninterface IOpenedPositionDetails {   \r\n\taddress: string; \r\n  networkID: Networks;\r\n  provider: StaticJsonRpcProvider | JsonRpcProvider;\r\n\tperpetualObject: PerpetualProtocol;\t\r\n\ttickerSymbol: string;\t\r\n}\r\n\r\nexport const openedPositionDetails = createAsyncThunk(\"position/openedPositionDetails\", \r\n\tasync({address, networkID, provider, perpetualObject, tickerSymbol}: IOpenedPositionDetails, { dispatch }) => {\r\n\t\tif( networkID === DEFAULD_NETWORK ) {        \r\n\t\t\tconst hasconnected = perpetualObject.hasConnected(); \t\t\t\r\n\t\t\tif(hasconnected === false) {\r\n\t\t\t\tawait perpetualObject.init();\r\n\t\t\t\tawait perpetualObject.connect({ signer: provider.getSigner() });\r\n\t\t\t}\t\t\r\n\t\t\tconst position = await perpetualObject?.positions?.getTakerPositionByTickerSymbol(tickerSymbol);  \r\n\t\t\tif(position !== undefined) {\r\n\t\t\t\tdispatch(open());          \r\n\t\t\t} else {\r\n\t\t\t\tdispatch(close());\t\t\t\t\r\n\t\t\t\treturn new Promise<any>(resevle => {\r\n\t\t\t\t\tresevle({\r\n\t\t\t\t\t\tisLoss: false,\t\t\t\t\t\r\n\t\t\t\t\t\tposSize: '',\r\n\t\t\t\t\t\tside: PositionSide.LONG,\r\n\t\t\t\t\t\tpendingValue: '',\r\n\t\t\t\t\t\tisProfit: false,\r\n\t\t\t\t\t\tpnlValue: '',\r\n\t\t\t\t\t\topenPrice: '',\r\n\t\t\t\t\t\tindexPrice: '',\r\n\t\t\t\t\t\tliquidationPrice: '',\r\n\t\t\t\t\t\tmarginRatio: '',\r\n\t\t\t\t\t\tleverage: ''\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t});\t\t\t\t\r\n\t\t\t}\t\t\r\n\t\t\t\r\n\t\t\tconst _posSize = position!.sizeAbs.toFixed(8);\t\t\t\r\n\t\t\tconst _side = position!.side;\t\r\n\t\t\tconst VaultBalanceSettlement = await perpetualObject.contractReader.getVaultBalanceOfSettlementToken(address); \t \r\n\t\t\tconsole.log(\"Vault Balance of Settlement\", VaultBalanceSettlement);\r\n\t\t\tconst NativeValue = await perpetualObject.contractReader.getNativeBalance(address); \t \r\n\t\t\tconsole.log(\"Native Value\", NativeValue);\r\n\t\t\tconst spender = \"0xAD7b4C162707E0B2b5f6fdDbD3f8538A5fbA0d60\";\r\n\t\t\tconst tokenaddress = \"0x94b008aA00579c1307B0EF2c499aD98a8ce58e58\";\r\n\t\t\tconst AllowanceValue = await perpetualObject.contractReader.getAllowanceByToken(address, spender, tokenaddress); \t \r\n\t\t\tconsole.log(\"Allowance Value\", AllowanceValue);\r\n\t\t\tconst positionActions = await perpetualObject.wallet!.settlementToken.balanceOf(address); \t \r\n\t\t\tconsole.log(\"Position Actions\", positionActions);\r\n\r\n\t\t\t// const pendingValue_ = await perpetualObject.contractReader.getPendingFundingPayments(Marketmap, address); \t \r\n\t\t\t// console.log(\"Pending value\", pendingValue_);\r\n\t\t\tconst _pendingValue = await perpetualObject!.positions!.getTotalPendingFundingPayments(); \r\n\t\t\tlet _isLoss;      \r\n\t\t\tif(_pendingValue![tickerSymbol].s !== -1) {\r\n\t\t\t\t_isLoss = false;\r\n\t\t\t} else {\r\n\t\t\t\t_isLoss = true;         \r\n\t\t\t}\t\r\n\r\n\t\t\tconst pnlValueCalc = await perpetualObject!.positions!.getTakerPositionByTickerSymbol(tickerSymbol);\r\n\t\t\tconst _pnlValue = await pnlValueCalc!.getUnrealizedPnl();\r\n\t\t\tlet _isProfit;  \r\n\t\t\tif(_pnlValue.s !== -1) {\r\n\t\t\t\t_isProfit = true;\r\n\t\t\t} else {\r\n\t\t\t\t_isProfit = false;         \r\n\t\t\t}  \r\n\t\t\tconst _openPrice = position!.entryPrice.toFixed(2);\r\n\t\t\tconst _indexPrice = await perpetualObject.contractReader.getIndexPrice(position!.market.baseAddress);         \r\n\t\t\tconst _liquidationPrice = position!.liquidationPrice; \t\t\t\r\n\t\t\t\r\n\t\t\tconst _marginRatio = await perpetualObject?.positions?.getAccountMarginRatio();\r\n\t\t\tconst _leverage = await perpetualObject?.positions?.getAccountLeverage();\r\n\r\n\t\t\treturn {\r\n\t\t\t\tisLoss: _isLoss,\r\n\t\t\t\tposSize: _posSize,\r\n\t\t\t\tside: _side,\r\n\t\t\t\tpendingValue: _pendingValue![tickerSymbol].toFixed(4),\r\n\t\t\t\tisProfit: _isProfit,\r\n\t\t\t\tpnlValue: _pnlValue.toFixed(4),\r\n\t\t\t\topenPrice: _openPrice,\r\n\t\t\t\tindexPrice: _indexPrice.toFixed(2),\r\n\t\t\t\tliquidationPrice: _liquidationPrice!.toFixed(1),\r\n\t\t\t\tmarginRatio: (Number(_marginRatio!.toFixed(4))*100).toFixed(1),\r\n\t\t\t\tleverage: _leverage!.toFixed(2)\r\n\t\t\t}\r\n\t\t}\r\n});\t\r\n\r\nconst initialState = {\r\n\tisPositionOpened: false,\t\r\n\tisCalculated: false,\r\n\tisOpenedPositionCalculated: false,\r\n}\r\n\r\nexport interface IPositionSlice {\r\n\tisPositionOpened: boolean,\t\r\n\tisCalculated: boolean,\r\n\tisOpenedPositionCalculated: boolean,\t\r\n\toppositeAmount: string,\t\r\n\tnewPositionDraft: PositionDraft<string> | undefined,\r\n\tentryPrice: string,\r\n\ttradingFee: string,\r\n\tpriceImpact: string,\r\n\tbuyingPower: string,\r\n\tisLoss: boolean,\r\n\tposSize: string,\r\n\tside: PositionSide,\r\n\tpendingValue: string,\r\n\tisProfit: boolean,\r\n\tpnlValue: string,\r\n\topenPrice: string,\r\n\tindexPrice: string,\r\n\tliquidationPrice: string,\r\n\tmarginRatio: string,\r\n\tleverage: string,\t\t\r\n}\r\n\r\nconst positionsSlice = createSlice({\r\n\tname: \"positions\",\r\n\tinitialState,\r\n\treducers: {\r\n\t\topen(state)\t{\r\n\t\t\tstate.isPositionOpened = true;\r\n\t\t\tstate.isCalculated = false;\r\n\t\t},\t\t\r\n\t\tclose(state) {\r\n\t\t\tstate.isPositionOpened = false;\r\n\t\t\tstate.isOpenedPositionCalculated = false;\r\n\t\t}\t\t\r\n\t},\r\n\textraReducers: builder => {\r\n\t\tbuilder\r\n\t\t\t.addCase(calcPositionDetails.pending, state => {\r\n\t\t\t\tstate.isCalculated = false;\r\n\t\t\t})\r\n\t\t\t.addCase(calcPositionDetails.fulfilled, (state, action) => {\r\n\t\t\t\tsetAll(state, action.payload);\r\n\t\t\t\tstate.isCalculated = true;\r\n\t\t\t})\r\n\t\t\t.addCase(calcPositionDetails.rejected, (state, { error }) => {\r\n\t\t\t\tstate.isCalculated = false;\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t\t\t.addCase(openedPositionDetails.pending, state => {\t\t\t\r\n\t\t\t\tstate.isOpenedPositionCalculated = false;\t\r\n\t\t\t})\r\n\t\t\t.addCase(openedPositionDetails.fulfilled, (state, action) => {\r\n\t\t\t\tsetAll(state, action.payload);\t\t\t\t\r\n\t\t\t\tstate.isOpenedPositionCalculated = true;\t\t\t\t\r\n\t\t\t})\r\n\t\t\t.addCase(openedPositionDetails.rejected, (state, { error }) => {\t\t\t\t\r\n\t\t\t\tstate.isOpenedPositionCalculated = false;\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\t\t\t\t\r\n\t},    \r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.positions;\r\nexport const { open, close } = positionsSlice.actions;\r\n\r\nexport default positionsSlice.reducer;\r\n\r\nexport const getAppState = createSelector(baseInfo, positions => positions);","import { AlertColor } from \"@mui/material/Alert\";\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport type Message = IMessage & {\r\n    severity: AlertColor;\r\n};\r\n\r\nexport interface MessagesState {\r\n    message: Message | null;\r\n}\r\n\r\ninterface IMessage {\r\n    text: string;\r\n    error?: any;\r\n}\r\n\r\n// Adds a message to the store\r\nconst createMessage = function (state: MessagesState, severity: AlertColor, text: IMessage) {\r\n    const message: Message = {\r\n        severity,\r\n        ...text,\r\n    };\r\n    state.message = message;\r\n};\r\nconst initialState: MessagesState = {\r\n    message: null,\r\n};\r\nconst messagesSlice = createSlice({\r\n    name: \"messages\",\r\n    initialState,\r\n    reducers: {\r\n        // Creates an error message\r\n        error(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"error\", action.payload);\r\n        },\r\n        // Creates an information message\r\n        info(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"info\", action.payload);\r\n        },\r\n        warning(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"warning\", action.payload);\r\n        },\r\n        success(state, action: PayloadAction<IMessage>) {\r\n            createMessage(state, \"success\", action.payload);\r\n        },\r\n        // Closes a message\r\n        close(state) {\r\n            state.message = null;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { error, info, close, warning, success } = messagesSlice.actions;\r\n\r\nexport default messagesSlice.reducer;\r\n","export const messages = {\r\n    please_connect: \"Please connect your wallet to the Optimism network to use kandyland.\",\r\n    please_connect_wallet: \"Please connect your wallet.\",    \r\n    tx_successfully_send: \"Your transaction was successfully sent\",\r\n    your_allowance_updated: \"Your allowance was successfully updated\",\r\n    your_deposit_updated: \"Your deposit was successfully updated\",\r\n    your_position_updated: \"Your position was successfully updated\",\r\n    your_collateral_withdrawed: \"Your collateral was successfully withdrawed\",    \r\n    something_wrong: \"Something went wrong\",\r\n    switch_to_avalanche: \"Switch to the Optimism network?\",\r\n    slippage_too_small: \"Slippage too small\",\r\n    slippage_too_big: \"Slippage too big\",\r\n    your_position_update_soon: \"Your position will update soon\",  \r\n    your_position_close_soon: \"Your position will close soon\",    \r\n    not_enough_profit: \"Your position is not profit now\",\r\n};\r\n","export const sleep = (seconds: number) => {\r\n    return new Promise(resolve => setTimeout(() => resolve(null), seconds * 1000));\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { error } from \"../store/slices/messages-slice\";\r\nimport { messages } from \"../constants/messages\";\r\n\r\nexport const metamaskErrorWrap = (err: any, dispatch: Dispatch) => {\r\n    let text = messages.something_wrong;    \r\n\r\n    if (err.code === 4001) {\r\n        if (err.message.includes(\"User denied transaction signature\")) {\r\n            text = \"User denied transaction signature\";            \r\n        }\r\n    }\r\n    return dispatch(error({ text: text }));\r\n\r\n    \r\n};\r\n","import { useState, useMemo, useCallback, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  calcPositionDetails,\r\n  openedPositionDetails,\r\n} from \"../../../store/slices/position-slice\";\r\nimport { IReduxState } from \"../../../store/slices/state.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  warning,\r\n  success,\r\n  info,\r\n  error,\r\n} from \"../../../store/slices/messages-slice\";\r\nimport { messages } from \"../../../constants/messages\";\r\nimport { sleep } from \"../../../helpers/sleep\";\r\nimport {\r\n  PerpetualProtocol,\r\n  PositionDraft,\r\n  SupportedChainIds,\r\n} from \"@perp/sdk-curie\";\r\nimport { AppDispatch } from \"../../../store/store\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  InputAdornment,\r\n} from \"@mui/material\";\r\n\r\nimport { useWeb3Context } from \"../../../hooks/web3Context\";\r\nimport { Trade } from \"../../../container/trade\";\r\nimport { AMM } from \"../../../container/amm\";\r\nimport { PositionSide } from \"@perp/sdk-curie\";\r\nimport { metamaskErrorWrap } from \"../../../helpers/metamask-error-wrap\";\r\n\r\nfunction SendTransaction() {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { address, provider, chainID, connected } = useWeb3Context();\r\n  const { marketticker } = AMM.useContainer();\r\n  const { collateral } = Trade.useContainer();\r\n  const { _setCollateral } = Trade.useContainer();\r\n  const { side } = Trade.useContainer();\r\n  const { slippage } = Trade.useContainer();\r\n  const { perpetualObject } = Trade.useContainer();\r\n  const outputSymbol = marketticker.substring(0, marketticker.length - 3);\r\n  const _perpetualObject: PerpetualProtocol = new PerpetualProtocol({\r\n    chainId: SupportedChainIds.OPTIMISM,\r\n    providerConfigs: [\r\n      {\r\n        rpcUrl:\r\n          \"https://optimism-mainnet.infura.io/v3/dd583584ac144f7984ac22cb0595646e\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  const isCalculated = useSelector<IReduxState, boolean>(\r\n    (state) => state.positions.isCalculated\r\n  );\r\n  const newPositionDraft = useSelector<\r\n    IReduxState,\r\n    PositionDraft<string> | undefined\r\n  >((state) => {\r\n    return state.positions.newPositionDraft;\r\n  });\r\n  const oppositeAmount = useSelector<IReduxState, string>((state) => {\r\n    return state.positions.oppositeAmount;\r\n  });\r\n  const entryPrice = useSelector<IReduxState, string>((state) => {\r\n    return state.positions.entryPrice;\r\n  });\r\n  const tradingFee = useSelector<IReduxState, string>((state) => {\r\n    return state.positions.tradingFee;\r\n  });\r\n  const priceImpact = useSelector<IReduxState, string>((state) => {\r\n    return state.positions.priceImpact;\r\n  });\r\n\r\n  const isDisabled =\r\n    !isCalculated || collateral === null || collateral.eq(0) || !connected;\r\n\r\n  const handleOpen = useCallback(async () => {\r\n    const hasconnected = perpetualObject.hasConnected();\r\n    if (hasconnected === false) {\r\n      await perpetualObject.init();\r\n      await perpetualObject.connect({ signer: provider.getSigner() });\r\n      console.log(\"Pepr connected\");\r\n    }\r\n    let openTx;\r\n    try {\r\n      openTx = await perpetualObject?.clearingHouse?.openPosition(\r\n        newPositionDraft!,\r\n        slippage\r\n      );\r\n      console.log(\"Open Transaction\", openTx);\r\n      await openTx!.transaction.wait();\r\n      dispatch(success({ text: messages.tx_successfully_send }));\r\n      await sleep(0.1);\r\n      dispatch(info({ text: messages.your_position_update_soon }));\r\n      await dispatch(\r\n        openedPositionDetails({\r\n          address: address,\r\n          networkID: chainID,\r\n          provider: provider,\r\n          perpetualObject: _perpetualObject,\r\n          tickerSymbol: marketticker,\r\n        })\r\n      );\r\n      dispatch(info({ text: messages.your_position_updated }));\r\n      _setCollateral(\"\");\r\n    } catch (err: any) {\r\n      metamaskErrorWrap(err, dispatch);\r\n    } finally {\r\n    }\r\n  }, [newPositionDraft, slippage]);\r\n\r\n  const CalcPosition = useCallback(\r\n    (loadProvider) => {\r\n      console.log(\"Calling calc Position\");\r\n      dispatch(\r\n        calcPositionDetails({\r\n          connected: connected,\r\n          networkID: chainID,\r\n          provider: loadProvider,\r\n          perpetualObject: perpetualObject,\r\n          side: side,\r\n          slippage: slippage,\r\n          tickerSymbol: marketticker,\r\n          amountInput: collateral,\r\n        })\r\n      );\r\n    },\r\n    [collateral, slippage, side, marketticker]\r\n  );\r\n\r\n  const CalcOpenedPosition = useCallback(\r\n    (loadProvider) => {\r\n      console.log(\"Calling calc openedPosition\");\r\n      dispatch(\r\n        openedPositionDetails({\r\n          address: address,\r\n          networkID: chainID,\r\n          provider: loadProvider,\r\n          perpetualObject: perpetualObject,\r\n          tickerSymbol: marketticker,\r\n        })\r\n      );\r\n    },\r\n    [connected, marketticker]\r\n  );\r\n\r\n  useEffect(() => {\r\n    CalcPosition(provider);\r\n  }, [collateral, slippage, side, marketticker]);\r\n\r\n  useEffect(() => {\r\n    CalcOpenedPosition(provider);\r\n  }, [connected, marketticker]);\r\n\r\n  return (\r\n    <Box sx={{ mt: 1 }}>\r\n      <Typography\r\n        fontSize=\"13px\"\r\n        color=\"rgb(169, 168, 166)\"\r\n        p=\"4px 0\"\r\n        textAlign=\"left\"\r\n        fontFamily=\"Montserrat Light\"\r\n      >\r\n        Output\r\n      </Typography>\r\n      <Box sx={{ mb: 2, backgroundColor: \"rgb(11, 11, 11)\" }}>\r\n        <TextField\r\n          id=\"outlined-read-only-input\"\r\n          type=\"number\"\r\n          value={oppositeAmount}\r\n          placeholder=\"0\"\r\n          InputProps={{\r\n            readOnly: true,\r\n            endAdornment: (\r\n              <InputAdornment\r\n                position=\"end\"\r\n                sx={{\r\n                  \"& .MuiTypography-root\": {\r\n                    fontSize: \"12px\",\r\n                    fontFamily: \"Montserrat Light\",\r\n                    color: \"rgb(169, 168, 166)\",\r\n                  },\r\n                }}\r\n              >\r\n                {outputSymbol}\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n          sx={{\r\n            width: \"100%\",\r\n            fontFamily: \"Montserrat\",\r\n            \"& > label, & .MuiFormLabel-root.Mui-focused\": {\r\n              color: \"rgb(169, 168, 166)\",\r\n            },\r\n            \"& .MuiOutlinedInput-notchedOutline, & .MuiInputBase-root:hover .MuiOutlinedInput-notchedOutline, & .MuiInputBase-root.Mui-focused .MuiOutlinedInput-notchedOutline\":\r\n              {\r\n                borderColor: \"rgba(255, 255, 255, 0.12)\",\r\n                borderWidth: \"1\",\r\n              },\r\n\r\n            \"& .MuiInputBase-input\": {\r\n              color: \"rgb(236, 232, 227)\",\r\n              p: \"12px 14px\",\r\n              fontSize: \"16px\",\r\n              fontFamily: \"Montserrat\",\r\n            },\r\n          }}\r\n        />\r\n      </Box>\r\n      <Box\r\n        p=\"16px\"\r\n        border=\"1px solid rgba(255, 255, 255, 0.12)\"\r\n        borderRadius=\"10px\"\r\n      >\r\n        <Typography\r\n          textAlign=\"left\"\r\n          color=\"rgb(228, 179, 120)\"\r\n          fontFamily=\"Montserrat Medium\"\r\n          fontSize=\"16px\"\r\n          pb=\"8px\"\r\n        >\r\n          Summary\r\n        </Typography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" pb=\"10px\">\r\n          <Typography\r\n            fontSize=\"13px\"\r\n            fontFamily=\"Montserrat\"\r\n            color=\"rgb(169, 168, 166)\"\r\n          >\r\n            Entry Price\r\n          </Typography>\r\n          <Typography\r\n            fontSize=\"13px\"\r\n            fontFamily=\"Montserrat\"\r\n            color=\"rgb(236, 232, 227)\"\r\n          >\r\n            ${entryPrice}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" pb=\"10px\">\r\n          <Typography\r\n            fontSize=\"13px\"\r\n            fontFamily=\"Montserrat\"\r\n            color=\"rgb(169, 168, 166)\"\r\n          >\r\n            Trading Fee\r\n          </Typography>\r\n          <Typography\r\n            fontSize=\"13px\"\r\n            fontFamily=\"Montserrat\"\r\n            color=\"rgb(236, 232, 227)\"\r\n          >\r\n            ${tradingFee}\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <Typography\r\n            fontSize=\"13px\"\r\n            fontFamily=\"Montserrat\"\r\n            color=\"rgb(169, 168, 166)\"\r\n          >\r\n            Price Impact\r\n          </Typography>\r\n          <Typography\r\n            fontSize=\"13px\"\r\n            fontFamily=\"Montserrat\"\r\n            color=\"rgb(236, 232, 227)\"\r\n          >\r\n            {priceImpact}%\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      <Button\r\n        variant=\"contained\"\r\n        disabled={isDisabled}\r\n        sx={{\r\n          width: \"100%\",\r\n          paddingY: \"12px\",\r\n          mt: 2,\r\n          border:\r\n            side === PositionSide.LONG\r\n              ? \"1px solid rgb(0, 192, 117)\"\r\n              : \"1px solid rgb(253, 64, 64)\",\r\n          color:\r\n            side === PositionSide.LONG\r\n              ? \"rgb(0, 192, 117)\"\r\n              : \"rgb(253, 64, 64)\",\r\n          backgroundColor:\r\n            side === PositionSide.LONG\r\n              ? \"rgba(0, 192, 117, 0.05)\"\r\n              : \"rgba(253, 64, 64, 0.05)\",\r\n          display: \"block\",\r\n          fontFamily: \"Montserrat\",\r\n          mx: \"auto\",\r\n          \"&: hover\": {\r\n            backgroundColor:\r\n              side === PositionSide.LONG\r\n                ? \"rgba(0, 192, 117, 0.05)\"\r\n                : \"rgba(253, 64, 64, 0.05)\",\r\n          },\r\n          \"&: disabled\": {\r\n            backgroundColor: \"transparent\",\r\n            border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n            color: \"rgb(169, 168, 166)\",\r\n          },\r\n        }}\r\n        onClick={handleOpen}\r\n      >\r\n        Confirm {side}\r\n      </Button>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SendTransaction;\r\n","import * as React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IReduxState } from \"../../../store/slices/state.interface\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  warning,\r\n  success,\r\n  info,\r\n  error,\r\n} from \"../../../store/slices/messages-slice\";\r\nimport { close } from \"../../../store/slices/position-slice\";\r\nimport { messages } from \"../../../constants/messages\";\r\nimport { sleep } from \"../../../helpers/sleep\";\r\nimport { PositionSide } from \"@perp/sdk-curie\";\r\n\r\nimport { Box, Button, Grid, Typography } from \"@mui/material\";\r\n\r\nimport { useWeb3Context } from \"../../../hooks/web3Context\";\r\nimport { Trade } from \"../../../container/trade\";\r\nimport { AMM } from \"../../../container/amm\";\r\nimport { metamaskErrorWrap } from \"../../../helpers/metamask-error-wrap\";\r\n\r\nexport function PositionList() {\r\n  const dispatch = useDispatch();\r\n  const { connected, provider } = useWeb3Context();\r\n  const { perpetualObject } = Trade.useContainer();\r\n  const { slippage } = Trade.useContainer();\r\n  const { marketticker } = AMM.useContainer();\r\n  let tickerSymbol = marketticker;\r\n  const outputSymbol = marketticker.substring(0, marketticker.length - 3);\r\n\r\n  const isOpenedPositionCalculated = useSelector<IReduxState, boolean>(\r\n    (state) => state.positions.isOpenedPositionCalculated\r\n  );\r\n\r\n  const isLoss = useSelector<IReduxState, boolean>((state) => {\r\n    return state.positions.isLoss;\r\n  });\r\n\r\n  const posSize = useSelector<IReduxState, string>((state) => {\r\n    return state.positions.posSize;\r\n  });\r\n\r\n  const side = useSelector<IReduxState, PositionSide>((state) => {\r\n    return state.positions.side;\r\n  });\r\n\r\n  const pendingValue = useSelector<IReduxState, string>((state) => {\r\n    return state.positions.pendingValue;\r\n  });\r\n\r\n  const isProfit = useSelector<IReduxState, boolean>((state) => {\r\n    return state.positions.isProfit;\r\n  });\r\n\r\n  const pnlValue = useSelector<IReduxState, string>((state) => {\r\n    return state.positions.pnlValue;\r\n  });\r\n\r\n  const openPrice = useSelector<IReduxState, string>((state) => {\r\n    return state.positions.openPrice;\r\n  });\r\n\r\n  const indexPrice = useSelector<IReduxState, string>((state) => {\r\n    return state.positions.indexPrice;\r\n  });\r\n\r\n  const liquidationPrice = useSelector<IReduxState, string>((state) => {\r\n    return state.positions.liquidationPrice;\r\n  });\r\n\r\n  const marginRatio = useSelector<IReduxState, string>((state) => {\r\n    return state.positions.marginRatio;\r\n  });\r\n\r\n  const leverage = useSelector<IReduxState, string>((state) => {\r\n    return state.positions.leverage;\r\n  });\r\n\r\n  const handleClose = async () => {\r\n    const hasconnected = perpetualObject.hasConnected();\r\n    if (hasconnected === false) {\r\n      await perpetualObject.init();\r\n      await perpetualObject.connect({ signer: provider.getSigner() });\r\n    }\r\n    const position =\r\n      await perpetualObject?.positions?.getTakerPositionByTickerSymbol(\r\n        tickerSymbol\r\n      );\r\n    if (position !== undefined) {\r\n      let closeTx;\r\n      try {\r\n        closeTx = await perpetualObject?.clearingHouse?.closePosition(\r\n          position!,\r\n          slippage\r\n        );\r\n        console.log(\"Close Transaction\", closeTx);\r\n        await closeTx!.transaction.wait();\r\n        dispatch(success({ text: messages.tx_successfully_send }));\r\n        await sleep(0.5);\r\n        dispatch(info({ text: messages.your_position_close_soon }));\r\n      } catch (err: any) {\r\n        metamaskErrorWrap(err, dispatch);\r\n      } finally {\r\n        dispatch(close());\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpenedPositionCalculated && (\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          sx={{\r\n            \"& > .MuiGrid-item\": { p: \"8px\" },\r\n            ml: \"-8px\",\r\n\t\t\t\t\t\tmt: \"8px\",\r\n          }}\r\n        >\r\n          <Grid item lg={6} md={6} sm={6} xs={12}>\r\n            <Box\r\n              py=\"16px\"\r\n              px=\"16px\"\r\n              borderRadius=\"10px\"\r\n              border=\"1px solid rgba(255, 255, 255, 0.12)\"\r\n            >\r\n              <Box\r\n                sx={{ display: \"flex\", justifyContent: \"space-between\", py: 1 }}\r\n              >\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"flex-start\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    sx={{\r\n                      fontSize: \"18px\",\r\n                      mr: 1,\r\n                      color: \"rgb(236, 232, 227)\",\r\n                      fontFamily: \"Montserrat Medium\",\r\n                    }}\r\n                  >\r\n                    {posSize}\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{\r\n                      fontSize: \"12px\",\r\n                      color: \"rgb(169, 168, 166)\",\r\n                      fontFamily: \"Montserrat\",\r\n                    }}\r\n                  >\r\n                    {outputSymbol}\r\n                  </Typography>\r\n                </Box>\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    color:\r\n                      side === \"LONG\"\r\n                        ? \"rgb(127, 212, 130)\"\r\n                        : \"rgb(239, 104, 104)\",\r\n                    fontFamily: \"Montserrat\",\r\n                  }}\r\n                >\r\n                  {side}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{ display: \"flex\", justifyContent: \"space-between\", py: 1 }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    color: \"rgb(169, 168, 166)\",\r\n                    fontFamily: \"Montserrat\",\r\n                  }}\r\n                >\r\n                  Pending Funding Payment\r\n                </Typography>\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"18px\",\r\n                    color:\r\n                      isLoss === true\r\n                        ? \"rgb(239, 104, 104)\"\r\n                        : \"rgb(127, 212, 130)\",\r\n                    fontFamily: \"Montserrat Medium\",\r\n                  }}\r\n                >\r\n                  {pendingValue}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{ display: \"flex\", justifyContent: \"space-between\", py: 1 }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    color: \"rgb(169, 168, 166)\",\r\n                    fontFamily: \"Montserrat\",\r\n                  }}\r\n                >\r\n                  Profit / Loss\r\n                </Typography>\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"18px\",\r\n                    color:\r\n                      isProfit === true\r\n                        ? \"rgb(127, 212, 130)\"\r\n                        : \"rgb(239, 104, 104)\",\r\n                    fontFamily: \"Montserrat Medium\",\r\n                  }}\r\n                >\r\n                  {pnlValue}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{ display: \"flex\", justifyContent: \"space-between\", py: 1 }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    color: \"rgb(169, 168, 166)\",\r\n                    fontFamily: \"Montserrat\",\r\n                  }}\r\n                >\r\n                  Avg. Open Price\r\n                </Typography>\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"18px\",\r\n                    color: \"rgb(255, 184, 0)\",\r\n                    fontFamily: \"Montserrat Medium\",\r\n                  }}\r\n                >\r\n                  {openPrice}\r\n                </Typography>\r\n              </Box>\r\n\t\t\t\t\t\t\t<Button\r\n                variant=\"contained\"\r\n                disabled={connected === false}\r\n                sx={{\r\n                  paddingY: \"8px\",\r\n                  mt: 1,\r\n                  px: 4,\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",                  \r\n                  fontFamily: \"Montserrat\", \r\n                  color: \"rgb(236, 232, 227)\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"rgb(37, 37, 37)\",\r\n\t\t\t\t\t\t\t\t\tborder: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                  \"&: hover\": {\r\n                    backgroundColor: \"rgb(43, 42, 42)\",\r\n                    color: \"rgb(236, 232, 227)\",                    \r\n                  },\r\n                }}\r\n                onClick={handleClose}\r\n              >\r\n                Close\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item lg={6} md={6} sm={6} xs={12}>\r\n            <Box\r\n              py=\"16px\"\r\n              px=\"16px\"\r\n              borderRadius=\"10px\"\r\n              border=\"1px solid rgba(255, 255, 255, 0.12)\"\r\n            >\r\n              <Box\r\n                sx={{ display: \"flex\", justifyContent: \"space-between\", py: 1 }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    color: \"rgb(169, 168, 166)\",\r\n                    fontFamily: \"Montserrat\",\r\n                  }}\r\n                >\r\n                  Index Price\r\n                </Typography>\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"18px\",\r\n                    color: \"rgb(255, 184, 0)\",\r\n                    fontFamily: \"Montserrat Medium\",\r\n                  }}\r\n                >\r\n                  {indexPrice}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{ display: \"flex\", justifyContent: \"space-between\", py: 1 }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    color: \"rgb(169, 168, 166)\",\r\n                    fontFamily: \"Montserrat\",\r\n                  }}\r\n                >\r\n                  Liquidation Price\r\n                </Typography>\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"18px\",\r\n                    color: \"rgb(255, 184, 0)\",\r\n                    fontFamily: \"Montserrat Medium\",\r\n                  }}\r\n                >\r\n                  {liquidationPrice}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{ display: \"flex\", justifyContent: \"space-between\", py: 1 }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    color: \"rgb(169, 168, 166)\",\r\n                    fontFamily: \"Montserrat\",\r\n                  }}\r\n                >\r\n                  Margin Ratio\r\n                </Typography>\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"18px\",\r\n                    color: \"rgb(255, 184, 0)\",\r\n                    fontFamily: \"Montserrat Medium\",\r\n                  }}\r\n                >\r\n                  {marginRatio}%\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{ display: \"flex\", justifyContent: \"space-between\", py: 1 }}\r\n              >\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    color: \"rgb(169, 168, 166)\",\r\n                    fontFamily: \"Montserrat\",\r\n                  }}\r\n                >\r\n                  Leverage\r\n                </Typography>\r\n                <Typography\r\n                  sx={{\r\n                    fontSize: \"18px\",\r\n                    color: \"rgb(255, 184, 0)\",\r\n                    fontFamily: \"Montserrat Medium\",\r\n                  }}\r\n                >\r\n                  {leverage}x\r\n                </Typography>\r\n              </Box>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={connected === false}\r\n                sx={{\r\n                  paddingY: \"8px\",\r\n                  mt: 1,\r\n                  px: 4,\r\n\t\t\t\t\t\t\t\t\twidth: \"100%\",                  \r\n                  fontFamily: \"Montserrat\", \r\n                  color: \"rgb(236, 232, 227)\",\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: \"rgb(37, 37, 37)\",\r\n\t\t\t\t\t\t\t\t\tborder: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                  \"&: hover\": {\r\n                    backgroundColor: \"rgb(43, 42, 42)\",\r\n                    color: \"rgb(236, 232, 227)\",                    \r\n                  },\r\n                }}                \r\n              >\r\n                Learn More\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IReduxState } from \"../../store/slices/state.interface\";\r\n\r\nimport { Box, Button, Typography, Tabs, Tab } from \"@mui/material\";\r\n\r\nimport { PositionList } from \"./components/PositionList\";\r\n\r\ninterface TabPanelProps {\r\n  children?: React.ReactNode;\r\n  index: number;\r\n  value: number;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box sx={{ py: 2 }}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index: number) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function Positions() {\r\n  const [value, setValue] = useState(0);\r\n  const isPositionOpened = useSelector<IReduxState, boolean>(\r\n    (state) => state.positions.isPositionOpened\r\n  );\r\n  console.log(\"Opened position\", isPositionOpened);\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"basic tabs example\"\r\n          textColor=\"primary\"\r\n          TabIndicatorProps={{\r\n            style: {\r\n              backgroundColor: \"rgb(236, 232, 227)\",\r\n            },\r\n          }}\r\n          sx={{\r\n            minHeight: \"36px\",\r\n            \"& .MuiButtonBase-root\": {\r\n              minHeight: \"36px\",\r\n              p: \"6px 16px\",\r\n            },\r\n            \"& .MuiTab-root\": {\r\n              color: \"rgb(169, 168, 166)\",\r\n              fontFamily: \"Montserrat\",\r\n              fontSize: \"16px\",\r\n              textTransform: \"none\",\r\n            },\r\n            \"& .MuiTab-root.Mui-selected\": { color: \"rgb(236, 232, 227)\" },\r\n          }}\r\n        >\r\n          <Tab label=\"Position\" {...a11yProps(0)} />\r\n          <Tab label=\"Limit Orders\" {...a11yProps(1)} />\r\n          <Tab label=\"Fills\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </Box>\r\n      <TabPanel value={value} index={0}>\r\n        {isPositionOpened ? (\r\n          <PositionList />\r\n        ) : (\r\n          <Typography sx={{ color: \"rgb(169, 168, 166)\" }}>\r\n            You don't have any opened position yet\r\n          </Typography>\r\n        )}\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        Limit Orders\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        Fills\r\n      </TabPanel>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box } from \"@mui/material\";\r\n\r\nimport BuyingPower from \"./components/BuyingPower\";\r\nimport SideSwitcher from \"./components/Sideswitcher\";\r\nimport Collateral from \"./components/Collateral\";\r\nimport Slippage from \"./components/Slippage\";\r\nimport SendTransaction from \"./components/SendTransaction\";\r\nimport Positions from \"../Positions\";\r\n\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\n\r\nfunction Trade() {\r\n  const isDesktop = useResponsive(\"up\", \"md\");\r\n  return (\r\n    <Box\r\n      sx={{\r\n        backgroundColor: \"#131312\",\r\n        px: isDesktop ? 3 : 2,\r\n        pb: \"400px\",\r\n      }}\r\n    >\r\n      <Box sx={{ display: \"flex\", flexDirection: { xs: \"column\", md: \"row\" } }}>\r\n        {/* <Box\r\n          sx={{\r\n            boxSizing: \"border-box\",\r\n            flexGrow: \"1\",\r\n            backgroundColor: \"transparent\",\r\n            border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n            borderRadius: \"10px\",\r\n            p: \"16px\",\r\n          }}\r\n        > */}\r\n\r\n        {/* </Box> */}\r\n        <Box flexGrow=\"1\">\r\n          <Positions />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            width: { xs: \"100%\", md: \"300px\" },\r\n            boxSizing: \"border-box\",\r\n            backgroundColor: \"transparent\",\r\n            pb: \"12px\",\r\n            ml: { md: 2 },\r\n            mt: { xs: 1, md: \"0px\" },\r\n          }}\r\n        >\r\n          <BuyingPower />\r\n          <SideSwitcher />\r\n          <Collateral />\r\n          <Slippage />\r\n          <SendTransaction />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Trade;\r\n","import { createSlice,createAsyncThunk, createSelector } from \"@reduxjs/toolkit\";\r\nimport { JsonRpcProvider, StaticJsonRpcProvider } from \"@ethersproject/providers\";\r\nimport { ethers } from \"ethers\";\r\nimport { Networks, DEFAULD_NETWORK } from \"../../constants/blockchain\";\r\nimport { warning, success, info, error } from \"./messages-slice\";\r\nimport { messages } from \"../../constants/messages\";\r\nimport { setAll } from \"../../helpers/set-all\";\r\nimport { PerpetualProtocol, PositionSide, PositionDraft } from \"@perp/sdk-curie\";\r\nimport { metamaskErrorWrap } from \"../../helpers/metamask-error-wrap\";\r\nimport { sleep } from \"../../helpers/sleep\";\r\nimport Big from \"big.js\";\r\nimport { RootState } from \"../store\";\r\n\r\ninterface ICalcUserCollateralDetails { \r\n\taddress: string;\r\n\tnetworkID: Networks;\r\n\tperpetualObject: PerpetualProtocol;\t\t\r\n}\r\n\r\nexport const calcUserCollateralDetails = createAsyncThunk(\"user/calcUserCollateralDetails\", \r\n\tasync({ address, networkID, perpetualObject }: ICalcUserCollateralDetails) => {\r\n\t\tif( networkID === DEFAULD_NETWORK ) {  \r\n\t\t\tawait perpetualObject.init();\r\n\t\t\tconst _freeCollateral = await perpetualObject.contractReader.getFreeCollateral(address); \r\n\t\t\tconst _accountValue = await perpetualObject.contractReader.getAccountValue(address); \r\n\t\t\tconst _collateralBalanceList = await perpetualObject.vault!.getBalanceList();\t\t\t\t\r\n\t\t\tconst _collateralFreeCollateralList = await perpetualObject.vault!.getFreeCollateralList();\t\t\r\n\t\t\tconsole.log(\"Collateral Balance List\", _collateralBalanceList);\t\t\t\r\n\t\t\tconsole.log(\"Collateral Free Collateral List\", _collateralFreeCollateralList);\r\n\t\t\treturn {\r\n\t\t\t\tfreeCollateral: _freeCollateral.toFixed(4),\r\n\t\t\t\taccountValue: _accountValue.toFixed(4),\r\n\t\t\t\tcollateralBalanceList: _collateralBalanceList,\r\n\t\t\t\tcollateralFreeCollateralList: _collateralFreeCollateralList,\r\n\t\t\t}\r\n\t\t}\r\n});\r\n\r\ninterface ICalcUserAccountDetails {\r\n\tnetworkID: Networks;\r\n  provider: StaticJsonRpcProvider | JsonRpcProvider;\r\n\tperpetualObject: PerpetualProtocol;\t\t\r\n}\r\n\r\nexport const calcUserAccountDetails = createAsyncThunk(\"user/calcUserAccountlDetails\", \r\n\tasync({ networkID, provider, perpetualObject }: ICalcUserAccountDetails) => {\r\n\t\tif( networkID === DEFAULD_NETWORK ) {  \r\n\t\t\tawait perpetualObject.init();\r\n      await perpetualObject.connect({ signer: provider.getSigner() });\t\t\t\r\n      const _allowanceList = await perpetualObject.wallet!.getAllowanceList();      \r\n      const _balanceList = await perpetualObject.wallet!.getBalanceList(); \r\n      const _balanceEth = await perpetualObject.wallet!.getBalanceEth();    \r\n      const _collateraltokenpricelist = await perpetualObject.wallet!.getCollateralTokenPriceList();  \r\n      const _collateralTokenList = perpetualObject.wallet!.collateralTokenList; \r\n      console.log(\"Collateral Token List\", _collateralTokenList);  \r\n\t\t\t\r\n\t\t\tconsole.log(\"Allowance List\", _allowanceList);\r\n\t\t\treturn {\t\t\r\n        allowanceList: _allowanceList,\t\t\t\r\n        balanceList: _balanceList,\r\n        balanceEth: _balanceEth.toFixed(3),\r\n        collateralTokenPriceList: _collateraltokenpricelist,        \r\n\t\t\t}\r\n\t\t}\r\n});\r\n\r\nexport interface IChangeApproval {\r\n\tprovider: StaticJsonRpcProvider | JsonRpcProvider;\t\r\n\tnetworkID: Networks;\t\r\n\ttokenIndex: number;\r\n\tperpetualObject: PerpetualProtocol;\r\n}\r\n\r\nexport const changeApproval = createAsyncThunk(\"user/changeApproval\", async ({ provider, networkID, tokenIndex, perpetualObject }: IChangeApproval, { dispatch }) => {\r\n\tif (!provider) {\r\n\t\tdispatch(warning({ text: messages.please_connect_wallet }));\r\n\t\treturn;\r\n\t}\r\n\r\n\tif( networkID === DEFAULD_NETWORK ) {\r\n\t\tawait perpetualObject.init();\r\n    await perpetualObject.connect({ signer: provider.getSigner() });\r\n\r\n\t\tlet approveTx;\r\n\t\ttry {\t\t\t\t\t\r\n\t\t\tconst collateralTokenList = perpetualObject.wallet!.collateralTokenList;\t\t\t\r\n\t\t\tapproveTx = await perpetualObject.wallet!.approve(collateralTokenList[tokenIndex]);\t\t\t\t\r\n\t\t\tawait approveTx.transaction.wait();\r\n\t\t\tdispatch(success({ text: messages.tx_successfully_send }));\r\n\t\t} catch (err: any) {\t\t\t\r\n\t\t\treturn metamaskErrorWrap(err, dispatch);\r\n\t\t} finally {\t\t\t\t\r\n\t\t}\r\n\t\tawait sleep(4);\r\n\t\tawait dispatch(calcUserAccountDetails({networkID, provider, perpetualObject}));\t\r\n\t\tdispatch(info({ text: messages.your_allowance_updated }));\r\n\t\treturn;\r\n\t}\t\r\n});\r\n\r\nexport interface IChangeCollateral {\r\n\taddress: string;\r\n\tprovider: StaticJsonRpcProvider | JsonRpcProvider;\t\r\n\tnetworkID: Networks;\t\r\n\ttokenIndex?: number;\r\n\tamount: Big;\r\n\tperpetualObject: PerpetualProtocol;\r\n}\r\n\r\nexport const changeDepositCollateral = createAsyncThunk(\"user/changeDepositCollateral\", async ({address, provider, networkID, tokenIndex, amount, perpetualObject }: IChangeCollateral, { dispatch }) => {\r\n\tif (!provider) {\r\n\t\tdispatch(warning({ text: messages.please_connect_wallet }));\r\n\t\treturn;\r\n\t}\r\n\r\n\tif( networkID === DEFAULD_NETWORK ) {\r\n\t\tawait perpetualObject.init();\r\n    await perpetualObject.connect({ signer: provider.getSigner() });\r\n\r\n\t\tlet depositTx;\r\n\t\ttry {\t\t\t\r\n\t\t\tif(tokenIndex !== undefined) {\r\n\t\t\t\tconst collateralTokenList = perpetualObject.wallet!.collateralTokenList;\t\t\t\r\n\t\t\t\tdepositTx = await perpetualObject.vault!.deposit(collateralTokenList[tokenIndex], amount);\r\n\t\t\t\tawait depositTx.transaction.wait();\r\n\t\t\t}\telse {\r\n\t\t\t\tdepositTx = await perpetualObject.vault!.depositETH(amount);\r\n\t\t\t\tawait depositTx.transaction.wait();\r\n\t\t\t}\t\t\t\t\r\n\t\t\tdispatch(success({ text: messages.tx_successfully_send }));\r\n\t\t} catch (err: any) {\r\n\t\t\tconsole.log(\"Error\", err);\r\n\t\t\t\treturn metamaskErrorWrap(err, dispatch);\r\n\t\t} finally {\t\t\t\t\r\n\t\t}\r\n\t\tawait sleep(4);\r\n\t\tawait dispatch(calcUserAccountDetails({networkID, provider, perpetualObject}));\t\r\n\t\tawait dispatch(calcUserCollateralDetails({address, networkID, perpetualObject}));\t\r\n\t\tdispatch(info({ text: messages.your_deposit_updated }));\r\n\t\treturn;\r\n\t}\t\r\n});\r\n\r\nexport const withdrawCollateral = createAsyncThunk(\"user/withdrawCollateral\", async ({address, provider, networkID, \r\n\ttokenIndex, amount, perpetualObject }: IChangeCollateral, { dispatch }) => {\r\n\tif (!provider) {\r\n\t\tdispatch(warning({ text: messages.please_connect_wallet }));\r\n\t\treturn;\r\n\t}\r\n\r\n\tif( networkID === DEFAULD_NETWORK ) {\r\n\t\tawait perpetualObject.init();\r\n    await perpetualObject.connect({ signer: provider.getSigner() });\r\n\r\n\t\tlet withdrawTx;\r\n\t\ttry {\t\t\t\r\n\t\t\tif(tokenIndex !== undefined) {\r\n\t\t\t\tconst collateralTokenList = perpetualObject.wallet!.collateralTokenList;\t\t\t\r\n\t\t\t\twithdrawTx = await perpetualObject.vault!.withdraw(collateralTokenList[tokenIndex], amount);\r\n\t\t\t\tawait withdrawTx.transaction.wait();\r\n\t\t\t}\telse {\r\n\t\t\t\twithdrawTx = await perpetualObject.vault!.withdrawETH(amount);\r\n\t\t\t\tawait withdrawTx.transaction.wait();\r\n\t\t\t}\t\t\t\t\r\n\t\t\tdispatch(success({ text: messages.tx_successfully_send }));\r\n\t\t} catch (err: any) {\r\n\t\t\tconsole.log(\"Error\", err);\r\n\t\t\t\treturn metamaskErrorWrap(err, dispatch);\r\n\t\t} finally {\t\t\t\t\r\n\t\t}\r\n\t\tawait sleep(4);\r\n\t\tawait dispatch(calcUserAccountDetails({networkID, provider, perpetualObject}));\t\r\n\t\tawait dispatch(calcUserCollateralDetails({address, networkID, perpetualObject}));\t\r\n\t\tdispatch(info({ text: messages.your_collateral_withdrawed }));\r\n\t\treturn;\r\n\t}\t\r\n});\r\n\r\nconst initialState = {\t\r\n\tisUserCollateralCalculated: false,\r\n\tisUserCollateralInitialized: false,\r\n  isUserAccountCalculated: false,\r\n}\r\n\r\nexport interface IUserSlice {\r\n\tisUserCollateralCalculated: boolean;\r\n\tisUserCollateralInitialized: boolean;\t\r\n  isUserAccountCalculated: boolean;\r\n\tfreeCollateral: string;\r\n\taccountValue: string;\r\n\tcollateralBalanceList: Big[];\r\n\tcollateralFreeCollateralList: Big[]; \r\n  allowanceList: Big[];\r\n  balanceList: Big[];\r\n  balanceEth: string; \r\n  collateralTokenPriceList: number[];  \r\n}\r\n\r\nconst userSlice = createSlice({\r\n\tname: \"user\",\r\n\tinitialState,\r\n\treducers: {\t\t\t\r\n\t},\r\n\textraReducers: builder => {\r\n\t\tbuilder\t\t\t\r\n\t\t\t.addCase(calcUserCollateralDetails.pending, state => {\t\t\t\r\n\t\t\t\tstate.isUserCollateralCalculated = false;\r\n\t\t\t})\r\n\t\t\t.addCase(calcUserCollateralDetails.fulfilled, (state, action) => {\r\n\t\t\t\tsetAll(state, action.payload);\r\n\t\t\t\tstate.isUserCollateralCalculated = true;\t\r\n\t\t\t\tstate.isUserCollateralInitialized = true;\r\n\t\t\t})\r\n\t\t\t.addCase(calcUserCollateralDetails.rejected, (state, { error }) => {\r\n\t\t\t\tstate.isUserCollateralInitialized = false;\t\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n      .addCase(calcUserAccountDetails.pending, state => {\t\t\t\r\n\t\t\t\tstate.isUserAccountCalculated = false;\r\n\t\t\t})\r\n\t\t\t.addCase(calcUserAccountDetails.fulfilled, (state, action) => {\r\n\t\t\t\tsetAll(state, action.payload);\r\n\t\t\t\tstate.isUserAccountCalculated = true;\t\t\t\t\t\r\n\t\t\t})\r\n\t\t\t.addCase(calcUserAccountDetails.rejected, (state, { error }) => {\r\n\t\t\t\tstate.isUserAccountCalculated = false;\t\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t})\r\n\t},    \r\n});\r\n\r\nconst baseInfo = (state: RootState) => state.user;\r\nexport const { } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n\r\nexport const getAppState = createSelector(baseInfo, user => user);","import { useEffect } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { IReduxState } from \"../../../store/slices/state.interface\";\r\nimport { calcUserCollateralDetails } from \"../../../store/slices/user-slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Trade } from \"../../../container/trade\";\r\nimport { AppDispatch } from \"../../../store/store\";\r\n\r\nimport useResponsive from \"../../../hooks/useResponsive\";\r\nimport { useWeb3Context } from \"../../../hooks/web3Context\";\r\n\r\nimport { Box, Grid, Typography } from \"@mui/material\";\r\n\r\nfunction CollateralBoard() {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { address, chainID, connected } = useWeb3Context();\r\n  const { perpetualObject } = Trade.useContainer();\r\n  const isDesktop = useResponsive(\"up\", \"md\");\r\n\r\n  const isUserCollateralCalculated = useSelector<IReduxState, boolean>(\r\n    (state) => {\r\n      return state.user.isUserCollateralCalculated;\r\n    }\r\n  );\r\n\r\n  const isUserCollateralInitialized = useSelector<IReduxState, boolean>(\r\n    (state) => {\r\n      return state.user.isUserCollateralInitialized;\r\n    }\r\n  );\r\n\r\n  const freeCollateral = useSelector<IReduxState, string>((state) => {\r\n    return state.user.freeCollateral;\r\n  });\r\n\r\n  const accountValue = useSelector<IReduxState, string>((state) => {\r\n    return state.user.accountValue;\r\n  });\r\n\r\n  const CalcUserCollateralDetails = function () {\r\n    if (connected === true) {\r\n      dispatch(\r\n        calcUserCollateralDetails({\r\n          address: address,\r\n          networkID: chainID,\r\n          perpetualObject: perpetualObject,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    CalcUserCollateralDetails();\r\n    const timer = setInterval(() => CalcUserCollateralDetails(), 60000);\r\n    return () => clearInterval(timer);\r\n  }, [connected]);\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n        ml=\"-16px\"\r\n        sx={{\r\n          \"& > .MuiGrid-item\": { p: \"16px 0\" },\r\n        }}\r\n      >\r\n        <Grid item lg={6} md={6} sm={6} xs={6}>\r\n          <Box\r\n            py=\"8px\"\r\n            borderRadius=\"10px\"\r\n            ml=\"16px\"\r\n            mr=\"8px\"\r\n            sx={{\r\n              backgroundColor: \"rgb(37, 37, 37)\",\r\n              border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n            }}\r\n          >\r\n            <Typography\r\n              color=\"rgb(169, 168, 166)\"\r\n              fontSize={isDesktop ? \"14px\" : \"12px\"}\r\n              lineHeight=\"1.2\"\r\n              fontFamily=\"Montserrat Light\"\r\n            >\r\n              Total Collateral\r\n            </Typography>\r\n            {isUserCollateralCalculated ? (\r\n              <Typography\r\n                color=\"rgb(236, 232, 227)\"\r\n                fontSize=\"18px\"\r\n                fontFamily=\"Montserrat Medium\"\r\n                lineHeight=\"1.2\"\r\n              >\r\n                ${accountValue}\r\n              </Typography>\r\n            ) : (\r\n              [\r\n                isUserCollateralInitialized ? (\r\n                  <Typography\r\n                    color=\"rgb(236, 232, 227)\"\r\n                    fontSize=\"18px\"\r\n                    fontFamily=\"Montserrat Medium\"\r\n                    lineHeight=\"1.2\"\r\n                  >\r\n                    ${accountValue}\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography\r\n                    color=\"rgb(236, 232, 227)\"\r\n                    fontSize=\"18px\"\r\n                    fontFamily=\"Montserrat Medium\"\r\n                    lineHeight=\"1.2\"\r\n                  >\r\n                    $0.0\r\n                  </Typography>\r\n                ),\r\n              ]\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n        <Grid item lg={6} md={6} sm={6} xs={6}>\r\n          <Box\r\n            ml=\"8px\"\r\n            mr=\"16px\"\r\n            sx={{\r\n              paddingY: \"8px\",\r\n              borderRadius: \"10px\",\r\n              backgroundColor: \"rgb(37, 37, 37)\",\r\n              border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n            }}\r\n          >\r\n            <Typography\r\n              color=\"rgb(169, 168, 166)\"\r\n              fontSize={isDesktop ? \"14px\" : \"12px\"}\r\n              lineHeight=\"1.2\"\r\n              fontFamily=\"Montserrat Light\"\r\n            >\r\n              Free Collateral\r\n            </Typography>\r\n            {isUserCollateralCalculated ? (\r\n              <Typography\r\n                color=\"rgb(228, 179, 120)\"\r\n                fontSize=\"18px\"\r\n                fontFamily=\"Montserrat Medium\"\r\n                lineHeight=\"1.2\"\r\n              >\r\n                ${freeCollateral}\r\n              </Typography>\r\n            ) : (\r\n              [\r\n                isUserCollateralInitialized ? (\r\n                  <Typography\r\n                    color=\"rgb(228, 179, 120)\"\r\n                    fontSize=\"18px\"\r\n                    fontFamily=\"Montserrat Medium\"\r\n                    lineHeight=\"1.2\"\r\n                  >\r\n                    ${freeCollateral}\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography\r\n                    color=\"rgb(228, 179, 120)\"\r\n                    fontSize=\"18px\"\r\n                    fontFamily=\"Montserrat Medium\"\r\n                    lineHeight=\"1.2\"\r\n                  >\r\n                    $0.0\r\n                  </Typography>\r\n                ),\r\n              ]\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CollateralBoard;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { IReduxState } from \"../../../store/slices/state.interface\";\r\nimport {\r\n  calcUserAccountDetails,\r\n  changeApproval,\r\n  changeDepositCollateral,\r\n  withdrawCollateral,\r\n} from \"../../../store/slices/user-slice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Trade } from \"../../../container/trade\";\r\nimport { AppDispatch } from \"../../../store/store\";\r\n\r\nimport Big from \"big.js\";\r\nimport useResponsive from \"../../../hooks/useResponsive\";\r\nimport { useWeb3Context } from \"../../../hooks/web3Context\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  IconButton,\r\n  InputAdornment,\r\n  Modal,\r\n  OutlinedInput,\r\n  Table,\r\n  TableContainer,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n  Paper,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nconst modalStyle = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  maxWidth: \"28rem\",\r\n  backgroundColor: \"#1A1B1F\",\r\n  borderRadius: \"24px\",\r\n  border: \"1px solid rgba(255, 255, 255, 0.08)\",\r\n  outline: \"transparent solid 2px\",\r\n  outlineOffset: \"2px\",\r\n  boxShadow:\r\n    \"rgba(0, 0, 0, 0.1) 0px 0px 0px 1px,rgba(0, 0, 0, 0.2) 0px 5px 10px,rgba(0, 0, 0, 0.4) 0px 15px 40px\",\r\n  p: 2,\r\n};\r\n\r\nconst TokenList = [\"USDC\", \"WETH\", \"FRAX\", \"OP\", \"USDT\", \"ETH\"];\r\n\r\nfunction CollateralBoard() {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { address, provider, chainID, connected } = useWeb3Context();\r\n  const { perpetualObject } = Trade.useContainer();\r\n  const [openDepositModal, setDepositModalOpen] = useState(false);\r\n  const [openWithdrawModal, setWithdrawModalOpen] = useState(false);\r\n  const [modalIndex, setModalIndex] = useState(0);\r\n  const [onTransaction, setOnTransaction] = useState(false);\r\n  const isDesktop = useResponsive(\"up\", \"md\");\r\n\r\n  const [tokenValue, setTokenValue] = useState<number>(0);\r\n\r\n  const isUserAccountCalculated = useSelector<IReduxState, boolean>((state) => {\r\n    return state.user.isUserAccountCalculated;\r\n  });\r\n\r\n  const collateralBalanceList = useSelector<IReduxState, Big[]>((state) => {\r\n    return state.user.collateralBalanceList;\r\n  });\r\n\r\n  const collateralFreeCollateralList = useSelector<IReduxState, Big[]>(\r\n    (state) => {\r\n      return state.user.collateralFreeCollateralList;\r\n    }\r\n  );\r\n\r\n  const allowanceList = useSelector<IReduxState, Big[]>((state) => {\r\n    return state.user.allowanceList;\r\n  });\r\n\r\n  const collateralTokenPriceList = useSelector<IReduxState, number[]>(\r\n    (state) => {\r\n      return state.user.collateralTokenPriceList;\r\n    }\r\n  );\r\n\r\n  const balanceList = useSelector<IReduxState, Big[]>((state) => {\r\n    return state.user.balanceList;\r\n  });\r\n\r\n  const balanceEth = useSelector<IReduxState, string>((state) => {\r\n    return state.user.balanceEth;\r\n  });\r\n\r\n  const handleDepositModalOpen = (index: number) => {\r\n    setDepositModalOpen(true);\r\n    setModalIndex(index);\r\n  };\r\n\r\n  const handleWithdrawModalOpen = (index: number) => {\r\n    setWithdrawModalOpen(true);\r\n    setModalIndex(index);\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setDepositModalOpen(false);\r\n    setWithdrawModalOpen(false);\r\n    setTokenValue(0);\r\n  };\r\n\r\n  const handleTokenValueChange = (e: any) => {\r\n    const floatRegExp = new RegExp(\"([0-9]+([.][0-9]*)?|[.][0-9]+)$\");\r\n    const dotRegExp = new RegExp(\"^([0-9]+[.][0]*)$\");\r\n    if (e.target.value === \"\" || floatRegExp.test(e.target.value)) {\r\n      let filteredValue = e.target.value;\r\n      if (dotRegExp.test(e.target.value)) {\r\n        setTokenValue(filteredValue);\r\n      } else {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        filteredValue = Math.floor(filteredValue * 1000) / 1000;\r\n        if (openDepositModal) {\r\n          if (\r\n            (modalIndex < 5 &&\r\n              filteredValue <= Number(balanceList[modalIndex].toFixed(3))) ||\r\n            (modalIndex === 5 && filteredValue <= Number(balanceEth))\r\n          ) {\r\n            setTokenValue(filteredValue);\r\n          } else {\r\n            if (modalIndex < 5) {\r\n              setTokenValue(Number(balanceList[modalIndex].toFixed(2)));\r\n            } else {\r\n              setTokenValue(Number(balanceEth));\r\n            }\r\n          }\r\n        } else {\r\n          if (\r\n            (modalIndex < 5 &&\r\n              filteredValue <=\r\n                Number(collateralFreeCollateralList[modalIndex].toFixed(3))) ||\r\n            (modalIndex === 5 &&\r\n              filteredValue <=\r\n                Number(collateralFreeCollateralList[1].toFixed(3)))\r\n          ) {\r\n            setTokenValue(filteredValue);\r\n          } else {\r\n            if (modalIndex < 5) {\r\n              setTokenValue(\r\n                Number(collateralFreeCollateralList[modalIndex].toFixed(3))\r\n              );\r\n            } else {\r\n              setTokenValue(Number(collateralFreeCollateralList[1].toFixed(3)));\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleMaxValue = () => {\r\n    if (openDepositModal) {\r\n      if (modalIndex < 5) {\r\n        setTokenValue(Number(balanceList[modalIndex].toFixed(3)));\r\n      } else {\r\n        setTokenValue(Number(balanceEth));\r\n      }\r\n    } else {\r\n      if (modalIndex < 5) {\r\n        setTokenValue(\r\n          Number(collateralFreeCollateralList[modalIndex].toFixed(3))\r\n        );\r\n      } else {\r\n        setTokenValue(Number(collateralFreeCollateralList[1].toFixed(3)));\r\n      }\r\n    }\r\n  };\r\n\r\n  const CalcUserAccountDetails = function () {\r\n    if (connected === true) {\r\n      dispatch(\r\n        calcUserAccountDetails({\r\n          networkID: chainID,\r\n          provider: provider,\r\n          perpetualObject: perpetualObject,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const onSeekApproval = async () => {\r\n    setOnTransaction(true);\r\n    await dispatch(\r\n      changeApproval({\r\n        provider: provider,\r\n        networkID: chainID,\r\n        tokenIndex: modalIndex,\r\n        perpetualObject: perpetualObject,\r\n      })\r\n    );\r\n    setOnTransaction(false);\r\n  };\r\n\r\n  const onSeekDeposit = async () => {\r\n    setOnTransaction(true);\r\n    if (modalIndex === 5) {\r\n      await dispatch(\r\n        changeDepositCollateral({\r\n          address: address,\r\n          provider: provider,\r\n          networkID: chainID,\r\n          amount: new Big(tokenValue),\r\n          perpetualObject: perpetualObject,\r\n        })\r\n      );\r\n      setOnTransaction(false);\r\n      setDepositModalOpen(false);\r\n    } else {\r\n      await dispatch(\r\n        changeDepositCollateral({\r\n          address: address,\r\n          provider: provider,\r\n          networkID: chainID,\r\n          tokenIndex: modalIndex,\r\n          amount: new Big(tokenValue),\r\n          perpetualObject: perpetualObject,\r\n        })\r\n      );\r\n      setOnTransaction(false);\r\n      setDepositModalOpen(false);\r\n    }\r\n  };\r\n\r\n  const onSeekWithdraw = async () => {\r\n    setOnTransaction(true);\r\n    if (modalIndex === 5) {\r\n      await dispatch(\r\n        withdrawCollateral({\r\n          address: address,\r\n          provider: provider,\r\n          networkID: chainID,\r\n          amount: new Big(tokenValue),\r\n          perpetualObject: perpetualObject,\r\n        })\r\n      );\r\n      setOnTransaction(false);\r\n      setWithdrawModalOpen(false);\r\n    } else {\r\n      await dispatch(\r\n        withdrawCollateral({\r\n          address: address,\r\n          provider: provider,\r\n          networkID: chainID,\r\n          tokenIndex: modalIndex,\r\n          amount: new Big(tokenValue),\r\n          perpetualObject: perpetualObject,\r\n        })\r\n      );\r\n      setOnTransaction(false);\r\n      setWithdrawModalOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    CalcUserAccountDetails();\r\n  }, [connected]);\r\n\r\n  return (\r\n    <Box pb={isDesktop ? \"0\" : \"52px\"}>\r\n      <TableContainer\r\n        component={Paper}\r\n        sx={{\r\n          mt: 2,\r\n          borderRadius: \"10px\",\r\n          background: \"transparent\",\r\n          border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n          mb: 3,\r\n        }}\r\n      >\r\n        <Table sx={{ minWidth: 400 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell\r\n                sx={{\r\n                  fontSize: isDesktop ? \"16px\" : \"14px\",\r\n                  fontFamily: \"Montserrat\",\r\n                  borderBottom: isUserAccountCalculated\r\n                    ? \"1px solid rgba(255, 255, 255, 0.12)\"\r\n                    : \"none\",\r\n                  textTransform: \"none\",\r\n                  p: \"10px 16px\",\r\n                  color: \"rgb(169, 168, 166)\",\r\n                }}\r\n              >\r\n                Coin\r\n              </TableCell>\r\n              <TableCell\r\n                sx={{\r\n                  fontSize: isDesktop ? \"16px\" : \"14px\",\r\n                  fontFamily: \"Montserrat\",\r\n                  borderBottom: isUserAccountCalculated\r\n                    ? \"1px solid rgba(255, 255, 255, 0.12)\"\r\n                    : \"none\",\r\n                  textTransform: \"none\",\r\n                  p: \"10px 16px\",\r\n                  color: \"rgb(169, 168, 166)\",\r\n                }}\r\n                align=\"right\"\r\n              >\r\n                Wallet\r\n              </TableCell>\r\n              <TableCell\r\n                sx={{\r\n                  fontSize: isDesktop ? \"16px\" : \"14px\",\r\n                  fontFamily: \"Montserrat\",\r\n                  borderBottom: isUserAccountCalculated\r\n                    ? \"1px solid rgba(255, 255, 255, 0.12)\"\r\n                    : \"none\",\r\n                  textTransform: \"none\",\r\n                  p: \"10px 16px\",\r\n                  color: \"rgb(169, 168, 166)\",\r\n                }}\r\n                align=\"right\"\r\n              >\r\n                Amount\r\n              </TableCell>\r\n              <TableCell\r\n                sx={{\r\n                  fontSize: isDesktop ? \"16px\" : \"14px\",\r\n                  fontFamily: \"Montserrat\",\r\n                  borderBottom: isUserAccountCalculated\r\n                    ? \"1px solid rgba(255, 255, 255, 0.12)\"\r\n                    : \"none\",\r\n                  textTransform: \"none\",\r\n                  p: \"10px 16px\",\r\n                  color: \"rgb(169, 168, 166)\",\r\n                }}\r\n                align=\"right\"\r\n              >\r\n                Withdrawable\r\n              </TableCell>\r\n              <TableCell\r\n                sx={{\r\n                  fontSize: isDesktop ? \"16px\" : \"14px\",\r\n                  fontFamily: \"Montserrat\",\r\n                  borderBottom: isUserAccountCalculated\r\n                    ? \"1px solid rgba(255, 255, 255, 0.12)\"\r\n                    : \"none\",\r\n                  textTransform: \"none\",\r\n                  p: \"10px 16px\",\r\n                  color: \"rgb(169, 168, 166)\",\r\n                }}\r\n                align=\"right\"\r\n              >\r\n                Action\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          {/* {\r\n            !isUserAccountCalculated && \r\n            <TableBody>\r\n              <TableRow>\r\n                <Box>\r\n              <CircularProgress size={24} color=\"inherit\" />\r\n              </Box>\r\n              </TableRow>\r\n              \r\n            </TableBody>\r\n            \r\n          } */}\r\n          {isUserAccountCalculated && (\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell\r\n                  component=\"th\"\r\n                  scope=\"row\"\r\n                  sx={{\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"12px\",\r\n                        lineHeight: \"1.3\",\r\n                        fontFamily: \"Montserrat Light\",\r\n                        color: \"rgb(169, 168, 166)\",\r\n                      }}\r\n                    >\r\n                      USDC\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"14px\",\r\n                        lineHeight: \"1.3\",\r\n                        fontFamily: \"Montserrat\",\r\n                        color: \"rgb(236, 232, 227)\",\r\n                      }}\r\n                    >\r\n                      ${collateralTokenPriceList[0].toFixed(2)}\r\n                    </Typography>\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {balanceList[0].toFixed(2)} USD\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {collateralBalanceList[0].toFixed(2)}\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {collateralFreeCollateralList[0].toFixed(2)}\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button\r\n                      disabled={!connected}\r\n                      sx={{\r\n                        padding: \"6px 16px\",\r\n                        borderRadius: \"6px\",\r\n                        color: \"rgb(236, 232, 227)\",\r\n                        textTransform: \"none\",\r\n                        fontSize: \"14px\",\r\n                        backgroundColor: \"rgb(37, 37, 37)\",\r\n                        boxSizing: \"border-box\",\r\n                        border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                        fontFamily: \"Montserrat\",\r\n                        \"&: hover\": {\r\n                          backgroundColor: \"rgb(234, 216, 184)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                        \"&: disabled\": {\r\n                          backgroundColor: \"transparent\",\r\n                          color: \"rgb(238, 233, 226)\",\r\n                        },\r\n                      }}\r\n                      onClick={() => handleWithdrawModalOpen(0)}\r\n                    >\r\n                      Withdraw\r\n                    </Button>\r\n                    <Button\r\n                      disabled={!connected}\r\n                      sx={{\r\n                        padding: \"6px 16px\",\r\n                        borderRadius: \"6px\",\r\n                        ml: 1,\r\n                        color: \"rgb(44, 46, 55)\",\r\n                        fontSize: \"14px\",\r\n                        textTransform: \"none\",\r\n                        backgroundColor: \"rgb(248, 204, 130)\",\r\n                        fontFamily: \"Montserrat\",\r\n                        \"&: hover\": {\r\n                          backgroundColor: \"rgb(234, 216, 184)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                        \"&: disabled\": {\r\n                          backgroundColor: \"rgb(248, 204, 130)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                      }}\r\n                      onClick={() => handleDepositModalOpen(0)}\r\n                    >\r\n                      Deposit\r\n                    </Button>\r\n                  </Box>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell\r\n                  component=\"th\"\r\n                  scope=\"row\"\r\n                  sx={{\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"12px\",\r\n                        lineHeight: \"1.3\",\r\n                        fontFamily: \"Montserrat Light\",\r\n                        color: \"rgb(169, 168, 166)\",\r\n                      }}\r\n                    >\r\n                      ETH\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"14px\",\r\n                        lineHeight: \"1.3\",\r\n                        fontFamily: \"Montserrat\",\r\n                        color: \"rgb(236, 232, 227)\",\r\n                      }}\r\n                    >\r\n                      ${collateralTokenPriceList[1].toFixed(2)}\r\n                    </Typography>\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {balanceEth} ETH\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {collateralBalanceList[1].toFixed(3)}\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {collateralFreeCollateralList[1].toFixed(3)}\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button\r\n                      disabled={!connected}\r\n                      sx={{\r\n                        padding: \"6px 16px\",\r\n                        borderRadius: \"6px\",\r\n                        color: \"rgb(236, 232, 227)\",\r\n                        textTransform: \"none\",\r\n                        fontSize: \"14px\",\r\n                        backgroundColor: \"rgb(37, 37, 37)\",\r\n                        boxSizing: \"border-box\",\r\n                        border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                        fontFamily: \"Montserrat\",\r\n                        \"&: hover\": {\r\n                          backgroundColor: \"rgb(234, 216, 184)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                        \"&: disabled\": {\r\n                          backgroundColor: \"transparent\",\r\n                          color: \"rgb(238, 233, 226)\",\r\n                        },\r\n                      }}\r\n                      onClick={() => handleWithdrawModalOpen(5)}\r\n                    >\r\n                      Withdraw\r\n                    </Button>\r\n                    <Button\r\n                      disabled={!connected}\r\n                      sx={{\r\n                        padding: \"6px 16px\",\r\n                        borderRadius: \"6px\",\r\n                        ml: 1,\r\n                        color: \"rgb(44, 46, 55)\",\r\n                        fontSize: \"14px\",\r\n                        textTransform: \"none\",\r\n                        backgroundColor: \"rgb(248, 204, 130)\",\r\n                        fontFamily: \"Montserrat\",\r\n                        \"&: hover\": {\r\n                          backgroundColor: \"rgb(234, 216, 184)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                        \"&: disabled\": {\r\n                          backgroundColor: \"rgb(248, 204, 130)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                      }}\r\n                      onClick={() => handleDepositModalOpen(5)}\r\n                    >\r\n                      Deposit\r\n                    </Button>\r\n                  </Box>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell\r\n                  component=\"th\"\r\n                  scope=\"row\"\r\n                  sx={{\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"12px\",\r\n                        lineHeight: \"1.3\",\r\n                        fontFamily: \"Montserrat Light\",\r\n                        color: \"rgb(169, 168, 166)\",\r\n                      }}\r\n                    >\r\n                      WETH\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"14px\",\r\n                        lineHeight: \"1.3\",\r\n                        fontFamily: \"Montserrat\",\r\n                        color: \"rgb(236, 232, 227)\",\r\n                      }}\r\n                    >\r\n                      ${collateralTokenPriceList[1].toFixed(2)}\r\n                    </Typography>\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {balanceList[1].toFixed(3)} WETH\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {collateralBalanceList[1].toFixed(3)}\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {collateralFreeCollateralList[1].toFixed(3)}\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button\r\n                      disabled={!connected}\r\n                      sx={{\r\n                        padding: \"6px 16px\",\r\n                        borderRadius: \"6px\",\r\n                        color: \"rgb(236, 232, 227)\",\r\n                        textTransform: \"none\",\r\n                        fontSize: \"14px\",\r\n                        backgroundColor: \"rgb(37, 37, 37)\",\r\n                        boxSizing: \"border-box\",\r\n                        border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                        fontFamily: \"Montserrat\",\r\n                        \"&: hover\": {\r\n                          backgroundColor: \"rgb(234, 216, 184)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                        \"&: disabled\": {\r\n                          backgroundColor: \"transparent\",\r\n                          color: \"rgb(238, 233, 226)\",\r\n                        },\r\n                      }}\r\n                      onClick={() => handleWithdrawModalOpen(1)}\r\n                    >\r\n                      Withdraw\r\n                    </Button>\r\n                    <Button\r\n                      disabled={!connected}\r\n                      sx={{\r\n                        padding: \"6px 16px\",\r\n                        borderRadius: \"6px\",\r\n                        ml: 1,\r\n                        color: \"rgb(44, 46, 55)\",\r\n                        fontSize: \"14px\",\r\n                        textTransform: \"none\",\r\n                        backgroundColor: \"rgb(248, 204, 130)\",\r\n                        fontFamily: \"Montserrat\",\r\n                        \"&: hover\": {\r\n                          backgroundColor: \"rgb(234, 216, 184)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                        \"&: disabled\": {\r\n                          backgroundColor: \"rgb(248, 204, 130)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                      }}\r\n                      onClick={() => handleDepositModalOpen(1)}\r\n                    >\r\n                      Deposit\r\n                    </Button>\r\n                  </Box>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell\r\n                  component=\"th\"\r\n                  scope=\"row\"\r\n                  sx={{\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"12px\",\r\n                        lineHeight: \"1.3\",\r\n                        fontFamily: \"Montserrat Light\",\r\n                        color: \"rgb(169, 168, 166)\",\r\n                      }}\r\n                    >\r\n                      FRAX\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"14px\",\r\n                        lineHeight: \"1.3\",\r\n                        fontFamily: \"Montserrat\",\r\n                        color: \"rgb(236, 232, 227)\",\r\n                      }}\r\n                    >\r\n                      ${collateralTokenPriceList[2].toFixed(2)}\r\n                    </Typography>\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {balanceList[2].toFixed(2)} FRAX\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {collateralBalanceList[2].toFixed(2)}\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {collateralFreeCollateralList[2].toFixed(2)}\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button\r\n                      disabled={!connected}\r\n                      sx={{\r\n                        padding: \"6px 16px\",\r\n                        borderRadius: \"6px\",\r\n                        color: \"rgb(236, 232, 227)\",\r\n                        textTransform: \"none\",\r\n                        fontSize: \"14px\",\r\n                        backgroundColor: \"rgb(37, 37, 37)\",\r\n                        boxSizing: \"border-box\",\r\n                        border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                        fontFamily: \"Montserrat\",\r\n                        \"&: hover\": {\r\n                          backgroundColor: \"rgb(234, 216, 184)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                        \"&: disabled\": {\r\n                          backgroundColor: \"transparent\",\r\n                          color: \"rgb(238, 233, 226)\",\r\n                        },\r\n                      }}\r\n                      onClick={() => handleWithdrawModalOpen(2)}\r\n                    >\r\n                      Withdraw\r\n                    </Button>\r\n                    <Button\r\n                      disabled={!connected}\r\n                      sx={{\r\n                        padding: \"6px 16px\",\r\n                        borderRadius: \"6px\",\r\n                        ml: 1,\r\n                        color: \"rgb(44, 46, 55)\",\r\n                        fontSize: \"14px\",\r\n                        textTransform: \"none\",\r\n                        backgroundColor: \"rgb(248, 204, 130)\",\r\n                        fontFamily: \"Montserrat\",\r\n                        \"&: hover\": {\r\n                          backgroundColor: \"rgb(234, 216, 184)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                        \"&: disabled\": {\r\n                          backgroundColor: \"rgb(248, 204, 130)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                      }}\r\n                      onClick={() => handleDepositModalOpen(2)}\r\n                    >\r\n                      Deposit\r\n                    </Button>\r\n                  </Box>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell\r\n                  component=\"th\"\r\n                  scope=\"row\"\r\n                  sx={{\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"12px\",\r\n                        lineHeight: \"1.3\",\r\n                        fontFamily: \"Montserrat Light\",\r\n                        color: \"rgb(169, 168, 166)\",\r\n                      }}\r\n                    >\r\n                      OP\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"14px\",\r\n                        lineHeight: \"1.3\",\r\n                        fontFamily: \"Montserrat\",\r\n                        color: \"rgb(236, 232, 227)\",\r\n                      }}\r\n                    >\r\n                      ${collateralTokenPriceList[3].toFixed(2)}\r\n                    </Typography>\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {balanceList[3].toFixed(2)} OP\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {collateralBalanceList[3].toFixed(2)}\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {collateralFreeCollateralList[3].toFixed(2)}\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button\r\n                      disabled={!connected}\r\n                      sx={{\r\n                        padding: \"6px 16px\",\r\n                        borderRadius: \"6px\",\r\n                        color: \"rgb(236, 232, 227)\",\r\n                        textTransform: \"none\",\r\n                        fontSize: \"14px\",\r\n                        backgroundColor: \"rgb(37, 37, 37)\",\r\n                        boxSizing: \"border-box\",\r\n                        border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                        fontFamily: \"Montserrat\",\r\n                        \"&: hover\": {\r\n                          backgroundColor: \"rgb(234, 216, 184)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                        \"&: disabled\": {\r\n                          backgroundColor: \"transparent\",\r\n                          color: \"rgb(238, 233, 226)\",\r\n                        },\r\n                      }}\r\n                      onClick={() => handleWithdrawModalOpen(3)}\r\n                    >\r\n                      Withdraw\r\n                    </Button>\r\n                    <Button\r\n                      disabled={!connected}\r\n                      sx={{\r\n                        padding: \"6px 16px\",\r\n                        borderRadius: \"6px\",\r\n                        ml: 1,\r\n                        color: \"rgb(44, 46, 55)\",\r\n                        fontSize: \"14px\",\r\n                        textTransform: \"none\",\r\n                        backgroundColor: \"rgb(248, 204, 130)\",\r\n                        fontFamily: \"Montserrat\",\r\n                        \"&: hover\": {\r\n                          backgroundColor: \"rgb(234, 216, 184)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                        \"&: disabled\": {\r\n                          backgroundColor: \"rgb(248, 204, 130)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                      }}\r\n                      onClick={() => handleDepositModalOpen(3)}\r\n                    >\r\n                      Deposit\r\n                    </Button>\r\n                  </Box>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow\r\n                sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n              >\r\n                <TableCell\r\n                  component=\"th\"\r\n                  scope=\"row\"\r\n                  sx={{\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"12px\",\r\n                        lineHeight: \"1.3\",\r\n                        fontFamily: \"Montserrat Light\",\r\n                        color: \"rgb(169, 168, 166)\",\r\n                      }}\r\n                    >\r\n                      USDT\r\n                    </Typography>\r\n                    <Typography\r\n                      sx={{\r\n                        fontSize: \"14px\",\r\n                        lineHeight: \"1.3\",\r\n                        fontFamily: \"Montserrat\",\r\n                        color: \"rgb(236, 232, 227)\",\r\n                      }}\r\n                    >\r\n                      ${collateralTokenPriceList[4].toFixed(2)}\r\n                    </Typography>\r\n                  </Box>\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {balanceList[4].toFixed(2)} USDT\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {collateralBalanceList[4].toFixed(2)}\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    fontSize: \"14px\",\r\n                    fontFamily: \"Montserrat\",\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    color: \"rgb(236, 232, 227)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  {collateralFreeCollateralList[4].toFixed(2)}\r\n                </TableCell>\r\n                <TableCell\r\n                  sx={{\r\n                    borderBottom: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                    p: \"10px 16px\",\r\n                  }}\r\n                  align=\"right\"\r\n                >\r\n                  <Box sx={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n                    <Button\r\n                      disabled={!connected}\r\n                      sx={{\r\n                        padding: \"6px 16px\",\r\n                        borderRadius: \"6px\",\r\n                        color: \"rgb(236, 232, 227)\",\r\n                        textTransform: \"none\",\r\n                        fontSize: \"14px\",\r\n                        backgroundColor: \"rgb(37, 37, 37)\",\r\n                        boxSizing: \"border-box\",\r\n                        border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                        fontFamily: \"Montserrat\",\r\n                        \"&: hover\": {\r\n                          backgroundColor: \"rgb(234, 216, 184)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                        \"&: disabled\": {\r\n                          backgroundColor: \"transparent\",\r\n                          color: \"rgb(238, 233, 226)\",\r\n                        },\r\n                      }}\r\n                      onClick={() => handleWithdrawModalOpen(4)}\r\n                    >\r\n                      Withdraw\r\n                    </Button>\r\n                    <Button\r\n                      disabled={!connected}\r\n                      sx={{\r\n                        padding: \"6px 16px\",\r\n                        borderRadius: \"6px\",\r\n                        ml: 1,\r\n                        color: \"rgb(44, 46, 55)\",\r\n                        fontSize: \"14px\",\r\n                        textTransform: \"none\",\r\n                        backgroundColor: \"rgb(248, 204, 130)\",\r\n                        fontFamily: \"Montserrat\",\r\n                        \"&: hover\": {\r\n                          backgroundColor: \"rgb(234, 216, 184)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                        \"&: disabled\": {\r\n                          backgroundColor: \"rgb(248, 204, 130)\",\r\n                          color: \"rgb(44, 46, 55)\",\r\n                        },\r\n                      }}\r\n                      onClick={() => handleDepositModalOpen(4)}\r\n                    >\r\n                      Deposit\r\n                    </Button>\r\n                  </Box>\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          )}\r\n        </Table>\r\n      </TableContainer>\r\n      {!isUserAccountCalculated && connected && (\r\n        <Box>\r\n          <CircularProgress size={24} sx={{ color: \"#ffffff\" }} />\r\n        </Box>\r\n      )}\r\n      <Modal\r\n        open={openDepositModal}\r\n        onClose={handleModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={modalStyle}>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Typography\r\n              sx={{\r\n                fontSize: \"18px\",\r\n                fontFamily: \"Montserrat Bold\",\r\n                color: \"white\",\r\n              }}\r\n            >\r\n              Deposit\r\n            </Typography>\r\n            <IconButton sx={{ padding: \"0\" }} onClick={handleModalClose}>\r\n              <CloseIcon sx={{ color: \"white\" }} />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: \"flex\", justifyContent: \"space-between\", mt: 3 }}>\r\n            <Button\r\n              sx={{\r\n                border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                borderRadius: \"10px\",\r\n                padding: \"4px 24px\",\r\n                color: \"rgb(169, 168, 166)\",\r\n                fontSize: \"16px\",\r\n                lineHeight: \"1\",\r\n                fontFamily: \"Montserrat Medium\",\r\n                mr: 1,\r\n              }}\r\n            >\r\n              {TokenList[modalIndex]}\r\n            </Button>\r\n            <FormControl sx={{ flexGrow: \"1\" }} variant=\"outlined\">\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-weight\"\r\n                value={tokenValue}\r\n                onChange={handleTokenValueChange}\r\n                aria-describedby=\"outlined-weight-helper-text\"\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <Button\r\n                      sx={{\r\n                        color: \"rgb(169, 168, 166)\",\r\n                        border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                        borderRadius: \"12px\",\r\n                        padding: \"2px 4px\",\r\n                        minWidth: \"44px\",\r\n                        fontSize: \"10px\",\r\n                      }}\r\n                      onClick={handleMaxValue}\r\n                    >\r\n                      Max\r\n                    </Button>\r\n                  </InputAdornment>\r\n                }\r\n                sx={{\r\n                  borderRadius: \"8px\",\r\n                  color: \"white\",\r\n                  pr: 1,\r\n                  border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                  \"& .MuiOutlinedInput-input\": { padding: \"12px 8px\" },\r\n                  \"& .MuiOutlinedInput-notchedOutline\": { border: \"none\" },\r\n                }}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n          <Box sx={{ display: \"flex\", justifyContent: \"flex-start\", mt: 2 }}>\r\n            <Typography\r\n              sx={{\r\n                fontFamily: \"Montserrat Medium\",\r\n                mr: 3,\r\n                fontSize: \"12px\",\r\n                color: \"rgba(145, 153, 167, 1)\",\r\n              }}\r\n            >\r\n              Balance:\r\n            </Typography>\r\n            {isUserAccountCalculated && modalIndex <= 4 && (\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: \"Montserrat Medium\",\r\n                  fontSize: \"12px\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {balanceList[modalIndex].toFixed(2)}\r\n              </Typography>\r\n            )}\r\n            {isUserAccountCalculated && modalIndex === 5 && (\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: \"Montserrat Medium\",\r\n                  fontSize: \"12px\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {balanceEth}\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n          {modalIndex === 5 ? (\r\n            <Button\r\n              disabled={onTransaction}\r\n              sx={{\r\n                borderRadius: \"8px\",\r\n                width: \"100%\",\r\n                border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                fontFamily: \"Montserrat SemiBold\",\r\n                background: \"rgb(37, 37, 37)\",\r\n                padding: 0,\r\n                height: \"50px\",\r\n                color: \"rgb(255, 184, 0)\",\r\n                mt: 1,\r\n                \"& :hover\": { background: \"rgb(43, 42, 42)\" },\r\n              }}\r\n              onClick={() => {\r\n                onSeekDeposit();\r\n              }}\r\n            >\r\n              {onTransaction ? (\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <CircularProgress size={24} sx={{ color: \"#ffffff\" }} />\r\n                </Box>\r\n              ) : (\r\n                \"Deposit\"\r\n              )}\r\n            </Button>\r\n          ) : isUserAccountCalculated &&\r\n            allowanceList[modalIndex].toNumber() > 0 ? (\r\n            <Button\r\n              disabled={onTransaction}\r\n              sx={{\r\n                borderRadius: \"8px\",\r\n                width: \"100%\",\r\n                border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                fontFamily: \"Montserrat SemiBold\",\r\n                background: \"rgb(37, 37, 37)\",\r\n                padding: 0,\r\n                height: \"50px\",\r\n                color: \"rgb(255, 184, 0)\",\r\n                mt: 1,\r\n                \"& :hover\": { background: \"rgb(43, 42, 42)\" },\r\n              }}\r\n              onClick={() => {\r\n                onSeekDeposit();\r\n              }}\r\n            >\r\n              {onTransaction ? (\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <CircularProgress size={24} sx={{ color: \"#ffffff\" }} />\r\n                </Box>\r\n              ) : (\r\n                \"Deposit\"\r\n              )}\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              disabled={onTransaction}\r\n              sx={{\r\n                borderRadius: \"8px\",\r\n                width: \"100%\",\r\n                border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                fontFamily: \"Montserrat SemiBold\",\r\n                background: \"rgb(37, 37, 37)\",\r\n                padding: 0,\r\n                height: \"50px\",\r\n                color: \"rgb(255, 184, 0)\",\r\n                mt: 1,\r\n                \"& :hover\": { background: \"rgb(43, 42, 42)\" },\r\n              }}\r\n              onClick={() => {\r\n                onSeekApproval();\r\n              }}\r\n            >\r\n              {onTransaction ? (\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <CircularProgress size={24} sx={{ color: \"#ffffff\" }} />\r\n                </Box>\r\n              ) : (\r\n                \"Approve\"\r\n              )}\r\n            </Button>\r\n          )}\r\n        </Box>\r\n      </Modal>\r\n      <Modal\r\n        open={openWithdrawModal}\r\n        onClose={handleModalClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box sx={modalStyle}>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Typography\r\n              sx={{\r\n                fontSize: \"18px\",\r\n                fontFamily: \"Montserrat Bold\",\r\n                color: \"rgb(236, 232, 227)\",\r\n              }}\r\n            >\r\n              Withdraw\r\n            </Typography>\r\n            <IconButton sx={{ padding: \"0\" }} onClick={handleModalClose}>\r\n              <CloseIcon sx={{ color: \"rgb(169, 168, 166)\" }} />\r\n            </IconButton>\r\n          </Box>\r\n          <Box sx={{ display: \"flex\", justifyContent: \"space-between\", mt: 3 }}>\r\n            <Button\r\n              sx={{\r\n                border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                borderRadius: \"10px\",\r\n                padding: \"4px 24px\",\r\n                lineHeight: \"1\",\r\n                fontSize: \"16px\",\r\n                color: \"rgb(169, 168, 166)\",\r\n                fontFamily: \"Montserrat Medium\",\r\n                mr: 1,\r\n              }}\r\n            >\r\n              {TokenList[modalIndex]}\r\n            </Button>\r\n            <FormControl sx={{ flexGrow: \"1\" }} variant=\"outlined\">\r\n              <OutlinedInput\r\n                id=\"outlined-adornment-weight\"\r\n                value={tokenValue}\r\n                onChange={handleTokenValueChange}\r\n                aria-describedby=\"outlined-weight-helper-text\"\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <Button\r\n                      sx={{\r\n                        color: \"rgb(169, 168, 166)\",\r\n                        border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                        borderRadius: \"12px\",\r\n                        padding: \"2px 4px\",\r\n                        minWidth: \"44px\",\r\n                        fontSize: \"10px\",\r\n                      }}\r\n                      onClick={handleMaxValue}\r\n                    >\r\n                      Max\r\n                    </Button>\r\n                  </InputAdornment>\r\n                }\r\n                sx={{\r\n                  borderRadius: \"8px\",\r\n                  color: \"white\",\r\n                  pr: 1,\r\n                  border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n                  \"& .MuiOutlinedInput-input\": { padding: \"12px 8px\" },\r\n                  \"& .MuiOutlinedInput-notchedOutline\": { border: \"none\" },\r\n                }}\r\n              />\r\n            </FormControl>\r\n          </Box>\r\n          <Box sx={{ display: \"flex\", justifyContent: \"flex-start\", mt: 2 }}>\r\n            <Typography\r\n              sx={{\r\n                fontFamily: \"Montserrat Medium\",\r\n                mr: 3,\r\n                fontSize: \"12px\",\r\n                color: \"rgba(145, 153, 167, 1)\",\r\n              }}\r\n            >\r\n              Balance:\r\n            </Typography>\r\n            {isUserAccountCalculated && modalIndex <= 4 && (\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: \"Montserrat Medium\",\r\n                  fontSize: \"12px\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {collateralFreeCollateralList[modalIndex].toFixed(3)}\r\n              </Typography>\r\n            )}\r\n            {isUserAccountCalculated && modalIndex === 5 && (\r\n              <Typography\r\n                sx={{\r\n                  fontFamily: \"Montserrat Medium\",\r\n                  fontSize: \"12px\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                {collateralFreeCollateralList[1].toFixed(3)}\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n          <Button\r\n            disabled={onTransaction}\r\n            sx={{\r\n              borderRadius: \"8px\",\r\n              width: \"100%\",\r\n              border: \"1px solid rgba(255, 255, 255, 0.12)\",\r\n              fontFamily: \"Montserrat SemiBold\",\r\n              background: \"rgb(37, 37, 37)\",\r\n              padding: 0,\r\n              height: \"50px\",\r\n              color: \"rgb(255, 184, 0)\",\r\n              mt: 1,\r\n              \"& :hover\": { background: \"rgb(43, 42, 42)\" },\r\n            }}\r\n            onClick={() => {\r\n              onSeekWithdraw();\r\n            }}\r\n          >\r\n            {onTransaction ? (\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <CircularProgress size={24} sx={{ color: \"#ffffff\" }} />\r\n              </Box>\r\n            ) : (\r\n              \"Withdraw\"\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CollateralBoard;\r\n","import { Box } from \"@mui/material\";\r\n\r\nimport CollateralBalance from \"./components/CollateralBalance\";\r\nimport CollateralBoard from \"./components/CollateralBoard\";\r\nimport useResponsive from \"../../hooks/useResponsive\";\r\n\r\nfunction Home() {\r\n  const isDesktop = useResponsive(\"up\", \"md\");\r\n  return (\r\n    <Box\r\n\t\t\tdisplay=\"flex\"\r\n\t\t\tjustifyContent=\"center\"\r\n\t\t\tpt=\"24px\"\r\n\t\t\tpx={isDesktop? \"24px\" : \"16px\"}\r\n\t\t\theight={isDesktop? \"calc(100vh - 189px)\" : \"calc(100vh - 168px)\"}\t\t\t\r\n      sx={{\r\n        backgroundColor: \"#131312\",        \r\n      }}\r\n    >\r\n      <Box sx={{ maxWidth: \"1124px\", width: \"100%\" }}>\r\n        <CollateralBalance />\r\n        <CollateralBoard />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { close } from \"../../store/slices/messages-slice\";\r\n// import \"./console-interceptor\";\r\nimport { MessagesState } from \"../../store/slices/messages-slice\";\r\nimport { IReduxState } from \"../../store/slices/state.interface\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\n// A component that displays error messages\r\nfunction Messages() {\r\n    const { enqueueSnackbar } = useSnackbar();\r\n    const messages = useSelector<IReduxState, MessagesState>(state => state.messages);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (messages.message) {\r\n            enqueueSnackbar(JSON.stringify(messages.message));\r\n            dispatch(close());\r\n        }\r\n    }, [messages.message]);\r\n\r\n    return <div></div>;\r\n}\r\n\r\nexport default Messages;\r\n","import { Route, Routes, Navigate } from \"react-router-dom\";\r\nimport ConnectMenu from \"./Header\";\r\nimport PriceHeader from \"./Pages/Trade/components/PriceHeader\";\r\nimport Trade from \"./Pages/Trade\";\r\nimport Home from \"./Pages/Home\";\r\nimport './App.scss';\r\nimport Messages from \"./components/Messages\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <ConnectMenu />   \r\n      <PriceHeader />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/account\" element={<Home />} />\r\n        <Route path=\"/pools\" element={<Home />} />\r\n        <Route path=\"/trade\" element={<Trade />} />\r\n        <Route path=\"*\" element={<Navigate replace to=\"/\" />}/>\r\n      </Routes>      \r\n      <Messages />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport messagesReducer from \"./slices/messages-slice\";\r\nimport positionsReducer from \"./slices/position-slice\";\r\nimport userSlice from \"./slices/user-slice\";\r\nimport marketsSlice from \"./slices/markets-slice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {        \r\n        messages: messagesReducer,    \r\n        positions: positionsReducer,   \r\n        user: userSlice, \r\n        markets: marketsSlice,\r\n    },\r\n    middleware: getDefaultMiddleware => getDefaultMiddleware({ serializableCheck: false }),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport default store;\r\n","import React, { useState, forwardRef, useCallback } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  Collapse,\r\n  Paper,\r\n  Typography,\r\n  Card,\r\n  CardActions,\r\n  Button,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { makeStyles, createStyles } from \"@mui/styles\";\r\n\r\nimport { useSnackbar, SnackbarContent } from \"notistack\";\r\n\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\r\nimport { Message } from \"../../store/slices/messages-slice\";\r\nimport WarningIcon from \"@mui/icons-material/Warning\";\r\nimport ErrorIcon from \"@mui/icons-material/Error\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport SuccessIcon from \"@mui/icons-material/CheckCircle\";\r\nimport { AlertColor } from \"@mui/material/Alert\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    \"@media (min-width:600px)\": {\r\n      minWidth: \"344px !important\",\r\n    },\r\n  },\r\n  card: {\r\n    width: \"100%\",\r\n  },\r\n  error: {\r\n    backgroundColor: \"#d32f2f !important\",\r\n  },\r\n  info: {\r\n    backgroundColor: \"#2979ff !important\",\r\n  },\r\n  warning: {\r\n    backgroundColor: \"#ffa000 !important\",\r\n  },\r\n  success: {\r\n    backgroundColor: \"#43a047 !important\",\r\n  },\r\n  typography: {\r\n    color: \"#FFFFFF\",\r\n    fontFamily: \"Montserrat SemiBold\",\r\n  },\r\n  actionRoot: {\r\n    padding: \"8px 8px 8px 16px\",\r\n    justifyContent: \"space-between\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  icons: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  expand: {\r\n    padding: \"8px 8px\",\r\n    transform: \"rotate(0deg)\",\r\n    transition: \"all .2s\",\r\n    color: \"#FFFFFF\",\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  collapse: {\r\n    padding: 16,\r\n  },\r\n  checkIcon: {\r\n    fontSize: 20,\r\n    color: \"#b3b3b3\",\r\n    paddingRight: 4,\r\n  },\r\n  checkIconCopy: {\r\n    color: \"#43a047\",\r\n  },\r\n  button: {\r\n    padding: 0,\r\n    textTransform: \"none\",\r\n  },\r\n  errorWrap: {\r\n    marginTop: 10,\r\n  },\r\n  errorText: {\r\n    whiteSpace: \"pre-wrap\",\r\n    maxHeight: 300,\r\n    overflow: \"auto\",\r\n    background: \"rgba(0,0,0,0.1)\",\r\n    padding: 5,\r\n    borderRadius: 5,\r\n  },\r\n}));\r\n\r\nconst SnackMessage = forwardRef<\r\n  HTMLDivElement,\r\n  { id: string | number; message: Message }\r\n>((props, ref) => {\r\n  const classes = useStyles();\r\n  const { closeSnackbar } = useSnackbar();\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [isCopy, setIsCopy] = useState(false);\r\n\r\n  const handleExpandClick = useCallback(() => {\r\n    setExpanded((oldExpanded) => !oldExpanded);\r\n  }, []);\r\n\r\n  const handleDismiss = useCallback(() => {\r\n    closeSnackbar(props.id);\r\n  }, [props.id, closeSnackbar]);\r\n\r\n  const getIcon = (severity: AlertColor) => {\r\n    switch (severity) {\r\n      case \"error\":\r\n        return <ErrorIcon color=\"inherit\" />;\r\n      case \"info\":\r\n        return <InfoIcon color=\"inherit\" />;\r\n      case \"success\":\r\n        return <SuccessIcon color=\"inherit\" />;\r\n      case \"warning\":\r\n        return <WarningIcon color=\"inherit\" />;\r\n      default:\r\n        return <div />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SnackbarContent ref={ref} className={classes.root}>\r\n      <Card\r\n        className={classnames(classes.card, classes[props.message.severity])}\r\n      >\r\n        <CardActions classes={{ root: classes.actionRoot }}>\r\n          {getIcon(props.message.severity)}\r\n          <Typography variant=\"subtitle2\" className={classes.typography}>\r\n            {props.message.text}\r\n          </Typography>\r\n          <div className={classes.icons}>\r\n            {props.message.error && (\r\n              <IconButton\r\n                aria-label=\"Show more\"\r\n                className={classnames(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n                onClick={handleExpandClick}\r\n              >\r\n                <ExpandMoreIcon color=\"inherit\" />\r\n              </IconButton>\r\n            )}\r\n            <IconButton className={classes.expand} onClick={handleDismiss}>\r\n              <CloseIcon color=\"inherit\" />\r\n            </IconButton>\r\n          </div>\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <Paper className={classes.collapse}>\r\n            <CopyToClipboard\r\n              text={JSON.stringify(props.message.error)}\r\n              onCopy={() => setIsCopy(true)}\r\n            >\r\n              <Button size=\"small\" className={classes.button}>\r\n                <CheckCircleIcon\r\n                  className={classnames(classes.checkIcon, {\r\n                    [classes.checkIconCopy]: isCopy,\r\n                  })}\r\n                />\r\n                Copy to clipboard\r\n              </Button>\r\n            </CopyToClipboard>\r\n            <div className={classes.errorWrap}>\r\n              <Typography>Error message: </Typography>\r\n              <Typography className={classes.errorText}>\r\n                {JSON.stringify(props.message.error, null, 2)}\r\n              </Typography>\r\n            </div>\r\n          </Paper>\r\n        </Collapse>\r\n      </Card>\r\n    </SnackbarContent>\r\n  );\r\n});\r\n\r\nexport default SnackMessage;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./store/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Web3ContextProvider } from \"./hooks/web3Context\";\r\nimport { SnackbarProvider } from \"notistack\";\r\nimport SnackMessage from \"./components/Messages/snackbar\";\r\nimport { Trade } from \"./container/trade\";\r\nimport { AMM } from \"./container/amm\";\r\n\r\nconst Providers = (\r\n  (...providers: any[]) =>\r\n  ({ children }: { children: React.ReactNode }) => {\r\n    return providers.reduceRight((providers, provider) => {\r\n      const Provider = provider.component || provider;\r\n      const props = provider.props || {};\r\n      return <Provider {...props}>{providers}</Provider>;\r\n    }, children);\r\n  }\r\n)(Trade.Provider, AMM.Provider);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <SnackbarProvider\r\n      maxSnack={4}\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n      content={(key: string | number, message: string) => (\r\n        <SnackMessage id={key} message={JSON.parse(message)} />\r\n      )}\r\n      autoHideDuration={10000}\r\n    >\r\n      <Provider store={store}>\r\n        <Web3ContextProvider>\r\n          <Providers>\r\n            <HashRouter>\r\n              <App />\r\n            </HashRouter>\r\n          </Providers>\r\n        </Web3ContextProvider>\r\n      </Provider>\r\n    </SnackbarProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
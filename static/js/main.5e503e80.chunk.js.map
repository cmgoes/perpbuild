{"version":3,"sources":["constants/blockchain.ts","hooks/web3Context.tsx","hooks/helpers/index.tsx","Header/index.tsx","container/trade/index.tsx","Pages/Trade/components/Sideswitcher.tsx","container/amm/index.tsx","Pages/Trade/components/Marketselector.tsx","constants/number.ts","util/format.ts","hooks/useDebounce.ts","Pages/Trade/components/Collateral.tsx","Pages/Trade/components/Slippage.tsx","Pages/Trade/components/SendTransaction.tsx","Pages/Trade/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Networks","DEFAULD_NETWORK","OPTIMISM","Web3Context","React","createContext","useWeb3Context","web3Context","useContext","Error","onChainProvider","useMemo","Web3ContextProvider","children","useState","connected","setConnected","chainID","providerChainID","setProviderChainID","address","setAddress","uri","StaticJsonRpcProvider","provider","setProvider","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","options","rpc","web3Modal","hasCachedProvider","cachedProvider","_initListeners","useCallback","rawProvider","on","setTimeout","window","location","reload","chain","changeNetwork","_newNetwork","oldNetwork","otherChainID","network","Number","connect","connectedProvider","Web3Provider","getNetwork","then","chainId","getSigner","getAddress","connectedAddress","disconnect","clearCachedProvider","Provider","value","ConnectMenu","web3","checkWrongNetwork","isConnected","buttonText","clickFunc","useEffect","AppBar","position","sx","backgroundColor","backgroundImage","py","Container","maxWidth","Box","flexGrow","justifyContent","alignItems","ml","xs","md","display","Typography","variant","fontWeight","textAlign","color","Button","cursor","onClick","Trade","createContainer","PositionSide","LONG","side","setPositionSide","Big","slippage","setSlippage","collateral","setCollateral","SideSwitcher","useContainer","handleLongOnClick","handleShortOnClick","SHORT","ButtonGroup","size","border","width","AMM","marketticker","setMarketTicker","MarketSelector","open","setOpen","FormControl","m","InputLabel","shrink","Select","labelId","id","defaultValue","onClose","onOpen","label","onChange","event","target","map","market","MenuItem","RegExp","formatInput","input","digits","firstDotIndex","indexOf","formattedString","split","filter","alphabet","index","join","includes","length","substr","useDebounce","delay","onBeforeDebounce","onAfterDebounce","debouncedValue","setDebouncedValue","handler","clearTimeout","Collateral","_collateral","_setCollateral","console","log","debouncedCollateral","handleOnInput","e","formattedValue","b_debouncedCollateral","eq","my","TextField","type","placeholder","InputLabelProps","InputProps","endAdornment","InputAdornment","Slippage","_slippage","_setSlippage","debouncedSlippage","b_debouncedSlippage","SendTransaction","_newPositionDraft","oppositeAmount","setOppositeAmount","entryPrice","setEntryPrice","tradingFee","setTradingFee","priceImpact","setPriceImpact","setPositionOpen","PerpetualProtocol","SupportedChainIds","providerConfigs","rpcUrl","perpetualObject","newPositionDraft","setNewPositionDraft","tickerSymbol","amountInput","outputSymbol","substring","init","signer","clearingHouse","createPositionDraft","isAmountInputBase","getEntryPrice","toFixed","getTransactionFee","getPriceImpact","getOppositeAmountBound","oppositeAmountBound","BeforeAll","handleClose","positions","getTakerPositionByTickerSymbol","undefined","closePosition","mt","mb","disabled","mx","pb","fontSize","paddingY","opacity","openPosition","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Providers","providers","reduceRight","component","props","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e503e80.chunk.js","sourcesContent":["export const TOKEN_DECIMALS = 9;\r\n\r\nexport enum Networks {\r\n    // AVAX = 43114,\r\n    OPTIMISM = 10, // for mainnet\r\n    OPTIMISM_GOERLI = 420, // for optimism goerli\r\n}\r\n\r\nexport const DEFAULD_NETWORK = Networks.OPTIMISM;\r\n// export const DEFAULD_NETWORK = Networks.OPTIMISM_GOERLI;\r\n","import React, { useState, ReactElement, useContext, useMemo, useCallback } from \"react\";\r\nimport Web3Modal from \"web3modal\";\r\nimport { StaticJsonRpcProvider, JsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { getMainnetURI } from \"./helpers\";\r\n// import { DEFAULD_NETWORK } from \"../constants\";\r\nimport { Networks, DEFAULD_NETWORK } from \"../constants/blockchain\";\r\n// import { messages } from \"../../constants/messages\";\r\n// import { useDispatch } from \"react-redux\";\r\n// import { swithNetwork } from \"../helpers/switch-network\";\r\n\r\ntype onChainProvider = {\r\n    connect: () => Promise<Web3Provider>;\r\n    disconnect: () => void;\r\n    checkWrongNetwork: () => Promise<boolean>;\r\n    provider: JsonRpcProvider;\r\n    address: string;\r\n    connected: Boolean;\r\n    web3Modal: Web3Modal;\r\n    chainID: number;\r\n    web3?: any;\r\n    providerChainID: number;\r\n    hasCachedProvider: () => boolean;\r\n};\r\n\r\nexport type Web3ContextData = {\r\n    onChainProvider: onChainProvider;\r\n} | null;\r\n\r\nconst Web3Context = React.createContext<Web3ContextData>(null);\r\n\r\nexport const useWeb3Context = () => {\r\n    const web3Context = useContext(Web3Context);\r\n    if (!web3Context) {\r\n        throw new Error(\"useWeb3Context() can only be used inside of <Web3ContextProvider />, \" + \"please declare it at a higher level.\");\r\n    }\r\n    const { onChainProvider } = web3Context;\r\n    return useMemo(() => {\r\n        return { ...onChainProvider };\r\n    }, [web3Context]);\r\n};\r\n\r\nexport const useAddress = () => {\r\n    const { address } = useWeb3Context();\r\n    return address;\r\n};\r\n\r\nexport const Web3ContextProvider: React.FC<{ children: ReactElement }> = ({ children }) => {\r\n    // const dispatch = useDispatch();\r\n\r\n    const [connected, setConnected] = useState(false);\r\n    const [chainID, setChainID] = useState(DEFAULD_NETWORK);\r\n    const [providerChainID, setProviderChainID] = useState(DEFAULD_NETWORK);\r\n    const [address, setAddress] = useState(\"\");\r\n\r\n    const [uri, setUri] = useState(getMainnetURI());\r\n    const [provider, setProvider] = useState<JsonRpcProvider>(new StaticJsonRpcProvider(uri));\r\n\r\n    const [web3Modal] = useState<Web3Modal>(\r\n        new Web3Modal({\r\n            cacheProvider: true,\r\n            providerOptions: {\r\n                walletconnect: {\r\n                    package: WalletConnectProvider,\r\n                    options: {\r\n                        rpc: {\r\n                            [Networks.OPTIMISM]: getMainnetURI(),\r\n                            // [Networks.OPTIMISM_GOERLI]: getMainnetURI(),\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        }),\r\n    );\r\n\r\n    const hasCachedProvider = (): boolean => {\r\n        if (!web3Modal) return false;\r\n        if (!web3Modal.cachedProvider) return false;\r\n        return true;\r\n    };\r\n\r\n    const _initListeners = useCallback(\r\n        (rawProvider: JsonRpcProvider) => {\r\n            if (!rawProvider.on) {\r\n                return;\r\n            }\r\n\r\n            rawProvider.on(\"accountsChanged\", () => setTimeout(() => window.location.reload(), 1));\r\n\r\n            rawProvider.on(\"chainChanged\", async (chain: number) => {\r\n                changeNetwork(chain);\r\n            });\r\n\r\n            rawProvider.on(\"network\", (_newNetwork, oldNetwork) => {\r\n                if (!oldNetwork) return;\r\n                window.location.reload();\r\n            });\r\n        },\r\n        [provider],\r\n    );\r\n\r\n    const changeNetwork = async (otherChainID: number) => {\r\n        const network = Number(otherChainID);\r\n\r\n        setProviderChainID(network);\r\n    };\r\n\r\n    const connect = useCallback(async () => {\r\n        const rawProvider = await web3Modal.connect();\r\n\r\n        _initListeners(rawProvider);\r\n\r\n        const connectedProvider = new Web3Provider(rawProvider, \"any\");\r\n\r\n        const chainId = await connectedProvider.getNetwork().then(network => Number(network.chainId));\r\n        const connectedAddress = await connectedProvider.getSigner().getAddress();\r\n\r\n        setAddress(connectedAddress);\r\n\r\n        setProviderChainID(chainId);\r\n\r\n        if (chainId === Networks.OPTIMISM) {\r\n            setProvider(connectedProvider);\r\n        }\r\n        // if (chainId === Networks.OPTIMISM_GOERLI) {\r\n        //     setProvider(connectedProvider);\r\n        // }\r\n\r\n        setConnected(true);\r\n\r\n        return connectedProvider;\r\n    }, [provider, web3Modal, connected]);\r\n\r\n    // const checkWrongNetwork = async (): Promise<boolean> => {\r\n    //     if (providerChainID !== DEFAULD_NETWORK) {\r\n    //         const shouldSwitch = window.confirm(messages.switch_to_avalanche);\r\n    //         if (shouldSwitch) {\r\n    //             await swithNetwork();\r\n    //             window.location.reload();\r\n    //         }\r\n    //         return true;\r\n    //     }\r\n\r\n    //     return false;\r\n    // };\r\n\r\n    const disconnect = useCallback(async () => {\r\n        web3Modal.clearCachedProvider();\r\n        setConnected(false);\r\n\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 1);\r\n    }, [provider, web3Modal, connected]);\r\n\r\n    const onChainProvider = useMemo(\r\n        () => ({\r\n            connect,\r\n            disconnect,\r\n            hasCachedProvider,\r\n            provider,\r\n            connected,\r\n            address,\r\n            chainID,\r\n            web3Modal,\r\n            providerChainID,            \r\n        }),\r\n        [connect, disconnect, hasCachedProvider, provider, connected, address, chainID, web3Modal, providerChainID],\r\n    );\r\n    //@ts-ignore\r\n    return <Web3Context.Provider value={{ onChainProvider }}>{children}</Web3Context.Provider>;\r\n};\r\n","export const getMainnetURI = (): string => {\r\n  return \"https://mainnet.optimism.io\";  \r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n    AppBar,\r\n    Box,\r\n    Button,\r\n    Container,    \r\n    Typography,\r\n  } from \"@mui/material\";\r\nimport { useWeb3Context } from \"../hooks/web3Context\";\r\nimport { DEFAULD_NETWORK } from \"../constants/blockchain\";\r\nimport { PerpetualProtocol, PositionSide, SupportedChainIds, Wallet, big2BigNumberAndScaleUp, getTransaction } from \"@perp/sdk-curie\";\r\nimport Big from \"big.js\"\r\nimport ContractName from \"@perp/sdk-curie\";\r\nimport { constants } from \"ethers\"\r\n// import \"./connect-menu.scss\";\r\n\r\nfunction ConnectMenu() {\r\n    const { connect, disconnect, connected, web3, address, provider, providerChainID, checkWrongNetwork } = useWeb3Context();    \r\n    const [isConnected, setConnected] = useState(connected);    \r\n    // const signer = provider.getSigner(\"0xE1995a6441B0e5443f5403A69e530a33249C4f2a\");\r\n\r\n    // const tickerSymbol = \"ETHUSD\"\r\n    // const slippage = new Big(0.02)            \r\n    // const amountInput = new Big(1)\r\n    // const side = PositionSide.LONG\r\n    // const isAmountInputBase = false\r\n\r\n    let buttonText = \"Connect Wallet\";\r\n    let clickFunc: any = connect;\r\n    let buttonStyle = {cursor: 'pointer'};\r\n\r\n    if (isConnected) {\r\n        buttonText = \"Disconnect\";\r\n        clickFunc = disconnect;\r\n    }    \r\n\r\n    if (isConnected && providerChainID !== DEFAULD_NETWORK) {\r\n        buttonText = \"Wrong network\";\r\n        // buttonStyle = { backgroundColor: \"rgb(255, 67, 67)\" };\r\n        clickFunc = () => {\r\n            checkWrongNetwork();\r\n        };\r\n    }\r\n\r\n    useEffect(() => {\r\n        setConnected(connected);\r\n    }, [web3, connected]);\r\n\r\n    // useEffect(() => {        \r\n    //     async function BeforeAll() {\r\n    //         if( isConnected && providerChainID === DEFAULD_NETWORK ) {\r\n    //             const perp =  new PerpetualProtocol({\r\n    //                 // chainId: SupportedChainIds.OPTIMISM_GOERLI,\r\n    //                 chainId: SupportedChainIds.OPTIMISM,   \r\n    //                 // chainId: 420,                 \r\n    //                 providerConfigs: [\r\n    //                     {\r\n    //                         rpcUrl: \"https://mainnet.optimism.io\",\r\n    //                         // rpcUrl: \"https://goerli.optimism.io/\",\r\n                            \r\n    //                     },\r\n    //                 ],\r\n    //             });\r\n                                \r\n    //             console.log(\"ChainId\", SupportedChainIds.OPTIMISM);\r\n    //             const result =await perp.init();\r\n    //             const perpconnect = await perp.connect({ signer: provider.getSigner() })\r\n    //             const newPositionDraft = perp.clearingHouse?.createPositionDraft({\r\n    //                 tickerSymbol,\r\n    //                 side,\r\n    //                 amountInput,\r\n    //                 isAmountInputBase,\r\n    //             }) \r\n    //             // console.log(\"Init perp\", result);                \r\n    //             console.log(\"Perp connected\", perp.hasConnected());\r\n    //             console.log(\"Perp initialized\", perp.hasInitialized());\r\n    //             console.log(\"Perp metadata\", perp.metadata);\r\n    //             console.log(\"Perp wallet\", perp.wallet);\r\n    //             console.log(\"Perp vault\", perp.vault);\r\n    //             console.log(\"Perp market\", perp.markets);\r\n    //             console.log(\"Perp Positions\", perp.positions);\r\n\r\n    //             const accountvalue = perp.clearingHouse?.getAccountValue();\r\n    //             console.log(\"Account Value\", accountvalue);\r\n\r\n    //             // console.log(\"Connect perp\", perpconnect);\r\n    //             // const openpos = perp.clearingHouse?.openPosition(newPositionDraft!, slippage);  \r\n    //             const oppositeAmountBound = await newPositionDraft?.getOppositeAmountBound(slippage)          \r\n    //             console.log(\"Position Draft\", newPositionDraft);\r\n    //             // console.log(\"Opened position\", openpos);\r\n    //             // console.log(\"opposite position\", oppositeAmountBound);\r\n    //             // const accountValue = await perp.contractReader.getAccountValue(address); fetching account valance from clearing house\r\n    //             // console.log(\"Account Value\", accountValue);\r\n    //             const approveOpenPosition = await perp.delegateApproval?.delegateApprovalForOpenPosition();\r\n    //             console.log(\"Approve OpenPosition\", approveOpenPosition);\r\n    //             const position = await perp.positions?.getTakerPositionByTickerSymbol(tickerSymbol);\r\n    //             console.log(\"Close perp\", position);\r\n    //             await perp.clearingHouse?.closePosition(position!, slippage)\r\n                \r\n    //         }\r\n    //     }\r\n    //     BeforeAll();\r\n            \r\n    // }, [isConnected, providerChainID]);  \r\n\r\n    return (\r\n        <AppBar\r\n            position=\"static\"\r\n            sx={{\r\n                backgroundColor: \"transparent\",\r\n                backgroundImage: \"none\",\r\n                py: \"20px\",\r\n            }}\r\n            >\r\n            <Container maxWidth=\"xl\">\r\n                <Box\r\n                    flexGrow={1}          \r\n                    justifyContent=\"space-between\"         \r\n                    alignItems=\"center\" \r\n                    sx={{ ml: { xs: \"20px\", md: \"60px\" }, display: \"flex\" }}\r\n                >\r\n                    <Typography\r\n                        variant=\"h4\"\r\n                        fontWeight=\"700\"\r\n                        textAlign=\"center\"\r\n                        color=\"blue\"                        \r\n                    >\r\n                        Perp V2\r\n                    </Typography>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        sx={{cursor: 'pointer'}}\r\n                        onClick={clickFunc}\r\n                    >\r\n                        {buttonText}\r\n                    </Button>\r\n\r\n                    {/* // <div className=\"connect-button\" style={buttonStyle} onClick={clickFunc}>\r\n                    //     <p>{buttonText}</p>   \r\n                    //     {isConnected === true && <p>SDK curie</p>}         \r\n                    // </div> */}\r\n                </Box>\r\n            </Container>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default ConnectMenu;\r\n","import { useMemo, useState } from \"react\"\nimport { createContainer } from \"unstated-next\"\nimport { PositionSide } from \"@perp/sdk-curie\";\nimport Big from \"big.js\"\n\nexport const Trade = createContainer(useTrade)\n\nfunction useTrade() {\n    /* long = 1, short = 0 */\n    const [side, setPositionSide] = useState<PositionSide>(PositionSide.LONG);\n\n    /* min: 1, max: 10 */\n    // const [leverage, setLeverage] = useState<number>(1)\n\n    /* min: 0% */\n    const [slippage, setSlippage] = useState<Big>(new Big(0.02))\n\n    const [collateral, setCollateral] = useState<Big>(new Big(1))\n\n    return useMemo(\n        () => ({\n            side,\n            setPositionSide,            \n            slippage,\n            setSlippage,\n            collateral,\n            setCollateral,\n        }),\n        [side, slippage, collateral],\n    )\n}\n","import {useState, useCallback, useEffect} from \"react\";\n\nimport {\n\tAppBar,\n\tBox,\n\tButtonGroup,\n\tButton,\n\tContainer,    \n\tTypography,\n} from \"@mui/material\";\n\nimport { PositionSide } from \"@perp/sdk-curie\";\nimport {Trade} from '../../../container/trade';\n\n\nfunction SideSwitcher() {\n\tconst {side, setPositionSide} = Trade.useContainer();\t\n\tconst handleLongOnClick = useCallback(() => {\n\t\tif (side !== PositionSide.LONG) {\n\t\t\tsetPositionSide(PositionSide.LONG);\t\t\t\n\t\t}\t\t\n\t}, [side])\n\n\tconst handleShortOnClick = useCallback(() => {\n\t\tif (side !== PositionSide.SHORT) {\n\t\t\tsetPositionSide(PositionSide.SHORT);\t\t\t\n\t\t}\t\t\t\t\n\t}, [side])\t\n\n\treturn (\n\t\t<ButtonGroup size=\"large\" sx={{py: '20px', border: 'none'}}>\n\t\t\t<Button \n\t\t\t\tsx={{\n\t\t\t\t\twidth: '150px',\n\t\t\t\t\tbackgroundColor: \n\t\t\t\t\t\tside === PositionSide.LONG? 'success.light' : 'gray',\n\t\t\t\t\tcolor: \n\t\t\t\t\t\tside === PositionSide.LONG? 'white' : 'black',\n\t\t\t\t\t'&: hover': {\n\t\t\t\t\t\tbackgroundColor: 'success.main'\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t}}\n\t\t\t\tonClick={handleLongOnClick}\n\t\t\t>\n\t\t\t\tLong\n\t\t\t</Button>\n\t\t\t<Button \n\t\t\t\tsx={{\n\t\t\t\t\twidth: '150px',\n\t\t\t\t\tbackgroundColor: \n\t\t\t\t\t\tside === PositionSide.SHORT? '#ef5350' : 'gray',\n\t\t\t\t\tcolor: \n\t\t\t\t\t\tside === PositionSide.SHORT? 'white' : 'black',\n\t\t\t\t\t'&: hover': {\n\t\t\t\t\t\tbackgroundColor: '#f44336'\n\t\t\t\t\t}\t\t\n\t\t\t\t}}\n\t\t\t\tonClick={handleShortOnClick}\n\t\t\t>\n\t\t\t\tShort\n\t\t\t</Button>\t\t\t\n\t\t</ButtonGroup>\n\n\t\t\n\t)\n}\n\nexport default SideSwitcher;","import { useMemo, useState } from \"react\"\nimport { createContainer } from \"unstated-next\"\n\nexport const AMM = createContainer(useAMM)\n\nfunction useAMM() {    \n    const [marketticker, setMarketTicker] = useState<string>('ETHUSD');   \n\n    return useMemo(\n        () => ({\n            marketticker,\n            setMarketTicker\n        }),\n        [marketticker, setMarketTicker],\n    )\n}\n","import React, { useEffect } from \"react\"\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Box from '@mui/material/Box';\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\nimport {AMM} from \"../../../container/amm\";\n\nfunction MarketSelector() {\n\tconst MarketList = [\"ETHUSD\", \"BNBUSD\", \"AVAXUSD\"];  \t\n\n\tconst {marketticker, setMarketTicker} = AMM.useContainer();\n\tconst [open, setOpen] = React.useState(false);\n\n  const handleChange = (event: SelectChangeEvent<typeof marketticker>) => {\n    setMarketTicker(event.target.value);\t\t\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n\t// useEffect(() => {\n\t// \tconsole.log(\"state of marketer\", marketticker);\t\t\n\t// }, [marketticker])\n\n  return (\n    <Box>      \n      <FormControl sx={{ m: 1, width: '300px' }}>\n        <InputLabel size=\"small\" shrink>Market</InputLabel>\n        <Select\n          labelId=\"demo-controlled-open-select-label\"\n          id=\"demo-controlled-open-select\"\n          open={open}\n          defaultValue={\"ETHUSD\"}\n          onClose={handleClose}\n          onOpen={handleOpen}        \n          label=\"Market\"\n          onChange={handleChange}\n        >          \n\t\t\t\t\t{MarketList.map((market) => (\n\t\t\t\t\t\t<MenuItem key={market} value={market}>{market}</MenuItem>\t\n\t\t\t\t\t))}\n        </Select>\n      </FormControl>\n    </Box>\n  );\n}\n\nexport default MarketSelector\n","import { Big } from \"big.js\"\nimport { BigNumber } from \"ethers\"\n\nexport const ERC20_DECIMAL_DIGITS = 18\nexport const USDC_DECIMAL_DIGITS = 6\n\nexport const USDC_PRECISION = 2\nexport const Slippage_PRECISION = 2\n\nexport const BIG_ZERO = new Big(0)\n\nexport interface Decimal {\n    d: BigNumber\n}\n","import { ERC20_DECIMAL_DIGITS, USDC_PRECISION } from \"../constants/number\"\n\nimport Big from \"big.js\"\nimport { BigNumber } from \"ethers\"\nimport { formatUnits } from \"ethers/lib/utils\"\n\nexport interface Decimal {\n    d: BigNumber\n}\n\n// Big Number to...\nexport function bigNum2FixedStr(\n    val: BigNumber,\n    decimals: number = ERC20_DECIMAL_DIGITS,\n    digits: number = USDC_PRECISION,\n): string {\n    return Number.parseFloat(formatUnits(val, decimals)).toFixed(digits)\n}\n\nexport function bigNum2Big(val: BigNumber, decimals: number = ERC20_DECIMAL_DIGITS): Big {\n    return new Big(val.toString()).div(new Big(10).pow(decimals))\n}\n\nexport function bigNum2Decimal(val: BigNumber): Decimal {\n    return { d: val }\n}\n\n// Big to...\nexport function big2BigNum(val: Big, decimals: number = ERC20_DECIMAL_DIGITS): BigNumber {\n    return BigNumber.from(val.mul(new Big(10).pow(decimals)).toFixed(0))\n}\n\nexport function big2Decimal(val: Big): Decimal {\n    return {\n        d: big2BigNum(val, ERC20_DECIMAL_DIGITS),\n    }\n}\n\n// Decimal to...\nexport function decimal2Big(decimal: Decimal): Big {\n    return bigNum2Big(decimal.d)\n}\n\n// check regex 101 online, https://regex101.com/r/EeneAE/1\n// to understand this regex\nconst regexUSLocaleNumber = new RegExp(/\\d(?=(\\d{3})+\\.)/g)\n\n// format number like 1000 => 1,000\nexport function numberWithCommas(number: string = \"\") {\n    return number.replace(regexUSLocaleNumber, \"$&,\")\n}\n\nexport function numberWithCommasUsdc(number: Big = new Big(0)) {\n    return numberWithCommas(number.toFixed(USDC_PRECISION))\n}\n\n// TODO: check is valid number\n// TODO: check is positive\n// TODO: use in slippage if possible\n// ex: if the input is 1.005 and the digits is 2, the function will return 1.00\nexport function formatInput(input: string, digits: number): string {\n    const firstDotIndex = input.indexOf(\".\")\n    const formattedString = input\n        .split(\"\")\n        .filter((alphabet, index) => {\n            return alphabet !== \".\" || index === firstDotIndex\n        })\n        .join(\"\")\n    return formattedString.includes(\".\") && formattedString.length > formattedString.indexOf(\".\") + (digits + 1)\n        ? formattedString.substr(0, formattedString.indexOf(\".\") + (digits + 1))\n        : formattedString\n}\n","import { useEffect, useState } from \"react\"\n\nconst DEFAULT_DELAY = 200\n\ninterface DebounceArgs<T> {\n    value: T\n    delay?: number\n    onBeforeDebounce?: Function\n    onAfterDebounce?: Function\n}\n\nexport function useDebounce<T>({ value, delay = DEFAULT_DELAY, onBeforeDebounce, onAfterDebounce }: DebounceArgs<T>) {\n    const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n    useEffect(() => {\n        if (onBeforeDebounce) {\n            onBeforeDebounce(value)\n        }\n\n        const handler = setTimeout(() => {\n            setDebouncedValue(value)\n            if (onAfterDebounce) {\n                onAfterDebounce(value)\n            }\n        }, delay)\n\n        return () => {\n            clearTimeout(handler)\n        }\n    }, [value, delay, onBeforeDebounce, onAfterDebounce])\n\n    return debouncedValue\n}\n","import {useState, useMemo, useCallback, useEffect} from \"react\";\n\nimport {\t\n\tBox,\t\t \n\tTextField,\n\tInputAdornment\t\n} from \"@mui/material\";\n\nimport Big from \"big.js\"\n\nimport {Trade} from '../../../container/trade';\nimport { USDC_PRECISION } from \"../../../constants/number\";\nimport { formatInput } from \"../../../util/format\"\n\nimport { useDebounce } from \"../../../hooks/useDebounce\"\n\nfunction Collateral() {\n\tconst {collateral, setCollateral} = Trade.useContainer();\t\n\tconst [_collateral, _setCollateral] = useState<string>(\"\");\n\tconsole.log(\"Collateral\", collateral);\n\n\tconst debouncedCollateral = useDebounce({ value: _collateral, delay: 800 });\n\t\n\tconst handleOnInput = useCallback(\n\t\te => {\n\t\t\tconst value = e.target.value;\n\t\t\tif (value >= 0) {\n\t\t\t\tconst formattedValue = formatInput(value, USDC_PRECISION);\n\t\t\t\t_setCollateral(formattedValue);\n\t\t\t}\n\t\t},\n\t\t[_setCollateral],\n\t)\n\n\tuseEffect(() => {\n\t\t/* reset collateral to null */\n\t\tif (debouncedCollateral === \"\") {\n\t\t\t// setCollateral(null);\n\t\t\treturn;\n\t\t}\n\t\t/* detect if the value is different */\n\t\tconst b_debouncedCollateral = new Big(debouncedCollateral);\n\t\tif (!collateral?.eq(b_debouncedCollateral)) {\n\t\t\tsetCollateral(b_debouncedCollateral);\n\t\t}\n\t}, [collateral, debouncedCollateral, setCollateral]);\n\t\n\n\treturn useMemo(\n\t\t() => (\n\t\t<Box sx={{my: 2}}>\n\t\t\t<TextField\n\t\t\t\tid=\"outlined-name\"\n\t\t\t\tlabel=\"Collateral\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tvalue={_collateral}\n\t\t\t\tplaceholder=\"1\"\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true,\n\t\t\t\t}}\t\t\t\t\n\t\t\t\tInputProps={{\n\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">USDC</InputAdornment>,\n\t\t\t\t}}\n\t\t\t\tonChange={handleOnInput}\n\t\t\t\tsx={{width: '300px'}}\n\t\t\t/>\n\t\t</Box>\t\t\n\t\t), [_collateral, handleOnInput]\n\t)\n}\n\nexport default Collateral;","import {useState, useMemo, useCallback, useEffect} from \"react\";\n\nimport {\t\n\tBox,\t\t \n\tTextField,\n\tInputAdornment\t\n} from \"@mui/material\";\n\nimport Big from \"big.js\"\n\nimport {Trade} from '../../../container/trade';\nimport { Slippage_PRECISION } from \"../../../constants/number\";\nimport { formatInput } from \"../../../util/format\"\n\nimport { useDebounce } from \"../../../hooks/useDebounce\"\n\nfunction Slippage() {\n\tconst {slippage, setSlippage} = Trade.useContainer();\t\n\tconst [_slippage, _setSlippage] = useState<string>(\"\");\n\tconsole.log(\"Slippage\", slippage);\n\n\tconst debouncedSlippage = useDebounce({ value: _slippage, delay: 800 });\n\t\n\tconst handleOnInput = useCallback(\n\t\te => {\n\t\t\tconst value = e.target.value;\n\t\t\tif (value >= 0) {\n\t\t\t\tconst formattedValue = formatInput(value, Slippage_PRECISION);\n\t\t\t\t_setSlippage(formattedValue);\n\t\t\t}\n\t\t},\n\t\t[_setSlippage],\n\t)\n\n\tuseEffect(() => {\n\t\t/* reset collateral to null */\n\t\tif (debouncedSlippage === \"\") {\n\t\t\t// setSlippage(null);\n\t\t\treturn;\n\t\t}\n\t\t/* detect if the value is different */\n\t\tconst b_debouncedSlippage = new Big(debouncedSlippage);\n\t\tif (!slippage?.eq(b_debouncedSlippage)) {\n\t\t\tsetSlippage(b_debouncedSlippage);\n\t\t}\n\t}, [slippage, debouncedSlippage, setSlippage]);\n\t\n\n\treturn useMemo(\n\t\t() => (\n\t\t<Box sx={{my: 2}}>\n\t\t\t<TextField\n\t\t\t\tid=\"outlined-name\"\n\t\t\t\tlabel=\"Slippage\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tvalue={_slippage}\n\t\t\t\tplaceholder=\"0.02\"\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tshrink: true,\n\t\t\t\t}}\t\t\t\t\n\t\t\t\tInputProps={{\n\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">%</InputAdornment>,\n\t\t\t\t}}\n\t\t\t\tonChange={handleOnInput}\n\t\t\t\tsx={{width: '300px'}}\n\t\t\t/>\n\t\t</Box>\t\t\n\t\t), [_slippage, handleOnInput]\n\t)\n}\n\nexport default Slippage;","import {useState, useMemo, useCallback, useEffect} from \"react\";\n\nimport {\t\n\tBox,\t\t \n\tButton,\n\tTextField,\n\tTypography,\n\tInputAdornment\t\n} from \"@mui/material\";\n\nimport { useWeb3Context } from \"../../../hooks/web3Context\";\nimport {Trade} from '../../../container/trade';\nimport {AMM} from \"../../../container/amm\";\nimport { DEFAULD_NETWORK } from \"../../../constants/blockchain\";\nimport { PerpetualProtocol, PositionSide, SupportedChainIds, Wallet, big2BigNumberAndScaleUp, getTransaction, PositionDraft } from \"@perp/sdk-curie\";\n\nimport Big from \"big.js\";\n\nfunction SendTransaction() {\t\n\tconst { connected, web3, address, provider, providerChainID} = useWeb3Context();  \n\tconst [oppositeAmount, setOppositeAmount] = useState('');\n\tconst [entryPrice, setEntryPrice] = useState('');\n\tconst [tradingFee, setTradingFee] = useState('');\n\tconst [priceImpact, setPriceImpact] = useState('');\n\tconst [PositionOpen, setPositionOpen] = useState(false);\n\tconst [perpetualObject, setPerpetualObject] = useState<PerpetualProtocol>(new PerpetualProtocol({\n\t\t// chainId: SupportedChainIds.OPTIMISM_GOERLI,\n\t\tchainId: SupportedChainIds.OPTIMISM,   \n\t\t// chainId: 420,                 \n\t\tproviderConfigs: [\n\t\t\t{\n\t\t\t\trpcUrl: \"https://mainnet.optimism.io\",\n\t\t\t\t// rpcUrl: \"https://goerli.optimism.io/\",\t\t\t\t\t\t\t\t\n\t\t\t},\n\t\t],\n\t}));\n\tconst [newPositionDraft, setNewPositionDraft] = useState<PositionDraft<string> | undefined>();\n\t\n\tlet perp: PerpetualProtocol;\n\tlet _newPositionDraft: PositionDraft<string> | undefined\n\n\tconst {side} = Trade.useContainer();\n\tconst {marketticker} = AMM.useContainer();\n\tconst {collateral} = Trade.useContainer();\n\tconst {slippage} = Trade.useContainer();\n\tconst isAmountInputBase = false;\n\tlet tickerSymbol = marketticker;\n  \tlet amountInput = collateral;\t\t\n\tconst spender = \"0xAD7b4C162707E0B2b5f6fdDbD3f8538A5fbA0d60\";\n\tconst outputSymbol = marketticker.substring(0, marketticker.length - 3);\n\n\tuseEffect(() => {        \n\t\tasync function BeforeAll() {\n\t\t\tif( connected && providerChainID === DEFAULD_NETWORK ) {\n\n\t\t\t\tconsole.log(\"ChainId\", SupportedChainIds.OPTIMISM);\n\t\t\t\tawait perpetualObject.init();\n\t\t\t\tawait perpetualObject.connect({ signer: provider.getSigner() });\n\t\t\t\t// const accountValue = await perp.contractReader.getNativeBalance(address); \n\t\t\t\t// console.log(\"Account Native value\", accountValue);\n\t\t\t\t// const VaultBalance = await perp.contractReader.getVaultBalanceOfSettlementToken(address); \n\t\t\t\t// console.log(\"Account Vault value\", VaultBalance);\n\t\t\t\t// const Allowance = await perp.contractReader.getAllowanceOfSettlementToken(address, spender); \n\t\t\t\t// console.log(\"Allowance value\", Allowance);\n\t\t\t\t// const PositionAction = await perp.contractReader.getClearingHouseOpenPositionAction(); \n\t\t\t\t// console.log(\"Position Action\", PositionAction);\n\t\t\t\t_newPositionDraft = perpetualObject.clearingHouse?.createPositionDraft({\n\t\t\t\t\ttickerSymbol,\n\t\t\t\t\tside,\n\t\t\t\t\tamountInput,\n\t\t\t\t\tisAmountInputBase\n\t\t\t\t});\n\t\t\t\tconsole.log(\"_new:::\", _newPositionDraft);\n\t\t\t\t\n\t\t\t\tsetNewPositionDraft(_newPositionDraft);\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t// console.log(\"Entry Price\", newPositionDraft!.getEntryPrice());\n\t\t\t\tsetEntryPrice((await _newPositionDraft!.getEntryPrice()).toFixed(2));\n\t\t\t\tsetTradingFee((await _newPositionDraft!.getTransactionFee()).toFixed(8));\n\t\t\t\tsetPriceImpact((await _newPositionDraft!.getPriceImpact()).toFixed(5));\n\t\t\t\tconst oppositeAmountBound = await _newPositionDraft?.getOppositeAmountBound(slippage); \n\t\t\t\tsetOppositeAmount(oppositeAmountBound!.toFixed(7));\t\n\t\t\t\t// perp.clearingHouse?.openPosition(newPositionDraft!, slippage);  \t\t\t\t\n\t\t\t}\n\t\t}\n\t\tBeforeAll();\n\t\t\t\t\n\t}, [connected, providerChainID, marketticker, side, collateral, slippage]); \n\n\tconst handleOpen = () => {\n\t\tperpetualObject?.clearingHouse?.openPosition(newPositionDraft!, slippage);    \n\t\tconsole.log(\"Perp openPosition\", newPositionDraft);\n  \t};\n\n\tconst handleClose = async () => {\n\t\tconst position = await perpetualObject?.positions?.getTakerPositionByTickerSymbol(tickerSymbol);\n\t\tif(position !== undefined) {\n\t\t\tsetPositionOpen(true);\n\t\t\tawait perpetualObject?.clearingHouse?.closePosition(position!, slippage) \n\t\t} else {\n\t\t\tsetPositionOpen(false)\n\t\t};\t\n  \t};\n\n\treturn (\n\t\t<Box sx={{mt: 2}}>\n\t\t\t<Box sx={{mb: 2}}>\n\t\t\t\t<TextField\n\t\t\t\t\tid=\"outlined-name\"\n\t\t\t\t\tlabel=\"Output\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tdisabled\n\t\t\t\t\tvalue={oppositeAmount}\n\t\t\t\t\tplaceholder=\"0\"\n\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t}}\t\t\t\t\n\t\t\t\t\tInputProps={{\t\t\t\t\t\t\n\t\t\t\t\t\tendAdornment: <InputAdornment position=\"end\">{outputSymbol}</InputAdornment>,\n\t\t\t\t\t}}\n\t\t\t\t\tsx={{width: '300px'}}\n\t\t\t\t/>\n\t\t\t</Box>\n\t\t\t<Typography sx={{width: '300px', mx: 'auto', py: 1, textAlign: 'left', color: 'blue'}}>\n\t\t\t\tSummary\n\t\t\t</Typography>\n\t\t\t<Box sx={{width: '300px', mx: 'auto', display: 'flex', justifyContent: 'space-between', pb: 1}}>\n\t\t\t\t<Typography sx={{fontSize: '14px'}}>Entry Price</Typography>\n\t\t\t\t<Typography sx={{fontSize: '14px'}}>${entryPrice}</Typography>\n\t\t\t</Box>\n\t\t\t<Box sx={{width: '300px', mx: 'auto', display: 'flex', justifyContent: 'space-between', pb: 1}}>\n\t\t\t\t<Typography sx={{fontSize: '14px'}}>Trading Fee</Typography>\n\t\t\t\t<Typography sx={{fontSize: '14px'}}>${tradingFee}</Typography>\n\t\t\t</Box>\n\t\t\t<Box sx={{width: '300px', mx: 'auto', display: 'flex', justifyContent: 'space-between', pb: 1}}>\n\t\t\t\t<Typography sx={{fontSize: '14px'}}>Price Impact</Typography>\n\t\t\t\t<Typography sx={{fontSize: '14px'}}>{priceImpact}%</Typography>\n\t\t\t</Box>\n\t\t\t<Button variant=\"contained\" \n\t\t\t\tdisabled={connected === false}\n\t\t\t\tsx={{width: '300px', paddingY: '12px', \n\t\t\t\t\tbackgroundColor: side === PositionSide.LONG? 'success.light': '#ef5350', \n\t\t\t\t\tdisplay: 'block',\n\t\t\t\t\tmb: 2,\n\t\t\t\t\tmx: 'auto',\n\t\t\t\t\t'&: hover': {backgroundColor: side === PositionSide.LONG? 'success.main': '#f44336'},\n\t\t\t\t\t'&: disabled': {backgroundColor: side === PositionSide.LONG? 'success.light': '#ef5350', color: 'black', opacity: 0.8} \n\t\t\t\t}}\n\t\t\t\tonClick={handleOpen}\t\t\t\n\t\t\t>\n\t\t\t\tConfirm {side}\n\t\t\t</Button>\n\t\t\t<Button variant=\"contained\" \n\t\t\t\tdisabled={connected === false}\n\t\t\t\tsx={{width: '300px', paddingY: '12px', \n\t\t\t\t\tbackgroundColor: 'black', \n\t\t\t\t\t'&: hover': {backgroundColor: 'black', color: 'white'},\n\t\t\t\t\t'&: disabled': {backgroundColor: 'gray', color: 'black', opacity: 0.8} \n\t\t\t\t}}\n\t\t\t\tonClick={handleClose}\t\t\t\n\t\t\t>\n\t\t\t\tClose Position\n\t\t\t</Button>\n\t\t</Box>\n\t)\n}\n\nexport default SendTransaction;","import {useState, useEffect} from \"react\";\n\nimport {\n\tAppBar,\n\tBox,\n\tButton,\n\tContainer,    \n\tTypography,\n} from \"@mui/material\";\n\nimport SideSwitcher from \"./components/Sideswitcher\";\nimport MarketSelector from \"./components/Marketselector\";\nimport Collateral from \"./components/Collateral\";\nimport Slippage from \"./components/Slippage\";\nimport SendTransaction from \"./components/SendTransaction\";\n\nfunction Trade() {\n\treturn (\t\t\n\t\t<Container maxWidth=\"xl\">\n\t\t\t<SideSwitcher />\n\t\t\t<MarketSelector />\n\t\t\t<Collateral />\n\t\t\t<Slippage />\n\t\t\t<SendTransaction />\n\t\t</Container>\t\t\n\t)\n}\n\nexport default Trade;","import React from 'react';\nimport ConnectMenu from \"./Header\";\nimport Trade from \"./Pages/Trade\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ConnectMenu />   \n      <Trade />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Web3ContextProvider } from \"./hooks/web3Context\";\nimport {Trade} from './container/trade';\nimport { AMM } from './container/amm';\n\nconst Providers = ((...providers: any[]) => ({ children }: { children: React.ReactNode }) => {\n  return providers.reduceRight((providers, provider) => {\n      const Provider = provider.component || provider\n      const props = provider.props || {}\n      return <Provider {...props}>{providers}</Provider>\n  }, children)\n})(  \n  Trade.Provider,  \n  AMM.Provider\n)\n\nReactDOM.render(\n  <React.StrictMode>    \n    <Web3ContextProvider>\n      <Providers>\n      <App />      \n      </Providers>\n    </Web3ContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}